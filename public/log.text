Thu 19 Oct 2023 10:01:50 BST
â€¢ lol. turns out the canvas always appears to blank to the main thread when it's
off screen. have to come up with a new plan for getting waveforms into buttons.

Thu 19 Oct 2023 12:00:13 BST
removing this piece of code:

	// find the top and bottom
	for (let f32 of visibleSound) {
	  max = f32 > max ? f32 : max
	  min = f32 < min ? f32 : min
	}

i think it might matter if the sound being input was ever 32-bit floating point(?)
but right now it never will be and using -1 to 1 will mean i get to remove 1
extra loop. the code in the canvas has to run 60 times a second so it's
important to do as little as possible.

the sound worker's code runs like 500 times a second!

Thu 19 Oct 2023 13:39:04 BST
also this code:
	let colorSpace = matchMedia("(color-gamut: p3)").matches
		? "display-p3"
		: "srgb"


Fri 20 Oct 2023 06:54:39 BST
i was reading the .wav and .aif specs last night, and i think it's possible to
create a .wav file that contains an entire bento project, and can also be
listened to on its own.

Fri 20 Oct 2023 07:17:13 BST
when you're making a worker you can pass `{type: "module"}' as its second arg,
then you can use import/export. up until i learned this i was having a real hard
time sharing code with the workers.

Sat 21 Oct 2023 06:19:33 BST
looks like you can't make an input draggable? i was going to use a wrapper div
for the step boxes, because i'd already ruled out web components due to my
earlier failed experiment. but then i realized i could use the name "bento-box"
for a web component so i'm going to do that. the bento box is really the
.pattern conceptually, but lets not let that get in the way of:

	<bento-box on></bento-box>
   <bento-box></bento-box>
	<bento-box></bento-box>
	<bento-box></bento-box>

or maybe it should just be <bento-box length="16"></bento-box>

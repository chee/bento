{"mappings":"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","names":["require_ms","__commonJSMin","exports","module","s","m","h","d","w","y","val","options","type","parse","fmtLong","fmtShort","str","match","ms","msAbs","plural","name","isPlural","require_common","__commonJSMin","exports","module","setup","env","createDebug","coerce","disable","enable","enabled","destroy","key","selectColor","namespace","hash","i","prevTime","enableOverride","namespacesCache","enabledCache","debug","args","self","curr","ms","index","match","format","formatter","val","extend","v","delimiter","newDebug","namespaces","split","len","toNamespace","name","regexp","require_browser","__commonJSMin","exports","module","formatArgs","save","load","useColors","localstorage","warned","m","args","c","index","lastC","match","namespaces","r","formatters","v","error","require_eventemitter3","__commonJSMin","exports","module","has","prefix","Events","EE","fn","context","once","addListener","emitter","event","listener","evt","clearEvent","EventEmitter","names","events","name","handlers","i","l","ee","listeners","a1","a2","a3","a4","a5","len","args","length","j","require_xstate_dev_cjs","__commonJSMin","exports","getGlobal","getDevTools","w","registerService","service","devTools","devToolsAdapter","require_raise_cde45f56_cjs","__commonJSMin","exports","dev_dist_xstateDev","Mailbox","_process","event","enqueued","consumed","STATE_DELIMITER","TARGETLESS_KEY","NULL_EVENT","STATE_IDENTIFIER","WILDCARD","XSTATE_INIT","XSTATE_ERROR","XSTATE_STOP","createAfterEvent","delayRef","id","createDoneStateEvent","output","createDoneActorEvent","invokeId","createErrorActorEvent","error","createInitEvent","input","reportUnhandledError","err","symbolObservable","matchesState","parentStateId","childStateId","parentStateValue","toStateValue","childStateValue","key","toStatePath","stateId","isArray","result","segment","i","stateValue","isMachineSnapshot","statePath","pathToStateValue","value","marker","previous","mapValues","collection","iteratee","collectionKeys","toArrayStrict","toArray","resolveOutput","mapper","context","self","isErrorActorEvent","toTransitionConfigArray","configLike","transitionLike","normalizeTarget","target","toObserver","nextHandler","errorHandler","completionHandler","isObserver","createInvokeId","stateNodeId","index","resolveReferencedActor","machine","src","match","indexStr","nodeId","invokeConfig","getAllOwnEventDescriptors","snapshot","sn","createScheduledEventId","actorRef","idCounter","createSystem","rootActor","options","children","keyedActors","reverseKeyedActors","inspectionObservers","timerMap","clock","logger","scheduler","source","delay","scheduledEvent","scheduledEventId","system","timeout","sendInspectionEvent","resolvedInspectionEvent","observer","sessionId","systemId","existing","observerOrFn","scheduledEvents","scheduledId","$$ACTOR_TYPE","ProcessingStatus","defaultOptions","fn","ms","Actor","logic","resolvedOptions","parent","syncSnapshot","inspect","child","emittedEvent","listeners","wildcardListener","allListeners","handler","persistedState","deferredFn","nextListenerOrObserver","errorListener","completeListener","type","wrappedHandler","initEvent","nextState","caughtError","reportError","err2","devTools","createActor","interpret","resolveCancel","_","actionArgs","actionParams","sendId","resolvedSendId","executeCancel","actorScope","cancel","args","params","resolveSpawn","_actionParams","resolvedId","cloneMachineSnapshot","executeSpawn","spawnChild","resolveStop","actorRefOrString","resolvedActorRef","executeStop","stopChild","stop","checkStateIn","isStateId","stateIn","checkNot","guards","evaluateGuard","not","guard","checkAnd","and","checkOr","or","isInline","resolved","guardArgs","guardParams","isAtomicStateNode","stateNode","getChildren","getProperAncestors","toStateNode","ancestors","m","getAllStateNodes","stateNodes","nodeSet","adjList","getAdjList","s","getInitialStateNodesWithTheirAncestors","initialStates","initialStateNode","getValueFromAdj","baseNode","childStateNodes","childStateNode","getStateValue","rootNode","config","isInFinalState","stateNodeSet","str","getCandidates","receivedEventType","eventDescriptor","partialEventTokens","eventTokens","tokenIndex","partialEventToken","eventToken","a","b","getDelayedTransitions","afterConfig","mutateEntryExit","afterEvent","eventType","raise","configTransition","resolvedTransition","resolvedDelay","transition","delayedTransition","formatTransition","descriptor","transitionConfig","normalizedTarget","reenter","resolveTarget","t","formatTransitions","transitions","transitionsConfig","invokeDef","formatInitialTransition","_target","resolvedTarget","targets","isInternalTarget","getStateNodeByPath","resolveHistoryDefaultTransition","isHistoryNode","states","getInitialStateNodes","initialState","ancestor","set","iter","descStateNode","getStateNode","stateKey","arrayStatePath","currentStateNode","getStateNodes","childStateKeys","subStateKey","allSubStateNodes","subStateNode","subStateNodes","transitionAtomicNode","next","transitionCompoundNode","subStateKeys","transitionNode","transitionParallelNode","allInnerTransitions","subStateValue","innerTransitions","getHistoryNodes","isDescendant","parentStateNode","hasIntersection","s1","s2","set1","set2","item","removeConflictingTransitions","enabledTransitions","historyValue","filteredTransitions","t1","t1Preempted","transitionsToRemove","t2","computeExitSet","t3","findLeastCommonAncestor","head","tail","getEffectiveTargetStates","targetNode","node","getTransitionDomain","targetStates","lca","statesToExit","domain","areStateNodeCollectionsEqual","prevStateNodes","nextStateNodeSet","microstep","currentSnapshot","isInitial","internalQueue","mutStateNodeSet","exitStates","resolveActionsAndContext","enterStates","nextStateNodes","state","e","getMachineOutput","rootCompletionNode","doneStateEvent","nextSnapshot","statesToEnter","statesForDefaultEntry","computeEntrySet","completedNodes","stateNodeToEnter","actions","initialActions","ancestorMarker","addDescendantStatesToEnter","addAncestorStatesToEnter","historyStateNodes","addProperAncestorStatesToEnter","historyDefaultTransition","reentrancyDomain","anc","changedHistory","exitStateNode","historyNode","predicate","def","executingCustomAction","resolveAndExecuteActionsWithContext","extra","retries","intermediateSnapshot","action","executeAction","resolvedAction","builtinAction","deferredActorIds","macrostep","microstates","addMicrostate","microstate","stopChildren","nextEvent","currentEvent","isErr","selectTransitions","shouldSelectEventlessTransitions","selectEventlessTransitions","previousState","enabledTransitionSet","atomicStates","loop","resolveStateValue","allStateNodes","machineSnapshotMatches","testValue","machineSnapshotHasTag","tag","machineSnapshotCan","transitionData","machineSnapshotToJSON","nodes","tags","getMeta","toJSON","can","hasTag","matches","jsonValues","machineSnapshotGetMeta","acc","createMachineSnapshot","getPersistedSnapshot","childrenJson","persistContext","contextPart","copy","resolveRaise","eventOrExpr","delaysMap","resolvedEvent","configDelay","executeRaise","require_xstate_actors_cjs","__commonJSMin","exports","guards_dist_xstateGuards","fromTransition","transition","initialContext","snapshot","event","actorScope","_","input","instanceStates","fromCallback","callback","state","self","system","emit","callbackState","listener","receiver","XSTATE_OBSERVABLE_NEXT","XSTATE_OBSERVABLE_ERROR","XSTATE_OBSERVABLE_COMPLETE","fromObservable","observableCreator","value","err","_subscription","fromEventObservable","lazyObservable","XSTATE_PROMISE_RESOLVE","XSTATE_PROMISE_REJECT","controllerMap","fromPromise","promiseCreator","scope","resolvedValue","controller","response","errorData","emptyLogic","createEmptyActor","require_log_098d2ed5_cjs","__commonJSMin","exports","guards_dist_xstateGuards","createSpawner","actorScope","machine","context","event","spawnedChildren","spawn","src","options","systemId","input","logic","actorRef","resolveAssign","snapshot","actionArgs","actionParams","assignment","assignArgs","partialUpdate","key","propAssignment","updatedContext","assign","args","params","resolveEmit","_","eventOrExpr","resolvedEvent","executeEmit","emit","SpecialTargets","resolveSendTo","to","id","delay","extra","delaysMap","resolvedDelay","configDelay","resolvedTarget","targetActorRef","retryResolveSendTo","executeSendTo","sendTo","sendParent","forwardTo","target","resolveEnqueueActions","collect","actions","enqueue","action","guard","enqueueActions","resolveLog","value","label","executeLog","logger","log","require_xstate_cjs","__commonJSMin","exports","actors_dist_xstateActors","guards_dist_xstateGuards","log","assertEvent","event","type","types","typesText","cache","memo","object","key","fn","memoizedData","EMPTY_OBJECT","toSerializableAction","action","StateNode","_StateNode","config","options","stateConfig","t","state","invokeConfig","i","src","systemId","resolvedId","resolvedSrc","onDone","onError","invokeDefValues","descriptor","map","transition","snapshot","eventType","actions","selectedTransition","candidates","candidate","guard","resolvedContext","guardPassed","err","guardType","states","events","stateId","STATE_IDENTIFIER","StateMachine","_StateMachine","implementations","guards","actors","delays","resolvedStateValue","nodeSet","actorScope","initEvent","internalQueue","context","preInitial","assignment","spawn","self","input","preInitialState","nextState","macroState","child","fullPath","relativePath","resolvedStateId","stateNode","_actorScope","children","snapshotChildren","actorId","actorData","childState","logic","actorRef","restoredSnapshot","seen","reviveContext","contextPart","value","createMachine","createInertActorScope","actorLogic","getInitialSnapshot","getNextSnapshot","inertActorScope","setup","schemas","SimulatedClock","timeout","id","time","sorted","_idA","timeoutA","_idB","timeoutB","endA","ms","toPromise","actor","resolve","reject","defaultWaitForOptions","waitFor","predicate","resolvedOptions","res","rej","signal","done","handle","dispose","sub","abortListener","checkEmitted","emitted","exports","isBytes","number","bool","bytes","hash","exists","output","n","b","a","lengths","h","instance","checkFinished","out","min","assert","exports","exports","isBytes","byteSwap32","bytesToHex","hexToBytes","asyncLoop","utf8ToBytes","toBytes","concatBytes","checkOpts","wrapConstructor","wrapConstructorWithOpts","wrapXOFConstructorWithOpts","randomBytes","crypto_1","_assert_js_1","a","u8","arr","u32","createView","rotr","word","shift","rotl","byteSwap","n","i","hexes","_","bytes","hex","asciis","asciiToBase16","char","hl","al","array","ai","hi","n1","n2","nextTick","iters","tick","cb","ts","diff","str","data","arrays","sum","res","pad","Hash","toStr","defaults","opts","hashCons","hashC","msg","tmp","bytesLength","_assert_js_1","utils_js_1","setBigUint64","view","byteOffset","value","isLE","_32n","_u32_max","wh","wl","h","Chi","a","b","c","exports","Maj","HashMD","blockLen","outputLen","padOffset","data","buffer","len","pos","take","dataView","out","i","oview","outLen","state","res","to","length","finished","destroyed","_md_js_1","utils_js_1","SHA256_K","SHA256_IV","SHA256_W","SHA256","A","B","C","D","E","F","G","H","view","offset","i","W15","W2","s0","s1","sigma1","T1","T2","exports","SHA224","require_src","__commonJSMin","exports","module","base","ALPHABET","BASE_MAP","j","i","x","xc","BASE","LEADER","FACTOR","iFACTOR","encode","source","zeroes","length","pbegin","pend","size","b58","carry","it1","it2","str","decodeUnsafe","psz","b256","it3","it4","vch","decode","string","buffer","require_bs58","__commonJSMin","exports","module","basex","ALPHABET","require_base","__commonJSMin","exports","module","base58","checksumFn","encode","payload","payloadU8","checksum","length","both","decodeRaw","buffer","newChecksum","decodeUnsafe","string","decode","require_bs58check","__commonJSMin","exports","module","sha256","bs58checkBase","sha256x2","buffer","require_sha256","__commonJSMin","exports","module","root","factory","sha256","k","K","hashBlocks","w","v","p","pos","len","a","b","c","d","e","f","g","h","u","i","j","t1","t2","Hash","data","dataLength","dataPos","out","bytesHashed","left","bitLenHi","bitLenLo","padLength","from","HMAC","key","pad","hash","digest","hmac","fillBuffer","buffer","info","counter","num","hkdfSalt","hkdf","salt","length","okm","hmac_","bufpos","pbkdf2","password","iterations","dkLen","prf","ctr","t","dk","next_slim_exports","__export","Counter","Float64","Int","RawString","Uint","applyChanges","block","change","changeAt","clone","decodeChange","decodeSyncMessage","decodeSyncState","deleteAt","diff","dump","emptyChange","encodeChange","encodeSyncMessage","encodeSyncState","equals","free","from","generateSyncMessage","getActorId","getAllChanges","getBackend","getChanges","getConflicts","getCursor","getCursorPosition","getHeads","getHistory","getLastLocalChange","getMissingDeps","getObjectId","hasHeads","hasOurChanges","init","initSyncState","initializeBase64Wasm","initializeWasm","insertAt","inspectChange","isAutomerge","isWasmInitialized","joinBlock","load","loadIncremental","mark","marks","marksAt","merge","receiveSyncMessage","save","saveIncremental","saveSince","spans","splice","splitBlock","stats","toJS","topoHistoryTraversal","unmark","updateBlock","updateSpans","updateText","view","wasmInitialized","STATE","TRACE","OBJECT_ID","IS_PROXY","CLEAR_CACHE","UINT","INT","F64","COUNTER","TEXT","Text","_Text","text","TEXT","index","elems","elem","chars","value","STATE","values","v","numDelete","callback","searchElement","fromIndex","other","test","f","sep","start","end","Counter","value","COUNTER","_delta","WriteableCounter","context","path","objectId","key","delta","getWriteableCounter","Int","value","INT","Uint","UINT","Float64","F64","RawString","val","parseListIndex","key","valueAt","target","prop","context","objectId","path","textV2","value","datatype","val","mapProxy","listProxy","textProxy","getWriteableCounter","import_value","type","UINT","INT","F64","COUNTER","RawString","Text","isSameDocument","printPath","_b","_c","STATE","MapHandler","cache","OBJECT_ID","IS_PROXY","TRACE","CLEAR_CACHE","list","proxyList","i","assertString","assertText","text","map","proxyMap","keys","ListHandler","index","instance","listMethods","elem","TextHandler","textMethods","proxied","rootProxy","numDelete","start","end","length","proxyText","o","values","last","len","first","del","vals","result","e","f","other","v","sep","initialValue","search","fromIndex","num","spans","chars","jsonPointerComponents","component","stableConflictAt","context","objectId","prop","conflictAt","conflictId","Text","unstableConflictAt","textV2","handleText","values","result","fullVal","mapProxy","listProxy","Counter","getRandomValues","rnds8","rng","regex_default","validate","uuid","regex_default","validate_default","byteToHex","i","unsafeStringify","arr","offset","stringify","uuid","validate_default","stringify_default","parse","uuid","validate_default","v","arr","parse_default","randomUUID","native_default","v4","options","buf","offset","native_default","rnds","rng","i","unsafeStringify","v4_default","defaultFactory","v4_default","factory","uuid","newFactory","automerge_wasm_exports","__export","Automerge","SyncState","TextRepresentation","create","decodeChange","decodeSyncMessage","decodeSyncState","automerge_wasm_default","encodeChange","encodeSyncMessage","encodeSyncState","exportSyncState","importSyncState","initSync","initSyncState","load","wasm","heap","getObject","idx","heap_next","dropObject","takeObject","ret","WASM_VECTOR_LEN","cachedUint8Memory0","getUint8Memory0","cachedTextEncoder","encodeString","arg","view","buf","passStringToWasm0","malloc","realloc","ptr","len","mem","offset","code","isLikeNone","x","cachedInt32Memory0","getInt32Memory0","cachedTextDecoder","getStringFromWasm0","addHeapObject","obj","cachedFloat64Memory0","getFloat64Memory0","debugString","val","type","description","name","length","debug","builtInMatches","className","_assertClass","instance","klass","options","retptr","r0","r1","r2","data","change","state","message","msg","handleError","f","args","e","AutomergeFinalization","_Automerge","actor","text_rep","ptr0","len0","heads","time","other","deferred2_0","deferred2_1","r3","ptr1","len1","start","delete_count","text","new_text","value","datatype","v1","index","prop","enable","export_function","import_function","object","meta","before","after","changes","have_deps","hash","deferred1_0","deferred1_1","cursor","range","SyncStateFinalization","_SyncState","hashes","__wbg_load","module","imports","bytes","__wbg_get_imports","arg0","arg1","v","deferred0_0","deferred0_1","arg2","result","__wbg_finalize_init","instance","module","wasm","__wbg_init","cachedFloat64Memory0","cachedInt32Memory0","cachedUint8Memory0","initSync","imports","__wbg_get_imports","input","__wbg_load","automerge_wasm_default","__wbg_init","_initialized","_initializeListeners","UseApi","api","k","ApiHandler","listener","options","data","change","message","msg","state","initializeWasm","wasmBlob","automerge_wasm_default","_","automerge_wasm_exports","initializeBase64Wasm","wasmBase64","c","wasmInitialized","resolve","isWasmInitialized","_state","doc","checkroot","state","STATE","_obj","_clear_cache","CLEAR_CACHE","_trace","TRACE","OBJECT_ID","_is_proxy","IS_PROXY","__rest","s","t","p","i","SyncStateSymbol","insertAt","list","index","values","_is_proxy","deleteAt","numDelete","use","api","UseApi","getBackend","doc","_state","importOpts","_actor","init","_opts","opts","freeze","patchCallback","text_v1","actor","handle","ApiHandler","textV2","registerDatatypes","view","heads","state","clone","_oldHeads","stateSansHeads","free","from","initialState","_change","d","change","options","callback","changeAt","scope","progressDocument","source","nextState","nextDoc","patches","newState","headsEqual","root","rootProxy","newHead","e","emptyChange","load","data","unchecked","allowMissingDeps","convertRawStringsToText","loadIncremental","_trace","saveIncremental","save","merge","local","remote","localState","remoteState","changes","getActorId","getConflicts","prop","objectId","_obj","stableConflictAt","getLastLocalChange","getObjectId","getChanges","oldState","getHeads","getAllChanges","applyChanges","getHistory","history","decodeChange","diff","before","after","checkHeads","equals","heads1","heads2","fieldname","val1","val2","isObject","keys1","keys2","encodeSyncState","sync","result","decodeSyncState","generateSyncMessage","inState","syncState","message","receiveSyncMessage","outSyncState","hasOurChanges","initSyncState","encodeChange","encodeSyncMessage","decodeSyncMessage","getMissingDeps","dump","toJS","enabled","isAutomerge","STATE","obj","saveSince","hasHeads","hash","Counter","RawString","Text","topoHistoryTraversal","inspectChange","changeHash","stats","getBackend","init","_opts","opts","importOpts","clone","doc","from","initialState","load","data","loadIncremental","_actor","cursorToIndex","state","value","index","splice","path","del","newText","objPath","absoluteObjPath","_is_proxy","_state","_clear_cache","e","updateText","spans","block","splitBlock","joinBlock","updateBlock","updateSpans","newSpans","getCursor","getCursorPosition","cursor","mark","range","name","unmark","marks","marksAt","getConflicts","prop","objectId","_obj","unstableConflictAt","functionName","import_debug","import_index","import_xstate_cjs","import_bs58check","urlPrefix","parseAutomergeUrl","url","regex","docMatch","documentId","binaryDocumentId","documentIdToBinary","stringifyAutomergeUrl","arg","encodedDocumentId","binaryToDocumentId","isValidAutomergeUrl","str","automergeUrl","isValidDocumentId","binaryDocumentID","stringify_default","validate_default","isValidUuid","generateAutomergeUrl","v4_default","docId","bs58check","interpretAsDocumentId","id","binaryToDocumentId","isValidAutomergeUrl","parseAutomergeUrl","isValidDocumentId","isValidUuid","binaryDocumentID","parse_default","cbor_exports","__export","decode","encode","decoder","src","srcEnd","position","EMPTY_ARRAY","LEGACY_RECORD_INLINE_ID","RECORD_DEFINITIONS_ID","RECORD_INLINE_ID","BUNDLED_STRINGS_ID","PACKED_REFERENCE_TAG_ID","STOP_CODE","maxArraySize","maxMapSize","strings","EMPTY_ARRAY","stringPosition","currentDecoder","currentStructures","srcString","srcStringStart","srcStringEnd","bundledStrings","referenceMap","currentExtensions","currentExtensionRanges","packedValues","dataView","restoreMapsAsObject","defaultOptions","sequentialMode","inlineObjectReadThreshold","inlineObjectReadThreshold","Decoder","_Decoder","options","k","v","key","rec","map","res","safeKey","source","end","r","src","saveState","clearSource","defaultOptions","srcEnd","position","stringPosition","srcStringEnd","srcString","strings","EMPTY_ARRAY","bundledStrings","dataView","error","currentDecoder","packedValues","currentStructures","checkedRead","forEach","values","lastPosition","size","sequentialMode","value","defaultDecoder","checkedRead","result","read","bundledStrings","position","error","srcEnd","currentStructures","src","referenceMap","sequentialMode","clearSource","token","majorType","getFloat16","dataView","value","currentDecoder","multiplier","mult10","array","i","STOP_CODE","maxArraySize","key","object","maxMapSize","safeKey","restoreMapsAsObject","map","readBin","srcStringEnd","srcString","srcStringStart","string","shortStringInJS","longStringInJS","readFixedString","BUNDLED_STRINGS_ID","structure","createStructureReader","RECORD_INLINE_ID","length","readJustLength","id","recordDefinition","RECORD_DEFINITIONS_ID","readBundleExt","loadShared","extension","currentExtensions","input","currentExtensionRanges","Tag","packedValue","packedValues","getPackedValues","validName","readObject","compiledReader","inlineObjectReadThreshold","k","readStringJS","readStringJS","length","result","shortStringInJS","decoder","src","position","end","units","byte1","byte2","byte3","byte4","unit","fromCharCode","longStringInJS","start","bytes","i","byte","a","b","c","d","e","f","g","h","j","k","l","m","n","o","readBin","currentDecoder","f32Array","u8Array","getFloat16","byte0","src","position","byte1","exponent","abs","keyCache","Tag","value","tag","currentExtensions","dateString","epochSec","buffer","i","l","fraction","recordDefinition","id","structure","existingStructure","currentStructures","createStructureReader","LEGACY_RECORD_INLINE_ID","data","length","object","key","safeKey","bundledStrings","glbl","packedTable","read","src","position","error","newPackedValues","packedValues","PACKED_REFERENCE_TAG_ID","currentDecoder","loadShared","referenceMap","startingPosition","token","target","refEntry","targetProperties","array","restoreMapsAsObject","combine","a","b","getPackedValues","SHARED_DATA_TAG_ID","currentExtensionRanges","input","isLittleEndianMachine","typedArrays","typedArrayTags","registerTypedArray","TypedArray","dvMethod","bytesPerElement","littleEndian","sizeShift","dv","elements","ta","method","readBundleExt","readJustLength","bundlePosition","bundleLength","dataPosition","readStringJS","dataView","sharedData","saveState","updatedStructures","callback","savedSrcEnd","srcEnd","savedPosition","savedStringPosition","stringPosition","savedSrcStringStart","srcStringStart","savedSrcStringEnd","srcStringEnd","savedSrcString","srcString","savedStrings","strings","savedReferenceMap","savedBundledStrings","savedSrc","savedStructures","savedDecoder","savedSequentialMode","sequentialMode","clearSource","mult10","i","defaultDecoder","Decoder","decode","decodeMultiple","FLOAT32_OPTIONS","textEncoder","extensions","extensionClasses","Buffer","hasNodeBuffer","ByteArrayAllocate","ByteArray","MAX_STRUCTURES","MAX_BUFFER_SIZE","throwOnIterable","target","targetView","position","safeEnd","bundledStrings","MAX_BUNDLE_SIZE","hasNonLatin","RECORD_SYMBOL","Encoder","Decoder","options","typeBuffer","start","sharedStructures","hasSharedUpdate","structures","referenceMap","encodeUtf8","ByteArray","string","maxBytes","textEncoder","encoder","hasSharedStructures","maxSharedStructures","isSequential","samplingPackedValues","packedObjectMap","sharedValues","sharedPackedObjectMap","i","l","recordIdsToRemove","transitionsCount","serializationsSinceTransitionRebuild","value","encodeOptions","r","ByteArrayAllocate","REUSE_BUFFER_MODE","sharedData","sharedStructuresLength","keys","nextTransition","transition","j","key","packedValues","findRepetitiveStrings","writeArrayHeader","valuesArray","encode","THROW_ON_ITERABLE","writeBundles","makeRoom","serialized","insertIds","returnBuffer","RESET_BUFFER_MODE","threshold","status","type","length","packedPosition","strLength","extStart","twoByte","headerSize","c1","c2","strPosition","useFloat32","xShifted","mult10","referee","idsToInsert","constructor","writeObject","entryValue","extensions","extensionClass","extensionClasses","extension","tag","error","entry","isBlob","json","bytes","writeBuffer","object","vals","objectOffset","size","skipValues","newTransitions","parentRecordId","k","recordId","MAX_STRUCTURES","end","newSize","MAX_BUFFER_SIZE","newBuffer","chunkThreshold","continuedChunkThreshold","startEncoding","encodeObjectAsIterable","encodeObjectAsAsyncIterable","iterateProperties","finalIterable","useRecords","writeEntityLength","tryEncode","restartEncoding","restart","encodeIterable","encodedValue","reader","next","asyncValue","buffer","lastVersion","structuresCopy","SharedData","saveResults","existingShared","structure","majorValue","values","version","BlobConstructor","packedStatus","includeKeys","isLittleEndianMachine","Tag","date","seconds","set","array","regex","arrayBuffer","typedArray","hasNodeBuffer","typedArrayEncoder","definitions","offset","Buffer","nextId","distanceToMove","lastEnd","a","b","id","writeStrings","defaultEncoder","Encoder","encode","encodeAsIterable","encodeAsAsyncIterable","NEVER","ALWAYS","DECIMAL_ROUND","DECIMAL_FIT","FLOAT32_OPTIONS","REUSE_BUFFER_MODE","RESET_BUFFER_MODE","THROW_ON_ITERABLE","encode","obj","Encoder","decode","buf","arraysAreEqual","a","b","element","index","headsAreSame","a","b","arraysAreEqual","withTimeout","promise","t","timeoutId","timeoutPromise","_","reject","TimeoutError","message","DocHandle","EventEmitter","#log","#machine","#prevDocState","init","#timeoutDelay","#remoteHeads","documentId","options","doc","debug","delay","machine","context","event","oldDoc","UPDATE","callback","state","before","after","#checkForChanges","BEGIN","#doc","#state","#statePromise","awaitStates","awaitStatesArray","s","beforeHeads","getHeads","afterHeads","headsAreSame","patches","diff","DOC_READY","stringifyAutomergeUrl","states","withTimeout","topoHistoryTraversal","h","heads","view","first","second","from","to","change","inspectChange","storageId","resultHeads","result","changeAt","otherHandle","mergingDoc","merge","DOC_UNAVAILABLE","REQUEST","DELETE","message","encode","stats","HandleState","IDLE","LOADING","REQUESTING","READY","DELETED","UNAVAILABLE","DOC_UNAVAILABLE","slim_exports","__export","Counter","Float64","Int","Text","Uint","applyChanges","change","changeAt","clone","decodeChange","decodeSyncMessage","decodeSyncState","deleteAt","diff","dump","emptyChange","encodeChange","encodeSyncMessage","encodeSyncState","equals","free","from","generateSyncMessage","getActorId","getAllChanges","getBackend","getChanges","getConflicts","getHeads","getHistory","getLastLocalChange","getMissingDeps","getObjectId","hasHeads","hasOurChanges","init","initSyncState","initializeBase64Wasm","initializeWasm","insertAt","inspectChange","isAutomerge","isWasmInitialized","load","loadIncremental","merge","next_slim_exports","receiveSyncMessage","save","saveIncremental","saveSince","stats","toJS","topoHistoryTraversal","use","uuid","view","wasmInitialized","import_debug","import_debug","RemoteHeadsSubscriptions","EventEmitter","#knownHeads","#ourSubscriptions","#theirSubscriptions","#generousPeers","#subscribedDocsByPeer","#log","debug","remotes","remotesToAdd","remote","remotesToRemove","control","addedRemotesWeKnow","theirSubs","subscribedDocs","documentId","knownHeads","lastHeads","msg","changedHeads","#changedHeads","event","peer","peerId","#isPeerSubscribedToDoc","storageId","heads","timestamp","docRemote","peerIds","remoteHeads","subscribedPeers","newHeads","throttle","fn","delay","lastCall","wait","timeout","args","import_debug","isRepoMessage","message","isSyncMessage","isEphemeralMessage","isRequestMessage","isDocumentUnavailableMessage","isRemoteSubscriptionControlMessage","isRemoteHeadsChanged","msg","getEphemeralMessageSource","message","NetworkSubsystem","EventEmitter","#log","#adaptersByPeer","#count","#sessionId","#ephemeralSessionCounts","adapters","peerId","peerMetadata","debug","a","networkAdapter","msg","isRepoMessage","isEphemeralMessage","source","other","err","peer","outbound","import_debug","mergeArrays","myArrays","length","item","mergedArray","offset","sha256","keyHash","binary","hash","bufferToHexString","headsHash","heads","encoder","headsbinary","mergeArrays","h","data","byte","chunkTypeFromKey","key","chunkTypeStr","StorageSubsystem","#storageAdapter","#storedHeads","#chunkInfos","#compacting","#log","debug","storageAdapter","storedId","id","v4_default","namespace","key","storageKey","data","documentId","chunks","binaries","chunkInfos","chunk","chunkType","chunkTypeFromKey","binary","mergeArrays","newDoc","loadIncremental","init","getHeads","doc","#shouldSave","sourceChunks","#shouldCompact","#saveTotal","#saveIncremental","saveSince","keyHash","save","snapshotHash","headsHash","oldKeys","c","k","newChunkInfos","storageId","loaded","decodeSyncState","syncState","encodeSyncState","oldHeads","newHeads","headsAreSame","snapshotSize","incrementalSize","import_debug","import_debug","Synchronizer","EventEmitter","DocSynchronizer","Synchronizer","#log","#peers","#pendingSyncStateCallbacks","#peerDocumentStatuses","#syncStates","#pendingSyncMessages","#syncStarted","#handle","#onLoadSyncState","handle","onLoadSyncState","docId","debug","throttle","#syncWithPeers","payload","#broadcastToPeers","READY","REQUESTING","#processAllPendingSyncMessages","doc","peerId","#sendSyncMessage","data","#sendEphemeralMessage","message","#withSyncState","callback","#addPeer","syncState","pendingCallbacks","#initSyncState","initSyncState","err","#setSyncState","newSyncState","generateSyncMessage","isNew","getHeads","peerIds","noPeersWithDocument","docPromise","UNAVAILABLE","#checkDocUnavailable","init","reparsedSyncState","decodeSyncState","encodeSyncState","p","senderId","contents","decode","#processSyncMessage","isRequestMessage","decodeSyncMessage","newDoc","receiveSyncMessage","log","debug","CollectionSynchronizer","Synchronizer","#peers","#docSetUp","repo","#fetchDocSynchronizer","documentId","handle","stringifyAutomergeUrl","#initDocSynchronizer","docSynchronizer","DocSynchronizer","peerId","storageId","isEphemeral","event","#documentGenerousPeers","peers","generousPeers","message","okToShare","synchronizer","randomPeerId","Repo","EventEmitter","#log","#handleCache","#remoteHeadsSubscriptions","RemoteHeadsSubscriptions","#remoteHeadsGossipingEnabled","storage","network","peerId","sharePolicy","isEphemeral","enableRemoteHeadsGossiping","debug","documentId","storageSubsystem","err","CollectionSynchronizer","message","networkSubsystem","StorageSubsystem","myPeerMetadata","NetworkSubsystem","peerMetadata","shouldShare","msg","#receiveMessage","#saveSyncState","handle","storageId","heads","headsAreSame","peer","#registerHandleWithSubsystems","saveFn","doc","throttle","#throttledSaveSyncStateHandlers","payload","handler","syncState","#getHandle","DocHandle","initialValue","parseAutomergeUrl","generateAutomergeUrl","nextDoc","next_slim_exports","clonedHandle","sourceDoc","id","interpretAsDocumentId","loadedDoc","binary","remotes","documents","handles","adapter","NetworkAdapter","EventEmitter","StorageAdapter"],"sourceRoot":"/","sources":["../esmd/npm/@automerge/automerge-repo@2.0.0-alpha.11/node_modules/.pnpm/ms@2.1.3/node_modules/ms/index.js","../esmd/npm/@automerge/automerge-repo@2.0.0-alpha.11/node_modules/.pnpm/debug@4.3.7/node_modules/debug/src/common.js","../esmd/npm/@automerge/automerge-repo@2.0.0-alpha.11/node_modules/.pnpm/debug@4.3.7/node_modules/debug/src/browser.js","../esmd/npm/@automerge/automerge-repo@2.0.0-alpha.11/node_modules/.pnpm/eventemitter3@5.0.1/node_modules/eventemitter3/index.js","../esmd/npm/@automerge/automerge-repo@2.0.0-alpha.11/node_modules/.pnpm/xstate@5.18.1/node_modules/xstate/dev/dist/xstate-dev.cjs.js","../esmd/npm/@automerge/automerge-repo@2.0.0-alpha.11/node_modules/.pnpm/xstate@5.18.1/node_modules/xstate/dist/raise-cde45f56.cjs.js","../esmd/npm/@automerge/automerge-repo@2.0.0-alpha.11/node_modules/.pnpm/xstate@5.18.1/node_modules/xstate/actors/dist/xstate-actors.cjs.js","../esmd/npm/@automerge/automerge-repo@2.0.0-alpha.11/node_modules/.pnpm/xstate@5.18.1/node_modules/xstate/dist/log-098d2ed5.cjs.js","../esmd/npm/@automerge/automerge-repo@2.0.0-alpha.11/node_modules/.pnpm/xstate@5.18.1/node_modules/xstate/dist/xstate.cjs.js","../esmd/npm/@automerge/automerge-repo@2.0.0-alpha.11/node_modules/.pnpm/@noble+hashes@1.5.0/node_modules/@noble/hashes/src/_assert.ts","../esmd/npm/@automerge/automerge-repo@2.0.0-alpha.11/node_modules/.pnpm/@noble+hashes@1.5.0/node_modules/@noble/hashes/src/crypto.ts","../esmd/npm/@automerge/automerge-repo@2.0.0-alpha.11/node_modules/.pnpm/@noble+hashes@1.5.0/node_modules/@noble/hashes/src/utils.ts","../esmd/npm/@automerge/automerge-repo@2.0.0-alpha.11/node_modules/.pnpm/@noble+hashes@1.5.0/node_modules/@noble/hashes/src/_md.ts","../esmd/npm/@automerge/automerge-repo@2.0.0-alpha.11/node_modules/.pnpm/@noble+hashes@1.5.0/node_modules/@noble/hashes/src/sha256.ts","../esmd/npm/@automerge/automerge-repo@2.0.0-alpha.11/node_modules/.pnpm/base-x@4.0.0/node_modules/base-x/src/index.js","../esmd/npm/@automerge/automerge-repo@2.0.0-alpha.11/node_modules/.pnpm/bs58@5.0.0/node_modules/bs58/index.js","../esmd/npm/@automerge/automerge-repo@2.0.0-alpha.11/node_modules/.pnpm/bs58check@3.0.1/node_modules/bs58check/base.js","../esmd/npm/@automerge/automerge-repo@2.0.0-alpha.11/node_modules/.pnpm/bs58check@3.0.1/node_modules/bs58check/index.js","../esmd/npm/@automerge/automerge-repo@2.0.0-alpha.11/node_modules/.pnpm/fast-sha256@1.3.0/node_modules/fast-sha256/sha256.js","../esmd/npm/@automerge/automerge-repo@2.0.0-alpha.11/node_modules/.pnpm/@automerge+automerge@2.2.8/node_modules/@automerge/automerge/dist/mjs/next_slim.js","../esmd/npm/@automerge/automerge-repo@2.0.0-alpha.11/node_modules/.pnpm/@automerge+automerge@2.2.8/node_modules/@automerge/automerge/dist/mjs/constants.js","../esmd/npm/@automerge/automerge-repo@2.0.0-alpha.11/node_modules/.pnpm/@automerge+automerge@2.2.8/node_modules/@automerge/automerge/dist/mjs/text.js","../esmd/npm/@automerge/automerge-repo@2.0.0-alpha.11/node_modules/.pnpm/@automerge+automerge@2.2.8/node_modules/@automerge/automerge/dist/mjs/counter.js","../esmd/npm/@automerge/automerge-repo@2.0.0-alpha.11/node_modules/.pnpm/@automerge+automerge@2.2.8/node_modules/@automerge/automerge/dist/mjs/numbers.js","../esmd/npm/@automerge/automerge-repo@2.0.0-alpha.11/node_modules/.pnpm/@automerge+automerge@2.2.8/node_modules/@automerge/automerge/dist/mjs/raw_string.js","../esmd/npm/@automerge/automerge-repo@2.0.0-alpha.11/node_modules/.pnpm/@automerge+automerge@2.2.8/node_modules/@automerge/automerge/dist/mjs/proxies.js","../esmd/npm/@automerge/automerge-repo@2.0.0-alpha.11/node_modules/.pnpm/@automerge+automerge@2.2.8/node_modules/@automerge/automerge/dist/mjs/conflicts.js","../esmd/npm/@automerge/automerge-repo@2.0.0-alpha.11/node_modules/.pnpm/uuid@9.0.1/node_modules/uuid/dist/esm-browser/rng.js","../esmd/npm/@automerge/automerge-repo@2.0.0-alpha.11/node_modules/.pnpm/uuid@9.0.1/node_modules/uuid/dist/esm-browser/regex.js","../esmd/npm/@automerge/automerge-repo@2.0.0-alpha.11/node_modules/.pnpm/uuid@9.0.1/node_modules/uuid/dist/esm-browser/validate.js","../esmd/npm/@automerge/automerge-repo@2.0.0-alpha.11/node_modules/.pnpm/uuid@9.0.1/node_modules/uuid/dist/esm-browser/stringify.js","../esmd/npm/@automerge/automerge-repo@2.0.0-alpha.11/node_modules/.pnpm/uuid@9.0.1/node_modules/uuid/dist/esm-browser/parse.js","../esmd/npm/@automerge/automerge-repo@2.0.0-alpha.11/node_modules/.pnpm/uuid@9.0.1/node_modules/uuid/dist/esm-browser/native.js","../esmd/npm/@automerge/automerge-repo@2.0.0-alpha.11/node_modules/.pnpm/uuid@9.0.1/node_modules/uuid/dist/esm-browser/v4.js","../esmd/npm/@automerge/automerge-repo@2.0.0-alpha.11/node_modules/.pnpm/@automerge+automerge@2.2.8/node_modules/@automerge/automerge/dist/mjs/uuid.js","../esmd/npm/@automerge/automerge-repo@2.0.0-alpha.11/node_modules/.pnpm/@automerge+automerge@2.2.8/node_modules/@automerge/automerge/dist/mjs/wasm_bindgen_output/web/automerge_wasm.js","../esmd/npm/@automerge/automerge-repo@2.0.0-alpha.11/node_modules/.pnpm/@automerge+automerge@2.2.8/node_modules/@automerge/automerge/dist/mjs/low_level.js","../esmd/npm/@automerge/automerge-repo@2.0.0-alpha.11/node_modules/.pnpm/@automerge+automerge@2.2.8/node_modules/@automerge/automerge/dist/mjs/internal_state.js","../esmd/npm/@automerge/automerge-repo@2.0.0-alpha.11/node_modules/.pnpm/@automerge+automerge@2.2.8/node_modules/@automerge/automerge/dist/mjs/stable.js","../esmd/npm/@automerge/automerge-repo@2.0.0-alpha.11/node_modules/.pnpm/@automerge+automerge-repo@2.0.0-alpha.11_@types+node@22.5.4_typescript@5.6.2/node_modules/@automerge/automerge-repo/dist/DocHandle.js","../esmd/npm/@automerge/automerge-repo@2.0.0-alpha.11/node_modules/.pnpm/eventemitter3@5.0.1/node_modules/eventemitter3/index.mjs","../esmd/npm/@automerge/automerge-repo@2.0.0-alpha.11/node_modules/.pnpm/xstate@5.18.1/node_modules/xstate/dist/xstate.cjs.mjs","../esmd/npm/@automerge/automerge-repo@2.0.0-alpha.11/node_modules/.pnpm/@automerge+automerge-repo@2.0.0-alpha.11_@types+node@22.5.4_typescript@5.6.2/node_modules/@automerge/automerge-repo/dist/AutomergeUrl.js","../esmd/npm/@automerge/automerge-repo@2.0.0-alpha.11/node_modules/.pnpm/@automerge+automerge-repo@2.0.0-alpha.11_@types+node@22.5.4_typescript@5.6.2/node_modules/@automerge/automerge-repo/dist/helpers/cbor.js","../esmd/npm/@automerge/automerge-repo@2.0.0-alpha.11/node_modules/.pnpm/cbor-x@1.6.0/node_modules/cbor-x/decode.js","../esmd/npm/@automerge/automerge-repo@2.0.0-alpha.11/node_modules/.pnpm/cbor-x@1.6.0/node_modules/cbor-x/encode.js","../esmd/npm/@automerge/automerge-repo@2.0.0-alpha.11/node_modules/.pnpm/@automerge+automerge-repo@2.0.0-alpha.11_@types+node@22.5.4_typescript@5.6.2/node_modules/@automerge/automerge-repo/dist/helpers/arraysAreEqual.js","../esmd/npm/@automerge/automerge-repo@2.0.0-alpha.11/node_modules/.pnpm/@automerge+automerge-repo@2.0.0-alpha.11_@types+node@22.5.4_typescript@5.6.2/node_modules/@automerge/automerge-repo/dist/helpers/headsAreSame.js","../esmd/npm/@automerge/automerge-repo@2.0.0-alpha.11/node_modules/.pnpm/@automerge+automerge-repo@2.0.0-alpha.11_@types+node@22.5.4_typescript@5.6.2/node_modules/@automerge/automerge-repo/dist/helpers/withTimeout.js","../esmd/npm/@automerge/automerge-repo@2.0.0-alpha.11/node_modules/.pnpm/@automerge+automerge@2.2.8/node_modules/@automerge/automerge/dist/mjs/entrypoints/slim.js","../esmd/npm/@automerge/automerge-repo@2.0.0-alpha.11/node_modules/.pnpm/@automerge+automerge-repo@2.0.0-alpha.11_@types+node@22.5.4_typescript@5.6.2/node_modules/@automerge/automerge-repo/dist/Repo.js","../esmd/npm/@automerge/automerge-repo@2.0.0-alpha.11/node_modules/.pnpm/@automerge+automerge-repo@2.0.0-alpha.11_@types+node@22.5.4_typescript@5.6.2/node_modules/@automerge/automerge-repo/dist/RemoteHeadsSubscriptions.js","../esmd/npm/@automerge/automerge-repo@2.0.0-alpha.11/node_modules/.pnpm/@automerge+automerge-repo@2.0.0-alpha.11_@types+node@22.5.4_typescript@5.6.2/node_modules/@automerge/automerge-repo/dist/helpers/throttle.js","../esmd/npm/@automerge/automerge-repo@2.0.0-alpha.11/node_modules/.pnpm/@automerge+automerge-repo@2.0.0-alpha.11_@types+node@22.5.4_typescript@5.6.2/node_modules/@automerge/automerge-repo/dist/network/NetworkSubsystem.js","../esmd/npm/@automerge/automerge-repo@2.0.0-alpha.11/node_modules/.pnpm/@automerge+automerge-repo@2.0.0-alpha.11_@types+node@22.5.4_typescript@5.6.2/node_modules/@automerge/automerge-repo/dist/network/messages.js","../esmd/npm/@automerge/automerge-repo@2.0.0-alpha.11/node_modules/.pnpm/@automerge+automerge-repo@2.0.0-alpha.11_@types+node@22.5.4_typescript@5.6.2/node_modules/@automerge/automerge-repo/dist/storage/StorageSubsystem.js","../esmd/npm/@automerge/automerge-repo@2.0.0-alpha.11/node_modules/.pnpm/@automerge+automerge-repo@2.0.0-alpha.11_@types+node@22.5.4_typescript@5.6.2/node_modules/@automerge/automerge-repo/dist/helpers/mergeArrays.js","../esmd/npm/@automerge/automerge-repo@2.0.0-alpha.11/node_modules/.pnpm/@automerge+automerge-repo@2.0.0-alpha.11_@types+node@22.5.4_typescript@5.6.2/node_modules/@automerge/automerge-repo/dist/storage/keyHash.js","../esmd/npm/@automerge/automerge-repo@2.0.0-alpha.11/node_modules/.pnpm/@automerge+automerge-repo@2.0.0-alpha.11_@types+node@22.5.4_typescript@5.6.2/node_modules/@automerge/automerge-repo/dist/storage/chunkTypeFromKey.js","../esmd/npm/@automerge/automerge-repo@2.0.0-alpha.11/node_modules/.pnpm/@automerge+automerge-repo@2.0.0-alpha.11_@types+node@22.5.4_typescript@5.6.2/node_modules/@automerge/automerge-repo/dist/synchronizer/CollectionSynchronizer.js","../esmd/npm/@automerge/automerge-repo@2.0.0-alpha.11/node_modules/.pnpm/@automerge+automerge-repo@2.0.0-alpha.11_@types+node@22.5.4_typescript@5.6.2/node_modules/@automerge/automerge-repo/dist/synchronizer/DocSynchronizer.js","../esmd/npm/@automerge/automerge-repo@2.0.0-alpha.11/node_modules/.pnpm/@automerge+automerge-repo@2.0.0-alpha.11_@types+node@22.5.4_typescript@5.6.2/node_modules/@automerge/automerge-repo/dist/synchronizer/Synchronizer.js","../esmd/npm/@automerge/automerge-repo@2.0.0-alpha.11/node_modules/.pnpm/@automerge+automerge-repo@2.0.0-alpha.11_@types+node@22.5.4_typescript@5.6.2/node_modules/@automerge/automerge-repo/dist/network/NetworkAdapter.js","../esmd/npm/@automerge/automerge-repo@2.0.0-alpha.11/node_modules/.pnpm/@automerge+automerge-repo@2.0.0-alpha.11_@types+node@22.5.4_typescript@5.6.2/node_modules/@automerge/automerge-repo/dist/storage/StorageAdapter.js"],"sourcesContent":["/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function (val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' \u0026\u0026 val.length \u003e 0) {\n    return parse(val);\n  } else if (type === 'number' \u0026\u0026 isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length \u003e 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs \u003e= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs \u003e= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs \u003e= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs \u003e= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs \u003e= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs \u003e= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs \u003e= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs \u003e= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs \u003e= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key =\u003e {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i \u003c namespace.length; i++) {\n\t\t\thash = ((hash \u003c\u003c 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\t\tlet namespacesCache;\n\t\tlet enabledCache;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) =\u003e {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () =\u003e {\n\t\t\t\tif (enableOverride !== null) {\n\t\t\t\t\treturn enableOverride;\n\t\t\t\t}\n\t\t\t\tif (namespacesCache !== createDebug.namespaces) {\n\t\t\t\t\tnamespacesCache = createDebug.namespaces;\n\t\t\t\t\tenabledCache = createDebug.enabled(namespace);\n\t\t\t\t}\n\n\t\t\t\treturn enabledCache;\n\t\t\t},\n\t\t\tset: v =\u003e {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\t\tcreateDebug.namespaces = namespaces;\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i \u003c len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.slice(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace =\u003e '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i \u003c len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i \u003c len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n","/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() =\u003e {\n\tlet warned = false;\n\n\treturn () =\u003e {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox \u003e= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' \u0026\u0026 window.process \u0026\u0026 (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' \u0026\u0026 navigator.userAgent \u0026\u0026 navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\tlet m;\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' \u0026\u0026 document.documentElement \u0026\u0026 document.documentElement.style \u0026\u0026 document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' \u0026\u0026 window.console \u0026\u0026 (window.console.firebug || (window.console.exception \u0026\u0026 window.console.table))) ||\n\t\t// Is firefox \u003e= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' \u0026\u0026 navigator.userAgent \u0026\u0026 (m = navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/)) \u0026\u0026 parseInt(m[1], 10) \u003e= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' \u0026\u0026 navigator.userAgent \u0026\u0026 navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match =\u003e {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() =\u003e {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r \u0026\u0026 typeof process !== 'undefined' \u0026\u0026 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i \u003c l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i \u003c len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i \u003c length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j \u003c len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn \u0026\u0026\n      (!once || listeners.once) \u0026\u0026\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i \u003c length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once \u0026\u0026 !listeners[i].once) ||\n        (context \u0026\u0026 listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n// From https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/globalThis\nfunction getGlobal() {\n  if (typeof globalThis !== 'undefined') {\n    return globalThis;\n  }\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n  if (typeof global !== 'undefined') {\n    return global;\n  }\n}\nfunction getDevTools() {\n  const w = getGlobal();\n  if (!!w.__xstate__) {\n    return w.__xstate__;\n  }\n  return undefined;\n}\nfunction registerService(service) {\n  if (typeof window === 'undefined') {\n    return;\n  }\n  const devTools = getDevTools();\n  if (devTools) {\n    devTools.register(service);\n  }\n}\nconst devToolsAdapter = service =\u003e {\n  if (typeof window === 'undefined') {\n    return;\n  }\n  const devTools = getDevTools();\n  if (devTools) {\n    devTools.register(service);\n  }\n};\n\nexports.devToolsAdapter = devToolsAdapter;\nexports.getGlobal = getGlobal;\nexports.registerService = registerService;\n","'use strict';\n\nvar dev_dist_xstateDev = require('../dev/dist/xstate-dev.cjs.js');\n\nclass Mailbox {\n  constructor(_process) {\n    this._process = _process;\n    this._active = false;\n    this._current = null;\n    this._last = null;\n  }\n  start() {\n    this._active = true;\n    this.flush();\n  }\n  clear() {\n    // we can't set _current to null because we might be currently processing\n    // and enqueue following clear shouldnt start processing the enqueued item immediately\n    if (this._current) {\n      this._current.next = null;\n      this._last = this._current;\n    }\n  }\n  enqueue(event) {\n    const enqueued = {\n      value: event,\n      next: null\n    };\n    if (this._current) {\n      this._last.next = enqueued;\n      this._last = enqueued;\n      return;\n    }\n    this._current = enqueued;\n    this._last = enqueued;\n    if (this._active) {\n      this.flush();\n    }\n  }\n  flush() {\n    while (this._current) {\n      // atm the given _process is responsible for implementing proper try/catch handling\n      // we assume here that this won't throw in a way that can affect this mailbox\n      const consumed = this._current;\n      this._process(consumed.value);\n      this._current = consumed.next;\n    }\n    this._last = null;\n  }\n}\n\nconst STATE_DELIMITER = '.';\nconst TARGETLESS_KEY = '';\nconst NULL_EVENT = '';\nconst STATE_IDENTIFIER = '#';\nconst WILDCARD = '*';\nconst XSTATE_INIT = 'xstate.init';\nconst XSTATE_ERROR = 'xstate.error';\nconst XSTATE_STOP = 'xstate.stop';\n\n/**\n * Returns an event that represents an implicit event that is sent after the\n * specified `delay`.\n *\n * @param delayRef The delay in milliseconds\n * @param id The state node ID where this event is handled\n */\nfunction createAfterEvent(delayRef, id) {\n  return {\n    type: `xstate.after.${delayRef}.${id}`\n  };\n}\n\n/**\n * Returns an event that represents that a final state node has been reached in\n * the parent state node.\n *\n * @param id The final state node's parent state node `id`\n * @param output The data to pass into the event\n */\nfunction createDoneStateEvent(id, output) {\n  return {\n    type: `xstate.done.state.${id}`,\n    output\n  };\n}\n\n/**\n * Returns an event that represents that an invoked service has terminated.\n *\n * An invoked service is terminated when it has reached a top-level final state\n * node, but not when it is canceled.\n *\n * @param invokeId The invoked service ID\n * @param output The data to pass into the event\n */\nfunction createDoneActorEvent(invokeId, output) {\n  return {\n    type: `xstate.done.actor.${invokeId}`,\n    output,\n    actorId: invokeId\n  };\n}\nfunction createErrorActorEvent(id, error) {\n  return {\n    type: `xstate.error.actor.${id}`,\n    error,\n    actorId: id\n  };\n}\nfunction createInitEvent(input) {\n  return {\n    type: XSTATE_INIT,\n    input\n  };\n}\n\n/**\n * This function makes sure that unhandled errors are thrown in a separate\n * macrotask. It allows those errors to be detected by global error handlers and\n * reported to bug tracking services without interrupting our own stack of\n * execution.\n *\n * @param err Error to be thrown\n */\nfunction reportUnhandledError(err) {\n  setTimeout(() =\u003e {\n    throw err;\n  });\n}\n\nconst symbolObservable = (() =\u003e typeof Symbol === 'function' \u0026\u0026 Symbol.observable || '@@observable')();\n\nfunction matchesState(parentStateId, childStateId) {\n  const parentStateValue = toStateValue(parentStateId);\n  const childStateValue = toStateValue(childStateId);\n  if (typeof childStateValue === 'string') {\n    if (typeof parentStateValue === 'string') {\n      return childStateValue === parentStateValue;\n    }\n\n    // Parent more specific than child\n    return false;\n  }\n  if (typeof parentStateValue === 'string') {\n    return parentStateValue in childStateValue;\n  }\n  return Object.keys(parentStateValue).every(key =\u003e {\n    if (!(key in childStateValue)) {\n      return false;\n    }\n    return matchesState(parentStateValue[key], childStateValue[key]);\n  });\n}\nfunction toStatePath(stateId) {\n  if (isArray(stateId)) {\n    return stateId;\n  }\n  let result = [];\n  let segment = '';\n  for (let i = 0; i \u003c stateId.length; i++) {\n    const char = stateId.charCodeAt(i);\n    switch (char) {\n      // \\\n      case 92:\n        // consume the next character\n        segment += stateId[i + 1];\n        // and skip over it\n        i++;\n        continue;\n      // .\n      case 46:\n        result.push(segment);\n        segment = '';\n        continue;\n    }\n    segment += stateId[i];\n  }\n  result.push(segment);\n  return result;\n}\nfunction toStateValue(stateValue) {\n  if (isMachineSnapshot(stateValue)) {\n    return stateValue.value;\n  }\n  if (typeof stateValue !== 'string') {\n    return stateValue;\n  }\n  const statePath = toStatePath(stateValue);\n  return pathToStateValue(statePath);\n}\nfunction pathToStateValue(statePath) {\n  if (statePath.length === 1) {\n    return statePath[0];\n  }\n  const value = {};\n  let marker = value;\n  for (let i = 0; i \u003c statePath.length - 1; i++) {\n    if (i === statePath.length - 2) {\n      marker[statePath[i]] = statePath[i + 1];\n    } else {\n      const previous = marker;\n      marker = {};\n      previous[statePath[i]] = marker;\n    }\n  }\n  return value;\n}\nfunction mapValues(collection, iteratee) {\n  const result = {};\n  const collectionKeys = Object.keys(collection);\n  for (let i = 0; i \u003c collectionKeys.length; i++) {\n    const key = collectionKeys[i];\n    result[key] = iteratee(collection[key], key, collection, i);\n  }\n  return result;\n}\nfunction toArrayStrict(value) {\n  if (isArray(value)) {\n    return value;\n  }\n  return [value];\n}\nfunction toArray(value) {\n  if (value === undefined) {\n    return [];\n  }\n  return toArrayStrict(value);\n}\nfunction resolveOutput(mapper, context, event, self) {\n  if (typeof mapper === 'function') {\n    return mapper({\n      context,\n      event,\n      self\n    });\n  }\n  return mapper;\n}\nfunction isArray(value) {\n  return Array.isArray(value);\n}\nfunction isErrorActorEvent(event) {\n  return event.type.startsWith('xstate.error.actor');\n}\nfunction toTransitionConfigArray(configLike) {\n  return toArrayStrict(configLike).map(transitionLike =\u003e {\n    if (typeof transitionLike === 'undefined' || typeof transitionLike === 'string') {\n      return {\n        target: transitionLike\n      };\n    }\n    return transitionLike;\n  });\n}\nfunction normalizeTarget(target) {\n  if (target === undefined || target === TARGETLESS_KEY) {\n    return undefined;\n  }\n  return toArray(target);\n}\nfunction toObserver(nextHandler, errorHandler, completionHandler) {\n  const isObserver = typeof nextHandler === 'object';\n  const self = isObserver ? nextHandler : undefined;\n  return {\n    next: (isObserver ? nextHandler.next : nextHandler)?.bind(self),\n    error: (isObserver ? nextHandler.error : errorHandler)?.bind(self),\n    complete: (isObserver ? nextHandler.complete : completionHandler)?.bind(self)\n  };\n}\nfunction createInvokeId(stateNodeId, index) {\n  return `${index}.${stateNodeId}`;\n}\nfunction resolveReferencedActor(machine, src) {\n  const match = src.match(/^xstate\\.invoke\\.(\\d+)\\.(.*)/);\n  if (!match) {\n    return machine.implementations.actors[src];\n  }\n  const [, indexStr, nodeId] = match;\n  const node = machine.getStateNodeById(nodeId);\n  const invokeConfig = node.config.invoke;\n  return (Array.isArray(invokeConfig) ? invokeConfig[indexStr] : invokeConfig).src;\n}\nfunction getAllOwnEventDescriptors(snapshot) {\n  return [...new Set([...snapshot._nodes.flatMap(sn =\u003e sn.ownEvents)])];\n}\n\nfunction createScheduledEventId(actorRef, id) {\n  return `${actorRef.sessionId}.${id}`;\n}\nlet idCounter = 0;\nfunction createSystem(rootActor, options) {\n  const children = new Map();\n  const keyedActors = new Map();\n  const reverseKeyedActors = new WeakMap();\n  const inspectionObservers = new Set();\n  const timerMap = {};\n  const {\n    clock,\n    logger\n  } = options;\n  const scheduler = {\n    schedule: (source, target, event, delay, id = Math.random().toString(36).slice(2)) =\u003e {\n      const scheduledEvent = {\n        source,\n        target,\n        event,\n        delay,\n        id,\n        startedAt: Date.now()\n      };\n      const scheduledEventId = createScheduledEventId(source, id);\n      system._snapshot._scheduledEvents[scheduledEventId] = scheduledEvent;\n      const timeout = clock.setTimeout(() =\u003e {\n        delete timerMap[scheduledEventId];\n        delete system._snapshot._scheduledEvents[scheduledEventId];\n        system._relay(source, target, event);\n      }, delay);\n      timerMap[scheduledEventId] = timeout;\n    },\n    cancel: (source, id) =\u003e {\n      const scheduledEventId = createScheduledEventId(source, id);\n      const timeout = timerMap[scheduledEventId];\n      delete timerMap[scheduledEventId];\n      delete system._snapshot._scheduledEvents[scheduledEventId];\n      if (timeout !== undefined) {\n        clock.clearTimeout(timeout);\n      }\n    },\n    cancelAll: actorRef =\u003e {\n      for (const scheduledEventId in system._snapshot._scheduledEvents) {\n        const scheduledEvent = system._snapshot._scheduledEvents[scheduledEventId];\n        if (scheduledEvent.source === actorRef) {\n          scheduler.cancel(actorRef, scheduledEvent.id);\n        }\n      }\n    }\n  };\n  const sendInspectionEvent = event =\u003e {\n    if (!inspectionObservers.size) {\n      return;\n    }\n    const resolvedInspectionEvent = {\n      ...event,\n      rootId: rootActor.sessionId\n    };\n    inspectionObservers.forEach(observer =\u003e observer.next?.(resolvedInspectionEvent));\n  };\n  const system = {\n    _snapshot: {\n      _scheduledEvents: (options?.snapshot \u0026\u0026 options.snapshot.scheduler) ?? {}\n    },\n    _bookId: () =\u003e `x:${idCounter++}`,\n    _register: (sessionId, actorRef) =\u003e {\n      children.set(sessionId, actorRef);\n      return sessionId;\n    },\n    _unregister: actorRef =\u003e {\n      children.delete(actorRef.sessionId);\n      const systemId = reverseKeyedActors.get(actorRef);\n      if (systemId !== undefined) {\n        keyedActors.delete(systemId);\n        reverseKeyedActors.delete(actorRef);\n      }\n    },\n    get: systemId =\u003e {\n      return keyedActors.get(systemId);\n    },\n    _set: (systemId, actorRef) =\u003e {\n      const existing = keyedActors.get(systemId);\n      if (existing \u0026\u0026 existing !== actorRef) {\n        throw new Error(`Actor with system ID '${systemId}' already exists.`);\n      }\n      keyedActors.set(systemId, actorRef);\n      reverseKeyedActors.set(actorRef, systemId);\n    },\n    inspect: observerOrFn =\u003e {\n      const observer = toObserver(observerOrFn);\n      inspectionObservers.add(observer);\n      return {\n        unsubscribe() {\n          inspectionObservers.delete(observer);\n        }\n      };\n    },\n    _sendInspectionEvent: sendInspectionEvent,\n    _relay: (source, target, event) =\u003e {\n      system._sendInspectionEvent({\n        type: '@xstate.event',\n        sourceRef: source,\n        actorRef: target,\n        event\n      });\n      target._send(event);\n    },\n    scheduler,\n    getSnapshot: () =\u003e {\n      return {\n        _scheduledEvents: {\n          ...system._snapshot._scheduledEvents\n        }\n      };\n    },\n    start: () =\u003e {\n      const scheduledEvents = system._snapshot._scheduledEvents;\n      system._snapshot._scheduledEvents = {};\n      for (const scheduledId in scheduledEvents) {\n        const {\n          source,\n          target,\n          event,\n          delay,\n          id\n        } = scheduledEvents[scheduledId];\n        scheduler.schedule(source, target, event, delay, id);\n      }\n    },\n    _clock: clock,\n    _logger: logger\n  };\n  return system;\n}\n\nconst $$ACTOR_TYPE = 1;\n\n// those values are currently used by @xstate/react directly so it's important to keep the assigned values in sync\nlet ProcessingStatus = /*#__PURE__*/function (ProcessingStatus) {\n  ProcessingStatus[ProcessingStatus[\"NotStarted\"] = 0] = \"NotStarted\";\n  ProcessingStatus[ProcessingStatus[\"Running\"] = 1] = \"Running\";\n  ProcessingStatus[ProcessingStatus[\"Stopped\"] = 2] = \"Stopped\";\n  return ProcessingStatus;\n}({});\nconst defaultOptions = {\n  clock: {\n    setTimeout: (fn, ms) =\u003e {\n      return setTimeout(fn, ms);\n    },\n    clearTimeout: id =\u003e {\n      return clearTimeout(id);\n    }\n  },\n  logger: console.log.bind(console),\n  devTools: false\n};\n\n/**\n * An Actor is a running process that can receive events, send events and change\n * its behavior based on the events it receives, which can cause effects outside\n * of the actor. When you run a state machine, it becomes an actor.\n */\nclass Actor {\n  /**\n   * Creates a new actor instance for the given logic with the provided options,\n   * if any.\n   *\n   * @param logic The logic to create an actor from\n   * @param options Actor options\n   */\n  constructor(logic, options) {\n    this.logic = logic;\n    /** The current internal state of the actor. */\n    this._snapshot = void 0;\n    /**\n     * The clock that is responsible for setting and clearing timeouts, such as\n     * delayed events and transitions.\n     */\n    this.clock = void 0;\n    this.options = void 0;\n    /** The unique identifier for this actor relative to its parent. */\n    this.id = void 0;\n    this.mailbox = new Mailbox(this._process.bind(this));\n    this.observers = new Set();\n    this.eventListeners = new Map();\n    this.logger = void 0;\n    /** @internal */\n    this._processingStatus = ProcessingStatus.NotStarted;\n    // Actor Ref\n    this._parent = void 0;\n    /** @internal */\n    this._syncSnapshot = void 0;\n    this.ref = void 0;\n    // TODO: add typings for system\n    this._actorScope = void 0;\n    this._systemId = void 0;\n    /** The globally unique process ID for this invocation. */\n    this.sessionId = void 0;\n    /** The system to which this actor belongs. */\n    this.system = void 0;\n    this._doneEvent = void 0;\n    this.src = void 0;\n    // array of functions to defer\n    this._deferred = [];\n    const resolvedOptions = {\n      ...defaultOptions,\n      ...options\n    };\n    const {\n      clock,\n      logger,\n      parent,\n      syncSnapshot,\n      id,\n      systemId,\n      inspect\n    } = resolvedOptions;\n    this.system = parent ? parent.system : createSystem(this, {\n      clock,\n      logger\n    });\n    if (inspect \u0026\u0026 !parent) {\n      // Always inspect at the system-level\n      this.system.inspect(toObserver(inspect));\n    }\n    this.sessionId = this.system._bookId();\n    this.id = id ?? this.sessionId;\n    this.logger = options?.logger ?? this.system._logger;\n    this.clock = options?.clock ?? this.system._clock;\n    this._parent = parent;\n    this._syncSnapshot = syncSnapshot;\n    this.options = resolvedOptions;\n    this.src = resolvedOptions.src ?? logic;\n    this.ref = this;\n    this._actorScope = {\n      self: this,\n      id: this.id,\n      sessionId: this.sessionId,\n      logger: this.logger,\n      defer: fn =\u003e {\n        this._deferred.push(fn);\n      },\n      system: this.system,\n      stopChild: child =\u003e {\n        if (child._parent !== this) {\n          throw new Error(`Cannot stop child actor ${child.id} of ${this.id} because it is not a child`);\n        }\n        child._stop();\n      },\n      emit: emittedEvent =\u003e {\n        const listeners = this.eventListeners.get(emittedEvent.type);\n        const wildcardListener = this.eventListeners.get('*');\n        if (!listeners \u0026\u0026 !wildcardListener) {\n          return;\n        }\n        const allListeners = new Set([...(listeners ? listeners.values() : []), ...(wildcardListener ? wildcardListener.values() : [])]);\n        for (const handler of Array.from(allListeners)) {\n          handler(emittedEvent);\n        }\n      }\n    };\n\n    // Ensure that the send method is bound to this Actor instance\n    // if destructured\n    this.send = this.send.bind(this);\n    this.system._sendInspectionEvent({\n      type: '@xstate.actor',\n      actorRef: this\n    });\n    if (systemId) {\n      this._systemId = systemId;\n      this.system._set(systemId, this);\n    }\n    this._initState(options?.snapshot ?? options?.state);\n    if (systemId \u0026\u0026 this._snapshot.status !== 'active') {\n      this.system._unregister(this);\n    }\n  }\n  _initState(persistedState) {\n    try {\n      this._snapshot = persistedState ? this.logic.restoreSnapshot ? this.logic.restoreSnapshot(persistedState, this._actorScope) : persistedState : this.logic.getInitialSnapshot(this._actorScope, this.options?.input);\n    } catch (err) {\n      // if we get here then it means that we assign a value to this._snapshot that is not of the correct type\n      // we can't get the true `TSnapshot \u0026 { status: 'error'; }`, it's impossible\n      // so right now this is a lie of sorts\n      this._snapshot = {\n        status: 'error',\n        output: undefined,\n        error: err\n      };\n    }\n  }\n  update(snapshot, event) {\n    // Update state\n    this._snapshot = snapshot;\n\n    // Execute deferred effects\n    let deferredFn;\n    while (deferredFn = this._deferred.shift()) {\n      try {\n        deferredFn();\n      } catch (err) {\n        // this error can only be caught when executing *initial* actions\n        // it's the only time when we call actions provided by the user through those deferreds\n        // when the actor is already running we always execute them synchronously while transitioning\n        // no \"builtin deferred\" should actually throw an error since they are either safe\n        // or the control flow is passed through the mailbox and errors should be caught by the `_process` used by the mailbox\n        this._deferred.length = 0;\n        this._snapshot = {\n          ...snapshot,\n          status: 'error',\n          error: err\n        };\n      }\n    }\n    switch (this._snapshot.status) {\n      case 'active':\n        for (const observer of this.observers) {\n          try {\n            observer.next?.(snapshot);\n          } catch (err) {\n            reportUnhandledError(err);\n          }\n        }\n        break;\n      case 'done':\n        // next observers are meant to be notified about done snapshots\n        // this can be seen as something that is different from how observable work\n        // but with observables `complete` callback is called without any arguments\n        // it's more ergonomic for XState to treat a done snapshot as a \"next\" value\n        // and the completion event as something that is separate,\n        // something that merely follows emitting that done snapshot\n        for (const observer of this.observers) {\n          try {\n            observer.next?.(snapshot);\n          } catch (err) {\n            reportUnhandledError(err);\n          }\n        }\n        this._stopProcedure();\n        this._complete();\n        this._doneEvent = createDoneActorEvent(this.id, this._snapshot.output);\n        if (this._parent) {\n          this.system._relay(this, this._parent, this._doneEvent);\n        }\n        break;\n      case 'error':\n        this._error(this._snapshot.error);\n        break;\n    }\n    this.system._sendInspectionEvent({\n      type: '@xstate.snapshot',\n      actorRef: this,\n      event,\n      snapshot\n    });\n  }\n\n  /**\n   * Subscribe an observer to an actor’s snapshot values.\n   *\n   * @remarks\n   * The observer will receive the actor’s snapshot value when it is emitted.\n   * The observer can be:\n   *\n   * - A plain function that receives the latest snapshot, or\n   * - An observer object whose `.next(snapshot)` method receives the latest\n   *   snapshot\n   *\n   * @example\n   *\n   * ```ts\n   * // Observer as a plain function\n   * const subscription = actor.subscribe((snapshot) =\u003e {\n   *   console.log(snapshot);\n   * });\n   * ```\n   *\n   * @example\n   *\n   * ```ts\n   * // Observer as an object\n   * const subscription = actor.subscribe({\n   *   next(snapshot) {\n   *     console.log(snapshot);\n   *   },\n   *   error(err) {\n   *     // ...\n   *   },\n   *   complete() {\n   *     // ...\n   *   }\n   * });\n   * ```\n   *\n   * The return value of `actor.subscribe(observer)` is a subscription object\n   * that has an `.unsubscribe()` method. You can call\n   * `subscription.unsubscribe()` to unsubscribe the observer:\n   *\n   * @example\n   *\n   * ```ts\n   * const subscription = actor.subscribe((snapshot) =\u003e {\n   *   // ...\n   * });\n   *\n   * // Unsubscribe the observer\n   * subscription.unsubscribe();\n   * ```\n   *\n   * When the actor is stopped, all of its observers will automatically be\n   * unsubscribed.\n   *\n   * @param observer - Either a plain function that receives the latest\n   *   snapshot, or an observer object whose `.next(snapshot)` method receives\n   *   the latest snapshot\n   */\n\n  subscribe(nextListenerOrObserver, errorListener, completeListener) {\n    const observer = toObserver(nextListenerOrObserver, errorListener, completeListener);\n    if (this._processingStatus !== ProcessingStatus.Stopped) {\n      this.observers.add(observer);\n    } else {\n      switch (this._snapshot.status) {\n        case 'done':\n          try {\n            observer.complete?.();\n          } catch (err) {\n            reportUnhandledError(err);\n          }\n          break;\n        case 'error':\n          {\n            const err = this._snapshot.error;\n            if (!observer.error) {\n              reportUnhandledError(err);\n            } else {\n              try {\n                observer.error(err);\n              } catch (err) {\n                reportUnhandledError(err);\n              }\n            }\n            break;\n          }\n      }\n    }\n    return {\n      unsubscribe: () =\u003e {\n        this.observers.delete(observer);\n      }\n    };\n  }\n  on(type, handler) {\n    let listeners = this.eventListeners.get(type);\n    if (!listeners) {\n      listeners = new Set();\n      this.eventListeners.set(type, listeners);\n    }\n    const wrappedHandler = handler.bind(undefined);\n    listeners.add(wrappedHandler);\n    return {\n      unsubscribe: () =\u003e {\n        listeners.delete(wrappedHandler);\n      }\n    };\n  }\n\n  /** Starts the Actor from the initial state */\n  start() {\n    if (this._processingStatus === ProcessingStatus.Running) {\n      // Do not restart the service if it is already started\n      return this;\n    }\n    if (this._syncSnapshot) {\n      this.subscribe({\n        next: snapshot =\u003e {\n          if (snapshot.status === 'active') {\n            this.system._relay(this, this._parent, {\n              type: `xstate.snapshot.${this.id}`,\n              snapshot\n            });\n          }\n        },\n        error: () =\u003e {}\n      });\n    }\n    this.system._register(this.sessionId, this);\n    if (this._systemId) {\n      this.system._set(this._systemId, this);\n    }\n    this._processingStatus = ProcessingStatus.Running;\n\n    // TODO: this isn't correct when rehydrating\n    const initEvent = createInitEvent(this.options.input);\n    this.system._sendInspectionEvent({\n      type: '@xstate.event',\n      sourceRef: this._parent,\n      actorRef: this,\n      event: initEvent\n    });\n    const status = this._snapshot.status;\n    switch (status) {\n      case 'done':\n        // a state machine can be \"done\" upon initialization (it could reach a final state using initial microsteps)\n        // we still need to complete observers, flush deferreds etc\n        this.update(this._snapshot, initEvent);\n        // TODO: rethink cleanup of observers, mailbox, etc\n        return this;\n      case 'error':\n        this._error(this._snapshot.error);\n        return this;\n    }\n    if (!this._parent) {\n      this.system.start();\n    }\n    if (this.logic.start) {\n      try {\n        this.logic.start(this._snapshot, this._actorScope);\n      } catch (err) {\n        this._snapshot = {\n          ...this._snapshot,\n          status: 'error',\n          error: err\n        };\n        this._error(err);\n        return this;\n      }\n    }\n\n    // TODO: this notifies all subscribers but usually this is redundant\n    // there is no real change happening here\n    // we need to rethink if this needs to be refactored\n    this.update(this._snapshot, initEvent);\n    if (this.options.devTools) {\n      this.attachDevTools();\n    }\n    this.mailbox.start();\n    return this;\n  }\n  _process(event) {\n    let nextState;\n    let caughtError;\n    try {\n      nextState = this.logic.transition(this._snapshot, event, this._actorScope);\n    } catch (err) {\n      // we wrap it in a box so we can rethrow it later even if falsy value gets caught here\n      caughtError = {\n        err\n      };\n    }\n    if (caughtError) {\n      const {\n        err\n      } = caughtError;\n      this._snapshot = {\n        ...this._snapshot,\n        status: 'error',\n        error: err\n      };\n      this._error(err);\n      return;\n    }\n    this.update(nextState, event);\n    if (event.type === XSTATE_STOP) {\n      this._stopProcedure();\n      this._complete();\n    }\n  }\n  _stop() {\n    if (this._processingStatus === ProcessingStatus.Stopped) {\n      return this;\n    }\n    this.mailbox.clear();\n    if (this._processingStatus === ProcessingStatus.NotStarted) {\n      this._processingStatus = ProcessingStatus.Stopped;\n      return this;\n    }\n    this.mailbox.enqueue({\n      type: XSTATE_STOP\n    });\n    return this;\n  }\n\n  /** Stops the Actor and unsubscribe all listeners. */\n  stop() {\n    if (this._parent) {\n      throw new Error('A non-root actor cannot be stopped directly.');\n    }\n    return this._stop();\n  }\n  _complete() {\n    for (const observer of this.observers) {\n      try {\n        observer.complete?.();\n      } catch (err) {\n        reportUnhandledError(err);\n      }\n    }\n    this.observers.clear();\n  }\n  _reportError(err) {\n    if (!this.observers.size) {\n      if (!this._parent) {\n        reportUnhandledError(err);\n      }\n      return;\n    }\n    let reportError = false;\n    for (const observer of this.observers) {\n      const errorListener = observer.error;\n      reportError ||= !errorListener;\n      try {\n        errorListener?.(err);\n      } catch (err2) {\n        reportUnhandledError(err2);\n      }\n    }\n    this.observers.clear();\n    if (reportError) {\n      reportUnhandledError(err);\n    }\n  }\n  _error(err) {\n    this._stopProcedure();\n    this._reportError(err);\n    if (this._parent) {\n      this.system._relay(this, this._parent, createErrorActorEvent(this.id, err));\n    }\n  }\n  // TODO: atm children don't belong entirely to the actor so\n  // in a way - it's not even super aware of them\n  // so we can't stop them from here but we really should!\n  // right now, they are being stopped within the machine's transition\n  // but that could throw and leave us with \"orphaned\" active actors\n  _stopProcedure() {\n    if (this._processingStatus !== ProcessingStatus.Running) {\n      // Actor already stopped; do nothing\n      return this;\n    }\n\n    // Cancel all delayed events\n    this.system.scheduler.cancelAll(this);\n\n    // TODO: mailbox.reset\n    this.mailbox.clear();\n    // TODO: after `stop` we must prepare ourselves for receiving events again\n    // events sent *after* stop signal must be queued\n    // it seems like this should be the common behavior for all of our consumers\n    // so perhaps this should be unified somehow for all of them\n    this.mailbox = new Mailbox(this._process.bind(this));\n    this._processingStatus = ProcessingStatus.Stopped;\n    this.system._unregister(this);\n    return this;\n  }\n\n  /** @internal */\n  _send(event) {\n    if (this._processingStatus === ProcessingStatus.Stopped) {\n      return;\n    }\n    this.mailbox.enqueue(event);\n  }\n\n  /**\n   * Sends an event to the running Actor to trigger a transition.\n   *\n   * @param event The event to send\n   */\n  send(event) {\n    this.system._relay(undefined, this, event);\n  }\n  attachDevTools() {\n    const {\n      devTools\n    } = this.options;\n    if (devTools) {\n      const resolvedDevToolsAdapter = typeof devTools === 'function' ? devTools : dev_dist_xstateDev.devToolsAdapter;\n      resolvedDevToolsAdapter(this);\n    }\n  }\n  toJSON() {\n    return {\n      xstate$$type: $$ACTOR_TYPE,\n      id: this.id\n    };\n  }\n\n  /**\n   * Obtain the internal state of the actor, which can be persisted.\n   *\n   * @remarks\n   * The internal state can be persisted from any actor, not only machines.\n   *\n   * Note that the persisted state is not the same as the snapshot from\n   * {@link Actor.getSnapshot}. Persisted state represents the internal state of\n   * the actor, while snapshots represent the actor's last emitted value.\n   *\n   * Can be restored with {@link ActorOptions.state}\n   * @see https://stately.ai/docs/persistence\n   */\n\n  getPersistedSnapshot(options) {\n    return this.logic.getPersistedSnapshot(this._snapshot, options);\n  }\n  [symbolObservable]() {\n    return this;\n  }\n\n  /**\n   * Read an actor’s snapshot synchronously.\n   *\n   * @remarks\n   * The snapshot represent an actor's last emitted value.\n   *\n   * When an actor receives an event, its internal state may change. An actor\n   * may emit a snapshot when a state transition occurs.\n   *\n   * Note that some actors, such as callback actors generated with\n   * `fromCallback`, will not emit snapshots.\n   * @see {@link Actor.subscribe} to subscribe to an actor’s snapshot values.\n   * @see {@link Actor.getPersistedSnapshot} to persist the internal state of an actor (which is more than just a snapshot).\n   */\n  getSnapshot() {\n    return this._snapshot;\n  }\n}\n/**\n * Creates a new actor instance for the given actor logic with the provided\n * options, if any.\n *\n * @remarks\n * When you create an actor from actor logic via `createActor(logic)`, you\n * implicitly create an actor system where the created actor is the root actor.\n * Any actors spawned from this root actor and its descendants are part of that\n * actor system.\n * @example\n *\n * ```ts\n * import { createActor } from 'xstate';\n * import { someActorLogic } from './someActorLogic.ts';\n *\n * // Creating the actor, which implicitly creates an actor system with itself as the root actor\n * const actor = createActor(someActorLogic);\n *\n * actor.subscribe((snapshot) =\u003e {\n *   console.log(snapshot);\n * });\n *\n * // Actors must be started by calling `actor.start()`, which will also start the actor system.\n * actor.start();\n *\n * // Actors can receive events\n * actor.send({ type: 'someEvent' });\n *\n * // You can stop root actors by calling `actor.stop()`, which will also stop the actor system and all actors in that system.\n * actor.stop();\n * ```\n *\n * @param logic - The actor logic to create an actor from. For a state machine\n *   actor logic creator, see {@link createMachine}. Other actor logic creators\n *   include {@link fromCallback}, {@link fromEventObservable},\n *   {@link fromObservable}, {@link fromPromise}, and {@link fromTransition}.\n * @param options - Actor options\n */\nfunction createActor(logic, ...[options]) {\n  return new Actor(logic, options);\n}\n\n/**\n * Creates a new Interpreter instance for the given machine with the provided\n * options, if any.\n *\n * @deprecated Use `createActor` instead\n * @alias\n */\nconst interpret = createActor;\n\n/**\n * @deprecated Use `Actor` instead.\n * @alias\n */\n\nfunction resolveCancel(_, snapshot, actionArgs, actionParams, {\n  sendId\n}) {\n  const resolvedSendId = typeof sendId === 'function' ? sendId(actionArgs, actionParams) : sendId;\n  return [snapshot, resolvedSendId];\n}\nfunction executeCancel(actorScope, resolvedSendId) {\n  actorScope.defer(() =\u003e {\n    actorScope.system.scheduler.cancel(actorScope.self, resolvedSendId);\n  });\n}\n/**\n * Cancels a delayed `sendTo(...)` action that is waiting to be executed. The\n * canceled `sendTo(...)` action will not send its event or execute, unless the\n * `delay` has already elapsed before `cancel(...)` is called.\n *\n * @example\n *\n * ```ts\n * import { createMachine, sendTo, cancel } from 'xstate';\n *\n * const machine = createMachine({\n *   // ...\n *   on: {\n *     sendEvent: {\n *       actions: sendTo(\n *         'some-actor',\n *         { type: 'someEvent' },\n *         {\n *           id: 'some-id',\n *           delay: 1000\n *         }\n *       )\n *     },\n *     cancelEvent: {\n *       actions: cancel('some-id')\n *     }\n *   }\n * });\n * ```\n *\n * @param sendId The `id` of the `sendTo(...)` action to cancel.\n */\nfunction cancel(sendId) {\n  function cancel(args, params) {\n  }\n  cancel.type = 'xstate.cancel';\n  cancel.sendId = sendId;\n  cancel.resolve = resolveCancel;\n  cancel.execute = executeCancel;\n  return cancel;\n}\n\nfunction resolveSpawn(actorScope, snapshot, actionArgs, _actionParams, {\n  id,\n  systemId,\n  src,\n  input,\n  syncSnapshot\n}) {\n  const logic = typeof src === 'string' ? resolveReferencedActor(snapshot.machine, src) : src;\n  const resolvedId = typeof id === 'function' ? id(actionArgs) : id;\n  let actorRef;\n  if (logic) {\n    actorRef = createActor(logic, {\n      id: resolvedId,\n      src,\n      parent: actorScope.self,\n      syncSnapshot,\n      systemId,\n      input: typeof input === 'function' ? input({\n        context: snapshot.context,\n        event: actionArgs.event,\n        self: actorScope.self\n      }) : input\n    });\n  }\n  return [cloneMachineSnapshot(snapshot, {\n    children: {\n      ...snapshot.children,\n      [resolvedId]: actorRef\n    }\n  }), {\n    id,\n    actorRef\n  }];\n}\nfunction executeSpawn(actorScope, {\n  id,\n  actorRef\n}) {\n  if (!actorRef) {\n    return;\n  }\n  actorScope.defer(() =\u003e {\n    if (actorRef._processingStatus === ProcessingStatus.Stopped) {\n      return;\n    }\n    actorRef.start();\n  });\n}\nfunction spawnChild(...[src, {\n  id,\n  systemId,\n  input,\n  syncSnapshot = false\n} = {}]) {\n  function spawnChild(args, params) {\n  }\n  spawnChild.type = 'snapshot.spawnChild';\n  spawnChild.id = id;\n  spawnChild.systemId = systemId;\n  spawnChild.src = src;\n  spawnChild.input = input;\n  spawnChild.syncSnapshot = syncSnapshot;\n  spawnChild.resolve = resolveSpawn;\n  spawnChild.execute = executeSpawn;\n  return spawnChild;\n}\n\nfunction resolveStop(_, snapshot, args, actionParams, {\n  actorRef\n}) {\n  const actorRefOrString = typeof actorRef === 'function' ? actorRef(args, actionParams) : actorRef;\n  const resolvedActorRef = typeof actorRefOrString === 'string' ? snapshot.children[actorRefOrString] : actorRefOrString;\n  let children = snapshot.children;\n  if (resolvedActorRef) {\n    children = {\n      ...children\n    };\n    delete children[resolvedActorRef.id];\n  }\n  return [cloneMachineSnapshot(snapshot, {\n    children\n  }), resolvedActorRef];\n}\nfunction executeStop(actorScope, actorRef) {\n  if (!actorRef) {\n    return;\n  }\n\n  // we need to eagerly unregister it here so a new actor with the same systemId can be registered immediately\n  // since we defer actual stopping of the actor but we don't defer actor creations (and we can't do that)\n  // this could throw on `systemId` collision, for example, when dealing with reentering transitions\n  actorScope.system._unregister(actorRef);\n\n  // this allows us to prevent an actor from being started if it gets stopped within the same macrostep\n  // this can happen, for example, when the invoking state is being exited immediately by an always transition\n  if (actorRef._processingStatus !== ProcessingStatus.Running) {\n    actorScope.stopChild(actorRef);\n    return;\n  }\n  // stopping a child enqueues a stop event in the child actor's mailbox\n  // we need for all of the already enqueued events to be processed before we stop the child\n  // the parent itself might want to send some events to a child (for example from exit actions on the invoking state)\n  // and we don't want to ignore those events\n  actorScope.defer(() =\u003e {\n    actorScope.stopChild(actorRef);\n  });\n}\n/**\n * Stops a child actor.\n *\n * @param actorRef The actor to stop.\n */\nfunction stopChild(actorRef) {\n  function stop(args, params) {\n  }\n  stop.type = 'xstate.stopChild';\n  stop.actorRef = actorRef;\n  stop.resolve = resolveStop;\n  stop.execute = executeStop;\n  return stop;\n}\n\n/**\n * Stops a child actor.\n *\n * @deprecated Use `stopChild(...)` instead\n * @alias\n */\nconst stop = stopChild;\n\nfunction checkStateIn(snapshot, _, {\n  stateValue\n}) {\n  if (typeof stateValue === 'string' \u0026\u0026 isStateId(stateValue)) {\n    const target = snapshot.machine.getStateNodeById(stateValue);\n    return snapshot._nodes.some(sn =\u003e sn === target);\n  }\n  return snapshot.matches(stateValue);\n}\nfunction stateIn(stateValue) {\n  function stateIn(args, params) {\n    return false;\n  }\n  stateIn.check = checkStateIn;\n  stateIn.stateValue = stateValue;\n  return stateIn;\n}\nfunction checkNot(snapshot, {\n  context,\n  event\n}, {\n  guards\n}) {\n  return !evaluateGuard(guards[0], context, event, snapshot);\n}\n\n/**\n * Higher-order guard that evaluates to `true` if the `guard` passed to it\n * evaluates to `false`.\n *\n * @category Guards\n * @example\n *\n * ```ts\n * import { setup, not } from 'xstate';\n *\n * const machine = setup({\n *   guards: {\n *     someNamedGuard: () =\u003e false\n *   }\n * }).createMachine({\n *   on: {\n *     someEvent: {\n *       guard: not('someNamedGuard'),\n *       actions: () =\u003e {\n *         // will be executed if guard in `not(...)`\n *         // evaluates to `false`\n *       }\n *     }\n *   }\n * });\n * ```\n *\n * @returns A guard\n */\nfunction not(guard) {\n  function not(args, params) {\n    return false;\n  }\n  not.check = checkNot;\n  not.guards = [guard];\n  return not;\n}\nfunction checkAnd(snapshot, {\n  context,\n  event\n}, {\n  guards\n}) {\n  return guards.every(guard =\u003e evaluateGuard(guard, context, event, snapshot));\n}\n\n/**\n * Higher-order guard that evaluates to `true` if all `guards` passed to it\n * evaluate to `true`.\n *\n * @category Guards\n * @example\n *\n * ```ts\n * import { setup, and } from 'xstate';\n *\n * const machine = setup({\n *   guards: {\n *     someNamedGuard: () =\u003e true\n *   }\n * }).createMachine({\n *   on: {\n *     someEvent: {\n *       guard: and([({ context }) =\u003e context.value \u003e 0, 'someNamedGuard']),\n *       actions: () =\u003e {\n *         // will be executed if all guards in `and(...)`\n *         // evaluate to true\n *       }\n *     }\n *   }\n * });\n * ```\n *\n * @returns A guard action object\n */\nfunction and(guards) {\n  function and(args, params) {\n    return false;\n  }\n  and.check = checkAnd;\n  and.guards = guards;\n  return and;\n}\nfunction checkOr(snapshot, {\n  context,\n  event\n}, {\n  guards\n}) {\n  return guards.some(guard =\u003e evaluateGuard(guard, context, event, snapshot));\n}\n\n/**\n * Higher-order guard that evaluates to `true` if any of the `guards` passed to\n * it evaluate to `true`.\n *\n * @category Guards\n * @example\n *\n * ```ts\n * import { setup, or } from 'xstate';\n *\n * const machine = setup({\n *   guards: {\n *     someNamedGuard: () =\u003e true\n *   }\n * }).createMachine({\n *   on: {\n *     someEvent: {\n *       guard: or([({ context }) =\u003e context.value \u003e 0, 'someNamedGuard']),\n *       actions: () =\u003e {\n *         // will be executed if any of the guards in `or(...)`\n *         // evaluate to true\n *       }\n *     }\n *   }\n * });\n * ```\n *\n * @returns A guard action object\n */\nfunction or(guards) {\n  function or(args, params) {\n    return false;\n  }\n  or.check = checkOr;\n  or.guards = guards;\n  return or;\n}\n\n// TODO: throw on cycles (depth check should be enough)\nfunction evaluateGuard(guard, context, event, snapshot) {\n  const {\n    machine\n  } = snapshot;\n  const isInline = typeof guard === 'function';\n  const resolved = isInline ? guard : machine.implementations.guards[typeof guard === 'string' ? guard : guard.type];\n  if (!isInline \u0026\u0026 !resolved) {\n    throw new Error(`Guard '${typeof guard === 'string' ? guard : guard.type}' is not implemented.'.`);\n  }\n  if (typeof resolved !== 'function') {\n    return evaluateGuard(resolved, context, event, snapshot);\n  }\n  const guardArgs = {\n    context,\n    event\n  };\n  const guardParams = isInline || typeof guard === 'string' ? undefined : 'params' in guard ? typeof guard.params === 'function' ? guard.params({\n    context,\n    event\n  }) : guard.params : undefined;\n  if (!('check' in resolved)) {\n    // the existing type of `.guards` assumes non-nullable `TExpressionGuard`\n    // inline guards expect `TExpressionGuard` to be set to `undefined`\n    // it's fine to cast this here, our logic makes sure that we call those 2 \"variants\" correctly\n    return resolved(guardArgs, guardParams);\n  }\n  const builtinGuard = resolved;\n  return builtinGuard.check(snapshot, guardArgs, resolved // this holds all params\n  );\n}\n\nconst isAtomicStateNode = stateNode =\u003e stateNode.type === 'atomic' || stateNode.type === 'final';\nfunction getChildren(stateNode) {\n  return Object.values(stateNode.states).filter(sn =\u003e sn.type !== 'history');\n}\nfunction getProperAncestors(stateNode, toStateNode) {\n  const ancestors = [];\n  if (toStateNode === stateNode) {\n    return ancestors;\n  }\n\n  // add all ancestors\n  let m = stateNode.parent;\n  while (m \u0026\u0026 m !== toStateNode) {\n    ancestors.push(m);\n    m = m.parent;\n  }\n  return ancestors;\n}\nfunction getAllStateNodes(stateNodes) {\n  const nodeSet = new Set(stateNodes);\n  const adjList = getAdjList(nodeSet);\n\n  // add descendants\n  for (const s of nodeSet) {\n    // if previously active, add existing child nodes\n    if (s.type === 'compound' \u0026\u0026 (!adjList.get(s) || !adjList.get(s).length)) {\n      getInitialStateNodesWithTheirAncestors(s).forEach(sn =\u003e nodeSet.add(sn));\n    } else {\n      if (s.type === 'parallel') {\n        for (const child of getChildren(s)) {\n          if (child.type === 'history') {\n            continue;\n          }\n          if (!nodeSet.has(child)) {\n            const initialStates = getInitialStateNodesWithTheirAncestors(child);\n            for (const initialStateNode of initialStates) {\n              nodeSet.add(initialStateNode);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  // add all ancestors\n  for (const s of nodeSet) {\n    let m = s.parent;\n    while (m) {\n      nodeSet.add(m);\n      m = m.parent;\n    }\n  }\n  return nodeSet;\n}\nfunction getValueFromAdj(baseNode, adjList) {\n  const childStateNodes = adjList.get(baseNode);\n  if (!childStateNodes) {\n    return {}; // todo: fix?\n  }\n\n  if (baseNode.type === 'compound') {\n    const childStateNode = childStateNodes[0];\n    if (childStateNode) {\n      if (isAtomicStateNode(childStateNode)) {\n        return childStateNode.key;\n      }\n    } else {\n      return {};\n    }\n  }\n  const stateValue = {};\n  for (const childStateNode of childStateNodes) {\n    stateValue[childStateNode.key] = getValueFromAdj(childStateNode, adjList);\n  }\n  return stateValue;\n}\nfunction getAdjList(stateNodes) {\n  const adjList = new Map();\n  for (const s of stateNodes) {\n    if (!adjList.has(s)) {\n      adjList.set(s, []);\n    }\n    if (s.parent) {\n      if (!adjList.has(s.parent)) {\n        adjList.set(s.parent, []);\n      }\n      adjList.get(s.parent).push(s);\n    }\n  }\n  return adjList;\n}\nfunction getStateValue(rootNode, stateNodes) {\n  const config = getAllStateNodes(stateNodes);\n  return getValueFromAdj(rootNode, getAdjList(config));\n}\nfunction isInFinalState(stateNodeSet, stateNode) {\n  if (stateNode.type === 'compound') {\n    return getChildren(stateNode).some(s =\u003e s.type === 'final' \u0026\u0026 stateNodeSet.has(s));\n  }\n  if (stateNode.type === 'parallel') {\n    return getChildren(stateNode).every(sn =\u003e isInFinalState(stateNodeSet, sn));\n  }\n  return stateNode.type === 'final';\n}\nconst isStateId = str =\u003e str[0] === STATE_IDENTIFIER;\nfunction getCandidates(stateNode, receivedEventType) {\n  const candidates = stateNode.transitions.get(receivedEventType) || [...stateNode.transitions.keys()].filter(eventDescriptor =\u003e {\n    // check if transition is a wildcard transition,\n    // which matches any non-transient events\n    if (eventDescriptor === WILDCARD) {\n      return true;\n    }\n    if (!eventDescriptor.endsWith('.*')) {\n      return false;\n    }\n    const partialEventTokens = eventDescriptor.split('.');\n    const eventTokens = receivedEventType.split('.');\n    for (let tokenIndex = 0; tokenIndex \u003c partialEventTokens.length; tokenIndex++) {\n      const partialEventToken = partialEventTokens[tokenIndex];\n      const eventToken = eventTokens[tokenIndex];\n      if (partialEventToken === '*') {\n        const isLastToken = tokenIndex === partialEventTokens.length - 1;\n        return isLastToken;\n      }\n      if (partialEventToken !== eventToken) {\n        return false;\n      }\n    }\n    return true;\n  }).sort((a, b) =\u003e b.length - a.length).flatMap(key =\u003e stateNode.transitions.get(key));\n  return candidates;\n}\n\n/** All delayed transitions from the config. */\nfunction getDelayedTransitions(stateNode) {\n  const afterConfig = stateNode.config.after;\n  if (!afterConfig) {\n    return [];\n  }\n  const mutateEntryExit = (delay, i) =\u003e {\n    const afterEvent = createAfterEvent(delay, stateNode.id);\n    const eventType = afterEvent.type;\n    stateNode.entry.push(raise(afterEvent, {\n      id: eventType,\n      delay\n    }));\n    stateNode.exit.push(cancel(eventType));\n    return eventType;\n  };\n  const delayedTransitions = Object.keys(afterConfig).flatMap((delay, i) =\u003e {\n    const configTransition = afterConfig[delay];\n    const resolvedTransition = typeof configTransition === 'string' ? {\n      target: configTransition\n    } : configTransition;\n    const resolvedDelay = Number.isNaN(+delay) ? delay : +delay;\n    const eventType = mutateEntryExit(resolvedDelay);\n    return toArray(resolvedTransition).map(transition =\u003e ({\n      ...transition,\n      event: eventType,\n      delay: resolvedDelay\n    }));\n  });\n  return delayedTransitions.map(delayedTransition =\u003e {\n    const {\n      delay\n    } = delayedTransition;\n    return {\n      ...formatTransition(stateNode, delayedTransition.event, delayedTransition),\n      delay\n    };\n  });\n}\nfunction formatTransition(stateNode, descriptor, transitionConfig) {\n  const normalizedTarget = normalizeTarget(transitionConfig.target);\n  const reenter = transitionConfig.reenter ?? false;\n  const target = resolveTarget(stateNode, normalizedTarget);\n  const transition = {\n    ...transitionConfig,\n    actions: toArray(transitionConfig.actions),\n    guard: transitionConfig.guard,\n    target,\n    source: stateNode,\n    reenter,\n    eventType: descriptor,\n    toJSON: () =\u003e ({\n      ...transition,\n      source: `#${stateNode.id}`,\n      target: target ? target.map(t =\u003e `#${t.id}`) : undefined\n    })\n  };\n  return transition;\n}\nfunction formatTransitions(stateNode) {\n  const transitions = new Map();\n  if (stateNode.config.on) {\n    for (const descriptor of Object.keys(stateNode.config.on)) {\n      if (descriptor === NULL_EVENT) {\n        throw new Error('Null events (\"\") cannot be specified as a transition key. Use `always: { ... }` instead.');\n      }\n      const transitionsConfig = stateNode.config.on[descriptor];\n      transitions.set(descriptor, toTransitionConfigArray(transitionsConfig).map(t =\u003e formatTransition(stateNode, descriptor, t)));\n    }\n  }\n  if (stateNode.config.onDone) {\n    const descriptor = `xstate.done.state.${stateNode.id}`;\n    transitions.set(descriptor, toTransitionConfigArray(stateNode.config.onDone).map(t =\u003e formatTransition(stateNode, descriptor, t)));\n  }\n  for (const invokeDef of stateNode.invoke) {\n    if (invokeDef.onDone) {\n      const descriptor = `xstate.done.actor.${invokeDef.id}`;\n      transitions.set(descriptor, toTransitionConfigArray(invokeDef.onDone).map(t =\u003e formatTransition(stateNode, descriptor, t)));\n    }\n    if (invokeDef.onError) {\n      const descriptor = `xstate.error.actor.${invokeDef.id}`;\n      transitions.set(descriptor, toTransitionConfigArray(invokeDef.onError).map(t =\u003e formatTransition(stateNode, descriptor, t)));\n    }\n    if (invokeDef.onSnapshot) {\n      const descriptor = `xstate.snapshot.${invokeDef.id}`;\n      transitions.set(descriptor, toTransitionConfigArray(invokeDef.onSnapshot).map(t =\u003e formatTransition(stateNode, descriptor, t)));\n    }\n  }\n  for (const delayedTransition of stateNode.after) {\n    let existing = transitions.get(delayedTransition.eventType);\n    if (!existing) {\n      existing = [];\n      transitions.set(delayedTransition.eventType, existing);\n    }\n    existing.push(delayedTransition);\n  }\n  return transitions;\n}\nfunction formatInitialTransition(stateNode, _target) {\n  const resolvedTarget = typeof _target === 'string' ? stateNode.states[_target] : _target ? stateNode.states[_target.target] : undefined;\n  if (!resolvedTarget \u0026\u0026 _target) {\n    throw new Error(`Initial state node \"${_target}\" not found on parent state node #${stateNode.id}`);\n  }\n  const transition = {\n    source: stateNode,\n    actions: !_target || typeof _target === 'string' ? [] : toArray(_target.actions),\n    eventType: null,\n    reenter: false,\n    target: resolvedTarget ? [resolvedTarget] : [],\n    toJSON: () =\u003e ({\n      ...transition,\n      source: `#${stateNode.id}`,\n      target: resolvedTarget ? [`#${resolvedTarget.id}`] : []\n    })\n  };\n  return transition;\n}\nfunction resolveTarget(stateNode, targets) {\n  if (targets === undefined) {\n    // an undefined target signals that the state node should not transition from that state when receiving that event\n    return undefined;\n  }\n  return targets.map(target =\u003e {\n    if (typeof target !== 'string') {\n      return target;\n    }\n    if (isStateId(target)) {\n      return stateNode.machine.getStateNodeById(target);\n    }\n    const isInternalTarget = target[0] === STATE_DELIMITER;\n    // If internal target is defined on machine,\n    // do not include machine key on target\n    if (isInternalTarget \u0026\u0026 !stateNode.parent) {\n      return getStateNodeByPath(stateNode, target.slice(1));\n    }\n    const resolvedTarget = isInternalTarget ? stateNode.key + target : target;\n    if (stateNode.parent) {\n      try {\n        const targetStateNode = getStateNodeByPath(stateNode.parent, resolvedTarget);\n        return targetStateNode;\n      } catch (err) {\n        throw new Error(`Invalid transition definition for state node '${stateNode.id}':\\n${err.message}`);\n      }\n    } else {\n      throw new Error(`Invalid target: \"${target}\" is not a valid target from the root node. Did you mean \".${target}\"?`);\n    }\n  });\n}\nfunction resolveHistoryDefaultTransition(stateNode) {\n  const normalizedTarget = normalizeTarget(stateNode.config.target);\n  if (!normalizedTarget) {\n    return stateNode.parent.initial;\n  }\n  return {\n    target: normalizedTarget.map(t =\u003e typeof t === 'string' ? getStateNodeByPath(stateNode.parent, t) : t)\n  };\n}\nfunction isHistoryNode(stateNode) {\n  return stateNode.type === 'history';\n}\nfunction getInitialStateNodesWithTheirAncestors(stateNode) {\n  const states = getInitialStateNodes(stateNode);\n  for (const initialState of states) {\n    for (const ancestor of getProperAncestors(initialState, stateNode)) {\n      states.add(ancestor);\n    }\n  }\n  return states;\n}\nfunction getInitialStateNodes(stateNode) {\n  const set = new Set();\n  function iter(descStateNode) {\n    if (set.has(descStateNode)) {\n      return;\n    }\n    set.add(descStateNode);\n    if (descStateNode.type === 'compound') {\n      iter(descStateNode.initial.target[0]);\n    } else if (descStateNode.type === 'parallel') {\n      for (const child of getChildren(descStateNode)) {\n        iter(child);\n      }\n    }\n  }\n  iter(stateNode);\n  return set;\n}\n/** Returns the child state node from its relative `stateKey`, or throws. */\nfunction getStateNode(stateNode, stateKey) {\n  if (isStateId(stateKey)) {\n    return stateNode.machine.getStateNodeById(stateKey);\n  }\n  if (!stateNode.states) {\n    throw new Error(`Unable to retrieve child state '${stateKey}' from '${stateNode.id}'; no child states exist.`);\n  }\n  const result = stateNode.states[stateKey];\n  if (!result) {\n    throw new Error(`Child state '${stateKey}' does not exist on '${stateNode.id}'`);\n  }\n  return result;\n}\n\n/**\n * Returns the relative state node from the given `statePath`, or throws.\n *\n * @param statePath The string or string array relative path to the state node.\n */\nfunction getStateNodeByPath(stateNode, statePath) {\n  if (typeof statePath === 'string' \u0026\u0026 isStateId(statePath)) {\n    try {\n      return stateNode.machine.getStateNodeById(statePath);\n    } catch (e) {\n      // try individual paths\n      // throw e;\n    }\n  }\n  const arrayStatePath = toStatePath(statePath).slice();\n  let currentStateNode = stateNode;\n  while (arrayStatePath.length) {\n    const key = arrayStatePath.shift();\n    if (!key.length) {\n      break;\n    }\n    currentStateNode = getStateNode(currentStateNode, key);\n  }\n  return currentStateNode;\n}\n\n/**\n * Returns the state nodes represented by the current state value.\n *\n * @param stateValue The state value or State instance\n */\nfunction getStateNodes(stateNode, stateValue) {\n  if (typeof stateValue === 'string') {\n    const childStateNode = stateNode.states[stateValue];\n    if (!childStateNode) {\n      throw new Error(`State '${stateValue}' does not exist on '${stateNode.id}'`);\n    }\n    return [stateNode, childStateNode];\n  }\n  const childStateKeys = Object.keys(stateValue);\n  const childStateNodes = childStateKeys.map(subStateKey =\u003e getStateNode(stateNode, subStateKey)).filter(Boolean);\n  return [stateNode.machine.root, stateNode].concat(childStateNodes, childStateKeys.reduce((allSubStateNodes, subStateKey) =\u003e {\n    const subStateNode = getStateNode(stateNode, subStateKey);\n    if (!subStateNode) {\n      return allSubStateNodes;\n    }\n    const subStateNodes = getStateNodes(subStateNode, stateValue[subStateKey]);\n    return allSubStateNodes.concat(subStateNodes);\n  }, []));\n}\nfunction transitionAtomicNode(stateNode, stateValue, snapshot, event) {\n  const childStateNode = getStateNode(stateNode, stateValue);\n  const next = childStateNode.next(snapshot, event);\n  if (!next || !next.length) {\n    return stateNode.next(snapshot, event);\n  }\n  return next;\n}\nfunction transitionCompoundNode(stateNode, stateValue, snapshot, event) {\n  const subStateKeys = Object.keys(stateValue);\n  const childStateNode = getStateNode(stateNode, subStateKeys[0]);\n  const next = transitionNode(childStateNode, stateValue[subStateKeys[0]], snapshot, event);\n  if (!next || !next.length) {\n    return stateNode.next(snapshot, event);\n  }\n  return next;\n}\nfunction transitionParallelNode(stateNode, stateValue, snapshot, event) {\n  const allInnerTransitions = [];\n  for (const subStateKey of Object.keys(stateValue)) {\n    const subStateValue = stateValue[subStateKey];\n    if (!subStateValue) {\n      continue;\n    }\n    const subStateNode = getStateNode(stateNode, subStateKey);\n    const innerTransitions = transitionNode(subStateNode, subStateValue, snapshot, event);\n    if (innerTransitions) {\n      allInnerTransitions.push(...innerTransitions);\n    }\n  }\n  if (!allInnerTransitions.length) {\n    return stateNode.next(snapshot, event);\n  }\n  return allInnerTransitions;\n}\nfunction transitionNode(stateNode, stateValue, snapshot, event) {\n  // leaf node\n  if (typeof stateValue === 'string') {\n    return transitionAtomicNode(stateNode, stateValue, snapshot, event);\n  }\n\n  // compound node\n  if (Object.keys(stateValue).length === 1) {\n    return transitionCompoundNode(stateNode, stateValue, snapshot, event);\n  }\n\n  // parallel node\n  return transitionParallelNode(stateNode, stateValue, snapshot, event);\n}\nfunction getHistoryNodes(stateNode) {\n  return Object.keys(stateNode.states).map(key =\u003e stateNode.states[key]).filter(sn =\u003e sn.type === 'history');\n}\nfunction isDescendant(childStateNode, parentStateNode) {\n  let marker = childStateNode;\n  while (marker.parent \u0026\u0026 marker.parent !== parentStateNode) {\n    marker = marker.parent;\n  }\n  return marker.parent === parentStateNode;\n}\nfunction hasIntersection(s1, s2) {\n  const set1 = new Set(s1);\n  const set2 = new Set(s2);\n  for (const item of set1) {\n    if (set2.has(item)) {\n      return true;\n    }\n  }\n  for (const item of set2) {\n    if (set1.has(item)) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction removeConflictingTransitions(enabledTransitions, stateNodeSet, historyValue) {\n  const filteredTransitions = new Set();\n  for (const t1 of enabledTransitions) {\n    let t1Preempted = false;\n    const transitionsToRemove = new Set();\n    for (const t2 of filteredTransitions) {\n      if (hasIntersection(computeExitSet([t1], stateNodeSet, historyValue), computeExitSet([t2], stateNodeSet, historyValue))) {\n        if (isDescendant(t1.source, t2.source)) {\n          transitionsToRemove.add(t2);\n        } else {\n          t1Preempted = true;\n          break;\n        }\n      }\n    }\n    if (!t1Preempted) {\n      for (const t3 of transitionsToRemove) {\n        filteredTransitions.delete(t3);\n      }\n      filteredTransitions.add(t1);\n    }\n  }\n  return Array.from(filteredTransitions);\n}\nfunction findLeastCommonAncestor(stateNodes) {\n  const [head, ...tail] = stateNodes;\n  for (const ancestor of getProperAncestors(head, undefined)) {\n    if (tail.every(sn =\u003e isDescendant(sn, ancestor))) {\n      return ancestor;\n    }\n  }\n}\nfunction getEffectiveTargetStates(transition, historyValue) {\n  if (!transition.target) {\n    return [];\n  }\n  const targets = new Set();\n  for (const targetNode of transition.target) {\n    if (isHistoryNode(targetNode)) {\n      if (historyValue[targetNode.id]) {\n        for (const node of historyValue[targetNode.id]) {\n          targets.add(node);\n        }\n      } else {\n        for (const node of getEffectiveTargetStates(resolveHistoryDefaultTransition(targetNode), historyValue)) {\n          targets.add(node);\n        }\n      }\n    } else {\n      targets.add(targetNode);\n    }\n  }\n  return [...targets];\n}\nfunction getTransitionDomain(transition, historyValue) {\n  const targetStates = getEffectiveTargetStates(transition, historyValue);\n  if (!targetStates) {\n    return;\n  }\n  if (!transition.reenter \u0026\u0026 targetStates.every(target =\u003e target === transition.source || isDescendant(target, transition.source))) {\n    return transition.source;\n  }\n  const lca = findLeastCommonAncestor(targetStates.concat(transition.source));\n  if (lca) {\n    return lca;\n  }\n\n  // at this point we know that it's a root transition since LCA couldn't be found\n  if (transition.reenter) {\n    return;\n  }\n  return transition.source.machine.root;\n}\nfunction computeExitSet(transitions, stateNodeSet, historyValue) {\n  const statesToExit = new Set();\n  for (const t of transitions) {\n    if (t.target?.length) {\n      const domain = getTransitionDomain(t, historyValue);\n      if (t.reenter \u0026\u0026 t.source === domain) {\n        statesToExit.add(domain);\n      }\n      for (const stateNode of stateNodeSet) {\n        if (isDescendant(stateNode, domain)) {\n          statesToExit.add(stateNode);\n        }\n      }\n    }\n  }\n  return [...statesToExit];\n}\nfunction areStateNodeCollectionsEqual(prevStateNodes, nextStateNodeSet) {\n  if (prevStateNodes.length !== nextStateNodeSet.size) {\n    return false;\n  }\n  for (const node of prevStateNodes) {\n    if (!nextStateNodeSet.has(node)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/** https://www.w3.org/TR/scxml/#microstepProcedure */\nfunction microstep(transitions, currentSnapshot, actorScope, event, isInitial, internalQueue) {\n  if (!transitions.length) {\n    return currentSnapshot;\n  }\n  const mutStateNodeSet = new Set(currentSnapshot._nodes);\n  let historyValue = currentSnapshot.historyValue;\n  const filteredTransitions = removeConflictingTransitions(transitions, mutStateNodeSet, historyValue);\n  let nextState = currentSnapshot;\n\n  // Exit states\n  if (!isInitial) {\n    [nextState, historyValue] = exitStates(nextState, event, actorScope, filteredTransitions, mutStateNodeSet, historyValue, internalQueue);\n  }\n\n  // Execute transition content\n  nextState = resolveActionsAndContext(nextState, event, actorScope, filteredTransitions.flatMap(t =\u003e t.actions), internalQueue);\n\n  // Enter states\n  nextState = enterStates(nextState, event, actorScope, filteredTransitions, mutStateNodeSet, internalQueue, historyValue, isInitial);\n  const nextStateNodes = [...mutStateNodeSet];\n  if (nextState.status === 'done') {\n    nextState = resolveActionsAndContext(nextState, event, actorScope, nextStateNodes.sort((a, b) =\u003e b.order - a.order).flatMap(state =\u003e state.exit), internalQueue);\n  }\n  try {\n    if (historyValue === currentSnapshot.historyValue \u0026\u0026 areStateNodeCollectionsEqual(currentSnapshot._nodes, mutStateNodeSet)) {\n      return nextState;\n    }\n    return cloneMachineSnapshot(nextState, {\n      _nodes: nextStateNodes,\n      historyValue\n    });\n  } catch (e) {\n    // TODO: Refactor this once proper error handling is implemented.\n    // See https://github.com/statelyai/rfcs/pull/4\n    throw e;\n  }\n}\nfunction getMachineOutput(snapshot, event, actorScope, rootNode, rootCompletionNode) {\n  if (rootNode.output === undefined) {\n    return;\n  }\n  const doneStateEvent = createDoneStateEvent(rootCompletionNode.id, rootCompletionNode.output !== undefined \u0026\u0026 rootCompletionNode.parent ? resolveOutput(rootCompletionNode.output, snapshot.context, event, actorScope.self) : undefined);\n  return resolveOutput(rootNode.output, snapshot.context, doneStateEvent, actorScope.self);\n}\nfunction enterStates(currentSnapshot, event, actorScope, filteredTransitions, mutStateNodeSet, internalQueue, historyValue, isInitial) {\n  let nextSnapshot = currentSnapshot;\n  const statesToEnter = new Set();\n  // those are states that were directly targeted or indirectly targeted by the explicit target\n  // in other words, those are states for which initial actions should be executed\n  // when we target `#deep_child` initial actions of its ancestors shouldn't be executed\n  const statesForDefaultEntry = new Set();\n  computeEntrySet(filteredTransitions, historyValue, statesForDefaultEntry, statesToEnter);\n\n  // In the initial state, the root state node is \"entered\".\n  if (isInitial) {\n    statesForDefaultEntry.add(currentSnapshot.machine.root);\n  }\n  const completedNodes = new Set();\n  for (const stateNodeToEnter of [...statesToEnter].sort((a, b) =\u003e a.order - b.order)) {\n    mutStateNodeSet.add(stateNodeToEnter);\n    const actions = [];\n\n    // Add entry actions\n    actions.push(...stateNodeToEnter.entry);\n    for (const invokeDef of stateNodeToEnter.invoke) {\n      actions.push(spawnChild(invokeDef.src, {\n        ...invokeDef,\n        syncSnapshot: !!invokeDef.onSnapshot\n      }));\n    }\n    if (statesForDefaultEntry.has(stateNodeToEnter)) {\n      const initialActions = stateNodeToEnter.initial.actions;\n      actions.push(...initialActions);\n    }\n    nextSnapshot = resolveActionsAndContext(nextSnapshot, event, actorScope, actions, internalQueue, stateNodeToEnter.invoke.map(invokeDef =\u003e invokeDef.id));\n    if (stateNodeToEnter.type === 'final') {\n      const parent = stateNodeToEnter.parent;\n      let ancestorMarker = parent?.type === 'parallel' ? parent : parent?.parent;\n      let rootCompletionNode = ancestorMarker || stateNodeToEnter;\n      if (parent?.type === 'compound') {\n        internalQueue.push(createDoneStateEvent(parent.id, stateNodeToEnter.output !== undefined ? resolveOutput(stateNodeToEnter.output, nextSnapshot.context, event, actorScope.self) : undefined));\n      }\n      while (ancestorMarker?.type === 'parallel' \u0026\u0026 !completedNodes.has(ancestorMarker) \u0026\u0026 isInFinalState(mutStateNodeSet, ancestorMarker)) {\n        completedNodes.add(ancestorMarker);\n        internalQueue.push(createDoneStateEvent(ancestorMarker.id));\n        rootCompletionNode = ancestorMarker;\n        ancestorMarker = ancestorMarker.parent;\n      }\n      if (ancestorMarker) {\n        continue;\n      }\n      nextSnapshot = cloneMachineSnapshot(nextSnapshot, {\n        status: 'done',\n        output: getMachineOutput(nextSnapshot, event, actorScope, nextSnapshot.machine.root, rootCompletionNode)\n      });\n    }\n  }\n  return nextSnapshot;\n}\nfunction computeEntrySet(transitions, historyValue, statesForDefaultEntry, statesToEnter) {\n  for (const t of transitions) {\n    const domain = getTransitionDomain(t, historyValue);\n    for (const s of t.target || []) {\n      if (!isHistoryNode(s) \u0026\u0026 (\n      // if the target is different than the source then it will *definitely* be entered\n      t.source !== s ||\n      // we know that the domain can't lie within the source\n      // if it's different than the source then it's outside of it and it means that the target has to be entered as well\n      t.source !== domain ||\n      // reentering transitions always enter the target, even if it's the source itself\n      t.reenter)) {\n        statesToEnter.add(s);\n        statesForDefaultEntry.add(s);\n      }\n      addDescendantStatesToEnter(s, historyValue, statesForDefaultEntry, statesToEnter);\n    }\n    const targetStates = getEffectiveTargetStates(t, historyValue);\n    for (const s of targetStates) {\n      const ancestors = getProperAncestors(s, domain);\n      if (domain?.type === 'parallel') {\n        ancestors.push(domain);\n      }\n      addAncestorStatesToEnter(statesToEnter, historyValue, statesForDefaultEntry, ancestors, !t.source.parent \u0026\u0026 t.reenter ? undefined : domain);\n    }\n  }\n}\nfunction addDescendantStatesToEnter(stateNode, historyValue, statesForDefaultEntry, statesToEnter) {\n  if (isHistoryNode(stateNode)) {\n    if (historyValue[stateNode.id]) {\n      const historyStateNodes = historyValue[stateNode.id];\n      for (const s of historyStateNodes) {\n        statesToEnter.add(s);\n        addDescendantStatesToEnter(s, historyValue, statesForDefaultEntry, statesToEnter);\n      }\n      for (const s of historyStateNodes) {\n        addProperAncestorStatesToEnter(s, stateNode.parent, statesToEnter, historyValue, statesForDefaultEntry);\n      }\n    } else {\n      const historyDefaultTransition = resolveHistoryDefaultTransition(stateNode);\n      for (const s of historyDefaultTransition.target) {\n        statesToEnter.add(s);\n        if (historyDefaultTransition === stateNode.parent?.initial) {\n          statesForDefaultEntry.add(stateNode.parent);\n        }\n        addDescendantStatesToEnter(s, historyValue, statesForDefaultEntry, statesToEnter);\n      }\n      for (const s of historyDefaultTransition.target) {\n        addProperAncestorStatesToEnter(s, stateNode.parent, statesToEnter, historyValue, statesForDefaultEntry);\n      }\n    }\n  } else {\n    if (stateNode.type === 'compound') {\n      const [initialState] = stateNode.initial.target;\n      if (!isHistoryNode(initialState)) {\n        statesToEnter.add(initialState);\n        statesForDefaultEntry.add(initialState);\n      }\n      addDescendantStatesToEnter(initialState, historyValue, statesForDefaultEntry, statesToEnter);\n      addProperAncestorStatesToEnter(initialState, stateNode, statesToEnter, historyValue, statesForDefaultEntry);\n    } else {\n      if (stateNode.type === 'parallel') {\n        for (const child of getChildren(stateNode).filter(sn =\u003e !isHistoryNode(sn))) {\n          if (![...statesToEnter].some(s =\u003e isDescendant(s, child))) {\n            if (!isHistoryNode(child)) {\n              statesToEnter.add(child);\n              statesForDefaultEntry.add(child);\n            }\n            addDescendantStatesToEnter(child, historyValue, statesForDefaultEntry, statesToEnter);\n          }\n        }\n      }\n    }\n  }\n}\nfunction addAncestorStatesToEnter(statesToEnter, historyValue, statesForDefaultEntry, ancestors, reentrancyDomain) {\n  for (const anc of ancestors) {\n    if (!reentrancyDomain || isDescendant(anc, reentrancyDomain)) {\n      statesToEnter.add(anc);\n    }\n    if (anc.type === 'parallel') {\n      for (const child of getChildren(anc).filter(sn =\u003e !isHistoryNode(sn))) {\n        if (![...statesToEnter].some(s =\u003e isDescendant(s, child))) {\n          statesToEnter.add(child);\n          addDescendantStatesToEnter(child, historyValue, statesForDefaultEntry, statesToEnter);\n        }\n      }\n    }\n  }\n}\nfunction addProperAncestorStatesToEnter(stateNode, toStateNode, statesToEnter, historyValue, statesForDefaultEntry) {\n  addAncestorStatesToEnter(statesToEnter, historyValue, statesForDefaultEntry, getProperAncestors(stateNode, toStateNode));\n}\nfunction exitStates(currentSnapshot, event, actorScope, transitions, mutStateNodeSet, historyValue, internalQueue) {\n  let nextSnapshot = currentSnapshot;\n  const statesToExit = computeExitSet(transitions, mutStateNodeSet, historyValue);\n  statesToExit.sort((a, b) =\u003e b.order - a.order);\n  let changedHistory;\n\n  // From SCXML algorithm: https://www.w3.org/TR/scxml/#exitStates\n  for (const exitStateNode of statesToExit) {\n    for (const historyNode of getHistoryNodes(exitStateNode)) {\n      let predicate;\n      if (historyNode.history === 'deep') {\n        predicate = sn =\u003e isAtomicStateNode(sn) \u0026\u0026 isDescendant(sn, exitStateNode);\n      } else {\n        predicate = sn =\u003e {\n          return sn.parent === exitStateNode;\n        };\n      }\n      changedHistory ??= {\n        ...historyValue\n      };\n      changedHistory[historyNode.id] = Array.from(mutStateNodeSet).filter(predicate);\n    }\n  }\n  for (const s of statesToExit) {\n    nextSnapshot = resolveActionsAndContext(nextSnapshot, event, actorScope, [...s.exit, ...s.invoke.map(def =\u003e stopChild(def.id))], internalQueue);\n    mutStateNodeSet.delete(s);\n  }\n  return [nextSnapshot, changedHistory || historyValue];\n}\nlet executingCustomAction = false;\nfunction resolveAndExecuteActionsWithContext(currentSnapshot, event, actorScope, actions, extra, retries) {\n  const {\n    machine\n  } = currentSnapshot;\n  let intermediateSnapshot = currentSnapshot;\n  for (const action of actions) {\n    const isInline = typeof action === 'function';\n    const resolvedAction = isInline ? action :\n    // the existing type of `.actions` assumes non-nullable `TExpressionAction`\n    // it's fine to cast this here to get a common type and lack of errors in the rest of the code\n    // our logic below makes sure that we call those 2 \"variants\" correctly\n    machine.implementations.actions[typeof action === 'string' ? action : action.type];\n    if (!resolvedAction) {\n      continue;\n    }\n    const actionArgs = {\n      context: intermediateSnapshot.context,\n      event,\n      self: actorScope.self,\n      system: actorScope.system\n    };\n    const actionParams = isInline || typeof action === 'string' ? undefined : 'params' in action ? typeof action.params === 'function' ? action.params({\n      context: intermediateSnapshot.context,\n      event\n    }) : action.params : undefined;\n    function executeAction() {\n      actorScope.system._sendInspectionEvent({\n        type: '@xstate.action',\n        actorRef: actorScope.self,\n        action: {\n          type: typeof action === 'string' ? action : typeof action === 'object' ? action.type : action.name || '(anonymous)',\n          params: actionParams\n        }\n      });\n      try {\n        executingCustomAction = resolvedAction;\n        resolvedAction(actionArgs, actionParams);\n      } finally {\n        executingCustomAction = false;\n      }\n    }\n    if (!('resolve' in resolvedAction)) {\n      if (actorScope.self._processingStatus === ProcessingStatus.Running) {\n        executeAction();\n      } else {\n        actorScope.defer(() =\u003e {\n          executeAction();\n        });\n      }\n      continue;\n    }\n    const builtinAction = resolvedAction;\n    const [nextState, params, actions] = builtinAction.resolve(actorScope, intermediateSnapshot, actionArgs, actionParams, resolvedAction,\n    // this holds all params\n    extra);\n    intermediateSnapshot = nextState;\n    if ('retryResolve' in builtinAction) {\n      retries?.push([builtinAction, params]);\n    }\n    if ('execute' in builtinAction) {\n      if (actorScope.self._processingStatus === ProcessingStatus.Running) {\n        builtinAction.execute(actorScope, params);\n      } else {\n        actorScope.defer(builtinAction.execute.bind(null, actorScope, params));\n      }\n    }\n    if (actions) {\n      intermediateSnapshot = resolveAndExecuteActionsWithContext(intermediateSnapshot, event, actorScope, actions, extra, retries);\n    }\n  }\n  return intermediateSnapshot;\n}\nfunction resolveActionsAndContext(currentSnapshot, event, actorScope, actions, internalQueue, deferredActorIds) {\n  const retries = deferredActorIds ? [] : undefined;\n  const nextState = resolveAndExecuteActionsWithContext(currentSnapshot, event, actorScope, actions, {\n    internalQueue,\n    deferredActorIds\n  }, retries);\n  retries?.forEach(([builtinAction, params]) =\u003e {\n    builtinAction.retryResolve(actorScope, nextState, params);\n  });\n  return nextState;\n}\nfunction macrostep(snapshot, event, actorScope, internalQueue = []) {\n  let nextSnapshot = snapshot;\n  const microstates = [];\n  function addMicrostate(microstate, event, transitions) {\n    actorScope.system._sendInspectionEvent({\n      type: '@xstate.microstep',\n      actorRef: actorScope.self,\n      event,\n      snapshot: microstate,\n      _transitions: transitions\n    });\n    microstates.push(microstate);\n  }\n\n  // Handle stop event\n  if (event.type === XSTATE_STOP) {\n    nextSnapshot = cloneMachineSnapshot(stopChildren(nextSnapshot, event, actorScope), {\n      status: 'stopped'\n    });\n    addMicrostate(nextSnapshot, event, []);\n    return {\n      snapshot: nextSnapshot,\n      microstates\n    };\n  }\n  let nextEvent = event;\n\n  // Assume the state is at rest (no raised events)\n  // Determine the next state based on the next microstep\n  if (nextEvent.type !== XSTATE_INIT) {\n    const currentEvent = nextEvent;\n    const isErr = isErrorActorEvent(currentEvent);\n    const transitions = selectTransitions(currentEvent, nextSnapshot);\n    if (isErr \u0026\u0026 !transitions.length) {\n      // TODO: we should likely only allow transitions selected by very explicit descriptors\n      // `*` shouldn't be matched, likely `xstate.error.*` shouldnt be either\n      // similarly `xstate.error.actor.*` and `xstate.error.actor.todo.*` have to be considered too\n      nextSnapshot = cloneMachineSnapshot(snapshot, {\n        status: 'error',\n        error: currentEvent.error\n      });\n      addMicrostate(nextSnapshot, currentEvent, []);\n      return {\n        snapshot: nextSnapshot,\n        microstates\n      };\n    }\n    nextSnapshot = microstep(transitions, snapshot, actorScope, nextEvent, false,\n    // isInitial\n    internalQueue);\n    addMicrostate(nextSnapshot, currentEvent, transitions);\n  }\n  let shouldSelectEventlessTransitions = true;\n  while (nextSnapshot.status === 'active') {\n    let enabledTransitions = shouldSelectEventlessTransitions ? selectEventlessTransitions(nextSnapshot, nextEvent) : [];\n\n    // eventless transitions should always be selected after selecting *regular* transitions\n    // by assigning `undefined` to `previousState` we ensure that `shouldSelectEventlessTransitions` gets always computed to true in such a case\n    const previousState = enabledTransitions.length ? nextSnapshot : undefined;\n    if (!enabledTransitions.length) {\n      if (!internalQueue.length) {\n        break;\n      }\n      nextEvent = internalQueue.shift();\n      enabledTransitions = selectTransitions(nextEvent, nextSnapshot);\n    }\n    nextSnapshot = microstep(enabledTransitions, nextSnapshot, actorScope, nextEvent, false, internalQueue);\n    shouldSelectEventlessTransitions = nextSnapshot !== previousState;\n    addMicrostate(nextSnapshot, nextEvent, enabledTransitions);\n  }\n  if (nextSnapshot.status !== 'active') {\n    stopChildren(nextSnapshot, nextEvent, actorScope);\n  }\n  return {\n    snapshot: nextSnapshot,\n    microstates\n  };\n}\nfunction stopChildren(nextState, event, actorScope) {\n  return resolveActionsAndContext(nextState, event, actorScope, Object.values(nextState.children).map(child =\u003e stopChild(child)), []);\n}\nfunction selectTransitions(event, nextState) {\n  return nextState.machine.getTransitionData(nextState, event);\n}\nfunction selectEventlessTransitions(nextState, event) {\n  const enabledTransitionSet = new Set();\n  const atomicStates = nextState._nodes.filter(isAtomicStateNode);\n  for (const stateNode of atomicStates) {\n    loop: for (const s of [stateNode].concat(getProperAncestors(stateNode, undefined))) {\n      if (!s.always) {\n        continue;\n      }\n      for (const transition of s.always) {\n        if (transition.guard === undefined || evaluateGuard(transition.guard, nextState.context, event, nextState)) {\n          enabledTransitionSet.add(transition);\n          break loop;\n        }\n      }\n    }\n  }\n  return removeConflictingTransitions(Array.from(enabledTransitionSet), new Set(nextState._nodes), nextState.historyValue);\n}\n\n/**\n * Resolves a partial state value with its full representation in the state\n * node's machine.\n *\n * @param stateValue The partial state value to resolve.\n */\nfunction resolveStateValue(rootNode, stateValue) {\n  const allStateNodes = getAllStateNodes(getStateNodes(rootNode, stateValue));\n  return getStateValue(rootNode, [...allStateNodes]);\n}\n\nfunction isMachineSnapshot(value) {\n  return !!value \u0026\u0026 typeof value === 'object' \u0026\u0026 'machine' in value \u0026\u0026 'value' in value;\n}\nconst machineSnapshotMatches = function matches(testValue) {\n  return matchesState(testValue, this.value);\n};\nconst machineSnapshotHasTag = function hasTag(tag) {\n  return this.tags.has(tag);\n};\nconst machineSnapshotCan = function can(event) {\n  const transitionData = this.machine.getTransitionData(this, event);\n  return !!transitionData?.length \u0026\u0026\n  // Check that at least one transition is not forbidden\n  transitionData.some(t =\u003e t.target !== undefined || t.actions.length);\n};\nconst machineSnapshotToJSON = function toJSON() {\n  const {\n    _nodes: nodes,\n    tags,\n    machine,\n    getMeta,\n    toJSON,\n    can,\n    hasTag,\n    matches,\n    ...jsonValues\n  } = this;\n  return {\n    ...jsonValues,\n    tags: Array.from(tags)\n  };\n};\nconst machineSnapshotGetMeta = function getMeta() {\n  return this._nodes.reduce((acc, stateNode) =\u003e {\n    if (stateNode.meta !== undefined) {\n      acc[stateNode.id] = stateNode.meta;\n    }\n    return acc;\n  }, {});\n};\nfunction createMachineSnapshot(config, machine) {\n  return {\n    status: config.status,\n    output: config.output,\n    error: config.error,\n    machine,\n    context: config.context,\n    _nodes: config._nodes,\n    value: getStateValue(machine.root, config._nodes),\n    tags: new Set(config._nodes.flatMap(sn =\u003e sn.tags)),\n    children: config.children,\n    historyValue: config.historyValue || {},\n    matches: machineSnapshotMatches,\n    hasTag: machineSnapshotHasTag,\n    can: machineSnapshotCan,\n    getMeta: machineSnapshotGetMeta,\n    toJSON: machineSnapshotToJSON\n  };\n}\nfunction cloneMachineSnapshot(snapshot, config = {}) {\n  return createMachineSnapshot({\n    ...snapshot,\n    ...config\n  }, snapshot.machine);\n}\nfunction getPersistedSnapshot(snapshot, options) {\n  const {\n    _nodes: nodes,\n    tags,\n    machine,\n    children,\n    context,\n    can,\n    hasTag,\n    matches,\n    getMeta,\n    toJSON,\n    ...jsonValues\n  } = snapshot;\n  const childrenJson = {};\n  for (const id in children) {\n    const child = children[id];\n    childrenJson[id] = {\n      snapshot: child.getPersistedSnapshot(options),\n      src: child.src,\n      systemId: child._systemId,\n      syncSnapshot: child._syncSnapshot\n    };\n  }\n  const persisted = {\n    ...jsonValues,\n    context: persistContext(context),\n    children: childrenJson\n  };\n  return persisted;\n}\nfunction persistContext(contextPart) {\n  let copy;\n  for (const key in contextPart) {\n    const value = contextPart[key];\n    if (value \u0026\u0026 typeof value === 'object') {\n      if ('sessionId' in value \u0026\u0026 'send' in value \u0026\u0026 'ref' in value) {\n        copy ??= Array.isArray(contextPart) ? contextPart.slice() : {\n          ...contextPart\n        };\n        copy[key] = {\n          xstate$$type: $$ACTOR_TYPE,\n          id: value.id\n        };\n      } else {\n        const result = persistContext(value);\n        if (result !== value) {\n          copy ??= Array.isArray(contextPart) ? contextPart.slice() : {\n            ...contextPart\n          };\n          copy[key] = result;\n        }\n      }\n    }\n  }\n  return copy ?? contextPart;\n}\n\nfunction resolveRaise(_, snapshot, args, actionParams, {\n  event: eventOrExpr,\n  id,\n  delay\n}, {\n  internalQueue\n}) {\n  const delaysMap = snapshot.machine.implementations.delays;\n  if (typeof eventOrExpr === 'string') {\n    throw new Error(`Only event objects may be used with raise; use raise({ type: \"${eventOrExpr}\" }) instead`);\n  }\n  const resolvedEvent = typeof eventOrExpr === 'function' ? eventOrExpr(args, actionParams) : eventOrExpr;\n  let resolvedDelay;\n  if (typeof delay === 'string') {\n    const configDelay = delaysMap \u0026\u0026 delaysMap[delay];\n    resolvedDelay = typeof configDelay === 'function' ? configDelay(args, actionParams) : configDelay;\n  } else {\n    resolvedDelay = typeof delay === 'function' ? delay(args, actionParams) : delay;\n  }\n  if (typeof resolvedDelay !== 'number') {\n    internalQueue.push(resolvedEvent);\n  }\n  return [snapshot, {\n    event: resolvedEvent,\n    id,\n    delay: resolvedDelay\n  }];\n}\nfunction executeRaise(actorScope, params) {\n  const {\n    event,\n    delay,\n    id\n  } = params;\n  if (typeof delay === 'number') {\n    actorScope.defer(() =\u003e {\n      const self = actorScope.self;\n      actorScope.system.scheduler.schedule(self, self, event, delay, id);\n    });\n    return;\n  }\n}\n/**\n * Raises an event. This places the event in the internal event queue, so that\n * the event is immediately consumed by the machine in the current step.\n *\n * @param eventType The event to raise.\n */\nfunction raise(eventOrExpr, options) {\n  function raise(args, params) {\n  }\n  raise.type = 'xstate.raise';\n  raise.event = eventOrExpr;\n  raise.id = options?.id;\n  raise.delay = options?.delay;\n  raise.resolve = resolveRaise;\n  raise.execute = executeRaise;\n  return raise;\n}\n\nexports.$$ACTOR_TYPE = $$ACTOR_TYPE;\nexports.Actor = Actor;\nexports.NULL_EVENT = NULL_EVENT;\nexports.ProcessingStatus = ProcessingStatus;\nexports.STATE_DELIMITER = STATE_DELIMITER;\nexports.XSTATE_ERROR = XSTATE_ERROR;\nexports.XSTATE_STOP = XSTATE_STOP;\nexports.and = and;\nexports.cancel = cancel;\nexports.cloneMachineSnapshot = cloneMachineSnapshot;\nexports.createActor = createActor;\nexports.createErrorActorEvent = createErrorActorEvent;\nexports.createInitEvent = createInitEvent;\nexports.createInvokeId = createInvokeId;\nexports.createMachineSnapshot = createMachineSnapshot;\nexports.evaluateGuard = evaluateGuard;\nexports.formatInitialTransition = formatInitialTransition;\nexports.formatTransition = formatTransition;\nexports.formatTransitions = formatTransitions;\nexports.getAllOwnEventDescriptors = getAllOwnEventDescriptors;\nexports.getAllStateNodes = getAllStateNodes;\nexports.getCandidates = getCandidates;\nexports.getDelayedTransitions = getDelayedTransitions;\nexports.getInitialStateNodes = getInitialStateNodes;\nexports.getPersistedSnapshot = getPersistedSnapshot;\nexports.getStateNodeByPath = getStateNodeByPath;\nexports.getStateNodes = getStateNodes;\nexports.interpret = interpret;\nexports.isInFinalState = isInFinalState;\nexports.isMachineSnapshot = isMachineSnapshot;\nexports.isStateId = isStateId;\nexports.macrostep = macrostep;\nexports.mapValues = mapValues;\nexports.matchesState = matchesState;\nexports.microstep = microstep;\nexports.not = not;\nexports.or = or;\nexports.pathToStateValue = pathToStateValue;\nexports.raise = raise;\nexports.resolveActionsAndContext = resolveActionsAndContext;\nexports.resolveReferencedActor = resolveReferencedActor;\nexports.resolveStateValue = resolveStateValue;\nexports.spawnChild = spawnChild;\nexports.stateIn = stateIn;\nexports.stop = stop;\nexports.stopChild = stopChild;\nexports.toArray = toArray;\nexports.toObserver = toObserver;\nexports.toStatePath = toStatePath;\nexports.toTransitionConfigArray = toTransitionConfigArray;\nexports.transitionNode = transitionNode;\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar guards_dist_xstateGuards = require('../../dist/raise-cde45f56.cjs.js');\nrequire('../../dev/dist/xstate-dev.cjs.js');\n\n/**\n * Represents an actor created by `fromTransition`.\n *\n * The type of `self` within the actor's logic.\n *\n * @example\n *\n * ```ts\n * import {\n *   fromTransition,\n *   createActor,\n *   type AnyActorSystem\n * } from 'xstate';\n *\n * //* The actor's stored context.\n * type Context = {\n *   // The current count.\n *   count: number;\n *   // The amount to increase `count` by.\n *   step: number;\n * };\n * // The events the actor receives.\n * type Event = { type: 'increment' };\n * // The actor's input.\n * type Input = { step?: number };\n *\n * // Actor logic that increments `count` by `step` when it receives an event of\n * // type `increment`.\n * const logic = fromTransition\u003cContext, Event, AnyActorSystem, Input\u003e(\n *   (state, event, actorScope) =\u003e {\n *     actorScope.self;\n *     //         ^? TransitionActorRef\u003cContext, Event\u003e\n *\n *     if (event.type === 'increment') {\n *       return {\n *         ...state,\n *         count: state.count + state.step\n *       };\n *     }\n *     return state;\n *   },\n *   ({ input, self }) =\u003e {\n *     self;\n *     // ^? TransitionActorRef\u003cContext, Event\u003e\n *\n *     return {\n *       count: 0,\n *       step: input.step ?? 1\n *     };\n *   }\n * );\n *\n * const actor = createActor(logic, { input: { step: 10 } });\n * //    ^? TransitionActorRef\u003cContext, Event\u003e\n * ```\n *\n * @see {@link fromTransition}\n */\n\n/**\n * Returns actor logic given a transition function and its initial state.\n *\n * A “transition function” is a function that takes the current `state` and\n * received `event` object as arguments, and returns the next state, similar to\n * a reducer.\n *\n * Actors created from transition logic (“transition actors”) can:\n *\n * - Receive events\n * - Emit snapshots of its state\n *\n * The transition function’s `state` is used as its transition actor’s\n * `context`.\n *\n * Note that the \"state\" for a transition function is provided by the initial\n * state argument, and is not the same as the State object of an actor or a\n * state within a machine configuration.\n *\n * @example\n *\n * ```ts\n * const transitionLogic = fromTransition(\n *   (state, event) =\u003e {\n *     if (event.type === 'increment') {\n *       return {\n *         ...state,\n *         count: state.count + 1\n *       };\n *     }\n *     return state;\n *   },\n *   { count: 0 }\n * );\n *\n * const transitionActor = createActor(transitionLogic);\n * transitionActor.subscribe((snapshot) =\u003e {\n *   console.log(snapshot);\n * });\n * transitionActor.start();\n * // =\u003e {\n * //   status: 'active',\n * //   context: { count: 0 },\n * //   ...\n * // }\n *\n * transitionActor.send({ type: 'increment' });\n * // =\u003e {\n * //   status: 'active',\n * //   context: { count: 1 },\n * //   ...\n * // }\n * ```\n *\n * @param transition The transition function used to describe the transition\n *   logic. It should return the next state given the current state and event.\n *   It receives the following arguments:\n *\n *   - `state` - the current state.\n *   - `event` - the received event.\n *   - `actorScope` - the actor scope object, with properties like `self` and\n *       `system`.\n *\n * @param initialContext The initial state of the transition function, either an\n *   object representing the state, or a function which returns a state object.\n *   If a function, it will receive as its only argument an object with the\n *   following properties:\n *\n *   - `input` - the `input` provided to its parent transition actor.\n *   - `self` - a reference to its parent transition actor.\n *\n * @returns Actor logic\n * @see {@link https://stately.ai/docs/input | Input docs} for more information about how input is passed\n */\nfunction fromTransition(transition, initialContext) {\n  return {\n    config: transition,\n    transition: (snapshot, event, actorScope) =\u003e {\n      return {\n        ...snapshot,\n        context: transition(snapshot.context, event, actorScope)\n      };\n    },\n    getInitialSnapshot: (_, input) =\u003e {\n      return {\n        status: 'active',\n        output: undefined,\n        error: undefined,\n        context: typeof initialContext === 'function' ? initialContext({\n          input\n        }) : initialContext\n      };\n    },\n    getPersistedSnapshot: snapshot =\u003e snapshot,\n    restoreSnapshot: snapshot =\u003e snapshot\n  };\n}\n\nconst instanceStates = /* #__PURE__ */new WeakMap();\n\n/**\n * Represents an actor created by `fromCallback`.\n *\n * The type of `self` within the actor's logic.\n *\n * @example\n *\n * ```ts\n * import { fromCallback, createActor } from 'xstate';\n *\n * // The events the actor receives.\n * type Event = { type: 'someEvent' };\n * // The actor's input.\n * type Input = { name: string };\n *\n * // Actor logic that logs whenever it receives an event of type `someEvent`.\n * const logic = fromCallback\u003cEvent, Input\u003e(({ self, input, receive }) =\u003e {\n *   self;\n *   // ^? CallbackActorRef\u003cEvent, Input\u003e\n *\n *   receive((event) =\u003e {\n *     if (event.type === 'someEvent') {\n *       console.log(`${input.name}: received \"someEvent\" event`);\n *       // logs 'myActor: received \"someEvent\" event'\n *     }\n *   });\n * });\n *\n * const actor = createActor(logic, { input: { name: 'myActor' } });\n * //    ^? CallbackActorRef\u003cEvent, Input\u003e\n * ```\n *\n * @see {@link fromCallback}\n */\n\n/**\n * An actor logic creator which returns callback logic as defined by a callback\n * function.\n *\n * @remarks\n * Useful for subscription-based or other free-form logic that can send events\n * back to the parent actor.\n *\n * Actors created from callback logic (“callback actors”) can:\n *\n * - Receive events via the `receive` function\n * - Send events to the parent actor via the `sendBack` function\n *\n * Callback actors are a bit different from other actors in that they:\n *\n * - Do not work with `onDone`\n * - Do not produce a snapshot using `.getSnapshot()`\n * - Do not emit values when used with `.subscribe()`\n * - Can not be stopped with `.stop()`\n *\n * @example\n *\n * ```typescript\n * const callbackLogic = fromCallback(({ sendBack, receive }) =\u003e {\n *   let lockStatus = 'unlocked';\n *\n *   const handler = (event) =\u003e {\n *     if (lockStatus === 'locked') {\n *       return;\n *     }\n *     sendBack(event);\n *   };\n *\n *   receive((event) =\u003e {\n *     if (event.type === 'lock') {\n *       lockStatus = 'locked';\n *     } else if (event.type === 'unlock') {\n *       lockStatus = 'unlocked';\n *     }\n *   });\n *\n *   document.body.addEventListener('click', handler);\n *\n *   return () =\u003e {\n *     document.body.removeEventListener('click', handler);\n *   };\n * });\n * ```\n *\n * @param callback - The callback function used to describe the callback logic\n *   The callback function is passed an object with the following properties:\n *\n *   - `receive` - A function that can send events back to the parent actor; the\n *       listener is then called whenever events are received by the callback\n *       actor\n *   - `sendBack` - A function that can send events back to the parent actor\n *   - `input` - Data that was provided to the callback actor\n *   - `self` - The parent actor of the callback actor\n *   - `system` - The actor system to which the callback actor belongs The callback\n *       function can (optionally) return a cleanup function, which is called\n *       when the actor is stopped.\n *\n * @returns Callback logic\n * @see {@link CallbackLogicFunction} for more information about the callback function and its object argument\n * @see {@link https://stately.ai/docs/input | Input docs} for more information about how input is passed\n */\nfunction fromCallback(callback) {\n  const logic = {\n    config: callback,\n    start: (state, actorScope) =\u003e {\n      const {\n        self,\n        system,\n        emit\n      } = actorScope;\n      const callbackState = {\n        receivers: undefined,\n        dispose: undefined\n      };\n      instanceStates.set(self, callbackState);\n      callbackState.dispose = callback({\n        input: state.input,\n        system,\n        self,\n        sendBack: event =\u003e {\n          if (self.getSnapshot().status === 'stopped') {\n            return;\n          }\n          if (self._parent) {\n            system._relay(self, self._parent, event);\n          }\n        },\n        receive: listener =\u003e {\n          callbackState.receivers ??= new Set();\n          callbackState.receivers.add(listener);\n        },\n        emit\n      });\n    },\n    transition: (state, event, actorScope) =\u003e {\n      const callbackState = instanceStates.get(actorScope.self);\n      if (event.type === guards_dist_xstateGuards.XSTATE_STOP) {\n        state = {\n          ...state,\n          status: 'stopped',\n          error: undefined\n        };\n        callbackState.dispose?.();\n        return state;\n      }\n      callbackState.receivers?.forEach(receiver =\u003e receiver(event));\n      return state;\n    },\n    getInitialSnapshot: (_, input) =\u003e {\n      return {\n        status: 'active',\n        output: undefined,\n        error: undefined,\n        input\n      };\n    },\n    getPersistedSnapshot: snapshot =\u003e snapshot,\n    restoreSnapshot: snapshot =\u003e snapshot\n  };\n  return logic;\n}\n\nconst XSTATE_OBSERVABLE_NEXT = 'xstate.observable.next';\nconst XSTATE_OBSERVABLE_ERROR = 'xstate.observable.error';\nconst XSTATE_OBSERVABLE_COMPLETE = 'xstate.observable.complete';\n\n/**\n * Represents an actor created by `fromObservable` or `fromEventObservable`.\n *\n * The type of `self` within the actor's logic.\n *\n * @example\n *\n * ```ts\n * import { fromObservable, createActor } from 'xstate';\n * import { interval } from 'rxjs';\n *\n * // The type of the value observed by the actor's logic.\n * type Context = number;\n * // The actor's input.\n * type Input = { period?: number };\n *\n * // Actor logic that observes a number incremented every `input.period`\n * // milliseconds (default: 1_000).\n * const logic = fromObservable\u003cContext, Input\u003e(({ input, self }) =\u003e {\n *   self;\n *   // ^? ObservableActorRef\u003cEvent, Input\u003e\n *\n *   return interval(input.period ?? 1_000);\n * });\n *\n * const actor = createActor(logic, { input: { period: 2_000 } });\n * //    ^? ObservableActorRef\u003cEvent, Input\u003e\n * ```\n *\n * @see {@link fromObservable}\n * @see {@link fromEventObservable}\n */\n\n/**\n * Observable actor logic is described by an observable stream of values. Actors\n * created from observable logic (“observable actors”) can:\n *\n * - Emit snapshots of the observable’s emitted value\n *\n * The observable’s emitted value is used as its observable actor’s `context`.\n *\n * Sending events to observable actors will have no effect.\n *\n * @example\n *\n * ```ts\n * import { fromObservable, createActor } from 'xstate';\n * import { interval } from 'rxjs';\n *\n * const logic = fromObservable((obj) =\u003e interval(1000));\n *\n * const actor = createActor(logic);\n *\n * actor.subscribe((snapshot) =\u003e {\n *   console.log(snapshot.context);\n * });\n *\n * actor.start();\n * // At every second:\n * // Logs 0\n * // Logs 1\n * // Logs 2\n * // ...\n * ```\n *\n * @param observableCreator A function that creates an observable. It receives\n *   one argument, an object with the following properties:\n *\n *   - `input` - Data that was provided to the observable actor\n *   - `self` - The parent actor\n *   - `system` - The actor system to which the observable actor belongs\n *\n *   It should return a {@link Subscribable}, which is compatible with an RxJS\n *   Observable, although RxJS is not required to create them.\n * @see {@link https://rxjs.dev} for documentation on RxJS Observable and observable creators.\n * @see {@link Subscribable} interface in XState, which is based on and compatible with RxJS Observable.\n */\nfunction fromObservable(observableCreator) {\n  // TODO: add event types\n  const logic = {\n    config: observableCreator,\n    transition: (snapshot, event) =\u003e {\n      if (snapshot.status !== 'active') {\n        return snapshot;\n      }\n      switch (event.type) {\n        case XSTATE_OBSERVABLE_NEXT:\n          {\n            const newSnapshot = {\n              ...snapshot,\n              context: event.data\n            };\n            return newSnapshot;\n          }\n        case XSTATE_OBSERVABLE_ERROR:\n          return {\n            ...snapshot,\n            status: 'error',\n            error: event.data,\n            input: undefined,\n            _subscription: undefined\n          };\n        case XSTATE_OBSERVABLE_COMPLETE:\n          return {\n            ...snapshot,\n            status: 'done',\n            input: undefined,\n            _subscription: undefined\n          };\n        case guards_dist_xstateGuards.XSTATE_STOP:\n          snapshot._subscription.unsubscribe();\n          return {\n            ...snapshot,\n            status: 'stopped',\n            input: undefined,\n            _subscription: undefined\n          };\n        default:\n          return snapshot;\n      }\n    },\n    getInitialSnapshot: (_, input) =\u003e {\n      return {\n        status: 'active',\n        output: undefined,\n        error: undefined,\n        context: undefined,\n        input,\n        _subscription: undefined\n      };\n    },\n    start: (state, {\n      self,\n      system,\n      emit\n    }) =\u003e {\n      if (state.status === 'done') {\n        // Do not restart a completed observable\n        return;\n      }\n      state._subscription = observableCreator({\n        input: state.input,\n        system,\n        self,\n        emit\n      }).subscribe({\n        next: value =\u003e {\n          system._relay(self, self, {\n            type: XSTATE_OBSERVABLE_NEXT,\n            data: value\n          });\n        },\n        error: err =\u003e {\n          system._relay(self, self, {\n            type: XSTATE_OBSERVABLE_ERROR,\n            data: err\n          });\n        },\n        complete: () =\u003e {\n          system._relay(self, self, {\n            type: XSTATE_OBSERVABLE_COMPLETE\n          });\n        }\n      });\n    },\n    getPersistedSnapshot: ({\n      _subscription,\n      ...state\n    }) =\u003e state,\n    restoreSnapshot: state =\u003e ({\n      ...state,\n      _subscription: undefined\n    })\n  };\n  return logic;\n}\n\n/**\n * Creates event observable logic that listens to an observable that delivers\n * event objects.\n *\n * Event observable actor logic is described by an observable stream of\n * {@link https://stately.ai/docs/transitions#event-objects | event objects}.\n * Actors created from event observable logic (“event observable actors”) can:\n *\n * - Implicitly send events to its parent actor\n * - Emit snapshots of its emitted event objects\n *\n * Sending events to event observable actors will have no effect.\n *\n * @example\n *\n * ```ts\n * import {\n *   fromEventObservable,\n *   Subscribable,\n *   EventObject,\n *   createMachine,\n *   createActor\n * } from 'xstate';\n * import { fromEvent } from 'rxjs';\n *\n * const mouseClickLogic = fromEventObservable(\n *   () =\u003e fromEvent(document.body, 'click') as Subscribable\u003cEventObject\u003e\n * );\n *\n * const canvasMachine = createMachine({\n *   invoke: {\n *     // Will send mouse `click` events to the canvas actor\n *     src: mouseClickLogic\n *   }\n * });\n *\n * const canvasActor = createActor(canvasMachine);\n * canvasActor.start();\n * ```\n *\n * @param lazyObservable A function that creates an observable that delivers\n *   event objects. It receives one argument, an object with the following\n *   properties:\n *\n *   - `input` - Data that was provided to the event observable actor\n *   - `self` - The parent actor\n *   - `system` - The actor system to which the event observable actor belongs.\n *\n *   It should return a {@link Subscribable}, which is compatible with an RxJS\n *   Observable, although RxJS is not required to create them.\n */\nfunction fromEventObservable(lazyObservable) {\n  // TODO: event types\n  const logic = {\n    config: lazyObservable,\n    transition: (state, event) =\u003e {\n      if (state.status !== 'active') {\n        return state;\n      }\n      switch (event.type) {\n        case XSTATE_OBSERVABLE_ERROR:\n          return {\n            ...state,\n            status: 'error',\n            error: event.data,\n            input: undefined,\n            _subscription: undefined\n          };\n        case XSTATE_OBSERVABLE_COMPLETE:\n          return {\n            ...state,\n            status: 'done',\n            input: undefined,\n            _subscription: undefined\n          };\n        case guards_dist_xstateGuards.XSTATE_STOP:\n          state._subscription.unsubscribe();\n          return {\n            ...state,\n            status: 'stopped',\n            input: undefined,\n            _subscription: undefined\n          };\n        default:\n          return state;\n      }\n    },\n    getInitialSnapshot: (_, input) =\u003e {\n      return {\n        status: 'active',\n        output: undefined,\n        error: undefined,\n        context: undefined,\n        input,\n        _subscription: undefined\n      };\n    },\n    start: (state, {\n      self,\n      system,\n      emit\n    }) =\u003e {\n      if (state.status === 'done') {\n        // Do not restart a completed observable\n        return;\n      }\n      state._subscription = lazyObservable({\n        input: state.input,\n        system,\n        self,\n        emit\n      }).subscribe({\n        next: value =\u003e {\n          if (self._parent) {\n            system._relay(self, self._parent, value);\n          }\n        },\n        error: err =\u003e {\n          system._relay(self, self, {\n            type: XSTATE_OBSERVABLE_ERROR,\n            data: err\n          });\n        },\n        complete: () =\u003e {\n          system._relay(self, self, {\n            type: XSTATE_OBSERVABLE_COMPLETE\n          });\n        }\n      });\n    },\n    getPersistedSnapshot: ({\n      _subscription,\n      ...snapshot\n    }) =\u003e snapshot,\n    restoreSnapshot: snapshot =\u003e ({\n      ...snapshot,\n      _subscription: undefined\n    })\n  };\n  return logic;\n}\n\nconst XSTATE_PROMISE_RESOLVE = 'xstate.promise.resolve';\nconst XSTATE_PROMISE_REJECT = 'xstate.promise.reject';\n\n/**\n * Represents an actor created by `fromPromise`.\n *\n * The type of `self` within the actor's logic.\n *\n * @example\n *\n * ```ts\n * import { fromPromise, createActor } from 'xstate';\n *\n * // The actor's resolved output\n * type Output = string;\n * // The actor's input.\n * type Input = { message: string };\n *\n * // Actor logic that fetches the url of an image of a cat saying `input.message`.\n * const logic = fromPromise\u003cOutput, Input\u003e(async ({ input, self }) =\u003e {\n *   self;\n *   // ^? PromiseActorRef\u003cOutput, Input\u003e\n *\n *   const data = await fetch(\n *     `https://cataas.com/cat/says/${input.message}`\n *   );\n *   const url = await data.json();\n *   return url;\n * });\n *\n * const actor = createActor(logic, { input: { message: 'hello world' } });\n * //    ^? PromiseActorRef\u003cOutput, Input\u003e\n * ```\n *\n * @see {@link fromPromise}\n */\n\nconst controllerMap = new WeakMap();\n\n/**\n * An actor logic creator which returns promise logic as defined by an async\n * process that resolves or rejects after some time.\n *\n * Actors created from promise actor logic (“promise actors”) can:\n *\n * - Emit the resolved value of the promise\n * - Output the resolved value of the promise\n *\n * Sending events to promise actors will have no effect.\n *\n * @example\n *\n * ```ts\n * const promiseLogic = fromPromise(async () =\u003e {\n *   const result = await fetch('https://example.com/...').then((data) =\u003e\n *     data.json()\n *   );\n *\n *   return result;\n * });\n *\n * const promiseActor = createActor(promiseLogic);\n * promiseActor.subscribe((snapshot) =\u003e {\n *   console.log(snapshot);\n * });\n * promiseActor.start();\n * // =\u003e {\n * //   output: undefined,\n * //   status: 'active'\n * //   ...\n * // }\n *\n * // After promise resolves\n * // =\u003e {\n * //   output: { ... },\n * //   status: 'done',\n * //   ...\n * // }\n * ```\n *\n * @param promiseCreator A function which returns a Promise, and accepts an\n *   object with the following properties:\n *\n *   - `input` - Data that was provided to the promise actor\n *   - `self` - The parent actor of the promise actor\n *   - `system` - The actor system to which the promise actor belongs\n *\n * @see {@link https://stately.ai/docs/input | Input docs} for more information about how input is passed\n */\nfunction fromPromise(promiseCreator) {\n  const logic = {\n    config: promiseCreator,\n    transition: (state, event, scope) =\u003e {\n      if (state.status !== 'active') {\n        return state;\n      }\n      switch (event.type) {\n        case XSTATE_PROMISE_RESOLVE:\n          {\n            const resolvedValue = event.data;\n            return {\n              ...state,\n              status: 'done',\n              output: resolvedValue,\n              input: undefined\n            };\n          }\n        case XSTATE_PROMISE_REJECT:\n          return {\n            ...state,\n            status: 'error',\n            error: event.data,\n            input: undefined\n          };\n        case guards_dist_xstateGuards.XSTATE_STOP:\n          {\n            controllerMap.get(scope.self)?.abort();\n            return {\n              ...state,\n              status: 'stopped',\n              input: undefined\n            };\n          }\n        default:\n          return state;\n      }\n    },\n    start: (state, {\n      self,\n      system,\n      emit\n    }) =\u003e {\n      // TODO: determine how to allow customizing this so that promises\n      // can be restarted if necessary\n      if (state.status !== 'active') {\n        return;\n      }\n      const controller = new AbortController();\n      controllerMap.set(self, controller);\n      const resolvedPromise = Promise.resolve(promiseCreator({\n        input: state.input,\n        system,\n        self,\n        signal: controller.signal,\n        emit\n      }));\n      resolvedPromise.then(response =\u003e {\n        if (self.getSnapshot().status !== 'active') {\n          return;\n        }\n        controllerMap.delete(self);\n        system._relay(self, self, {\n          type: XSTATE_PROMISE_RESOLVE,\n          data: response\n        });\n      }, errorData =\u003e {\n        if (self.getSnapshot().status !== 'active') {\n          return;\n        }\n        controllerMap.delete(self);\n        system._relay(self, self, {\n          type: XSTATE_PROMISE_REJECT,\n          data: errorData\n        });\n      });\n    },\n    getInitialSnapshot: (_, input) =\u003e {\n      return {\n        status: 'active',\n        output: undefined,\n        error: undefined,\n        input\n      };\n    },\n    getPersistedSnapshot: snapshot =\u003e snapshot,\n    restoreSnapshot: snapshot =\u003e snapshot\n  };\n  return logic;\n}\n\nconst emptyLogic = fromTransition(_ =\u003e undefined, undefined);\nfunction createEmptyActor() {\n  return guards_dist_xstateGuards.createActor(emptyLogic);\n}\n\nexports.createEmptyActor = createEmptyActor;\nexports.fromCallback = fromCallback;\nexports.fromEventObservable = fromEventObservable;\nexports.fromObservable = fromObservable;\nexports.fromPromise = fromPromise;\nexports.fromTransition = fromTransition;\n","'use strict';\n\nvar guards_dist_xstateGuards = require('./raise-cde45f56.cjs.js');\n\nfunction createSpawner(actorScope, {\n  machine,\n  context\n}, event, spawnedChildren) {\n  const spawn = (src, options = {}) =\u003e {\n    const {\n      systemId,\n      input\n    } = options;\n    if (typeof src === 'string') {\n      const logic = guards_dist_xstateGuards.resolveReferencedActor(machine, src);\n      if (!logic) {\n        throw new Error(`Actor logic '${src}' not implemented in machine '${machine.id}'`);\n      }\n      const actorRef = guards_dist_xstateGuards.createActor(logic, {\n        id: options.id,\n        parent: actorScope.self,\n        syncSnapshot: options.syncSnapshot,\n        input: typeof input === 'function' ? input({\n          context,\n          event,\n          self: actorScope.self\n        }) : input,\n        src,\n        systemId\n      });\n      spawnedChildren[actorRef.id] = actorRef;\n      return actorRef;\n    } else {\n      const actorRef = guards_dist_xstateGuards.createActor(src, {\n        id: options.id,\n        parent: actorScope.self,\n        syncSnapshot: options.syncSnapshot,\n        input: options.input,\n        src,\n        systemId\n      });\n      return actorRef;\n    }\n  };\n  return (src, options) =\u003e {\n    const actorRef = spawn(src, options); // TODO: fix types\n    spawnedChildren[actorRef.id] = actorRef;\n    actorScope.defer(() =\u003e {\n      if (actorRef._processingStatus === guards_dist_xstateGuards.ProcessingStatus.Stopped) {\n        return;\n      }\n      actorRef.start();\n    });\n    return actorRef;\n  };\n}\n\nfunction resolveAssign(actorScope, snapshot, actionArgs, actionParams, {\n  assignment\n}) {\n  if (!snapshot.context) {\n    throw new Error('Cannot assign to undefined `context`. Ensure that `context` is defined in the machine config.');\n  }\n  const spawnedChildren = {};\n  const assignArgs = {\n    context: snapshot.context,\n    event: actionArgs.event,\n    spawn: createSpawner(actorScope, snapshot, actionArgs.event, spawnedChildren),\n    self: actorScope.self,\n    system: actorScope.system\n  };\n  let partialUpdate = {};\n  if (typeof assignment === 'function') {\n    partialUpdate = assignment(assignArgs, actionParams);\n  } else {\n    for (const key of Object.keys(assignment)) {\n      const propAssignment = assignment[key];\n      partialUpdate[key] = typeof propAssignment === 'function' ? propAssignment(assignArgs, actionParams) : propAssignment;\n    }\n  }\n  const updatedContext = Object.assign({}, snapshot.context, partialUpdate);\n  return [guards_dist_xstateGuards.cloneMachineSnapshot(snapshot, {\n    context: updatedContext,\n    children: Object.keys(spawnedChildren).length ? {\n      ...snapshot.children,\n      ...spawnedChildren\n    } : snapshot.children\n  })];\n}\n/**\n * Updates the current context of the machine.\n *\n * @example\n *\n * ```ts\n * import { createMachine, assign } from 'xstate';\n *\n * const countMachine = createMachine({\n *   context: {\n *     count: 0,\n *     message: ''\n *   },\n *   on: {\n *     inc: {\n *       actions: assign({\n *         count: ({ context }) =\u003e context.count + 1\n *       })\n *     },\n *     updateMessage: {\n *       actions: assign(({ context, event }) =\u003e {\n *         return {\n *           message: event.message.trim()\n *         };\n *       })\n *     }\n *   }\n * });\n * ```\n *\n * @param assignment An object that represents the partial context to update, or\n *   a function that returns an object that represents the partial context to\n *   update.\n */\nfunction assign(assignment) {\n  function assign(args, params) {\n  }\n  assign.type = 'xstate.assign';\n  assign.assignment = assignment;\n  assign.resolve = resolveAssign;\n  return assign;\n}\n\nfunction resolveEmit(_, snapshot, args, actionParams, {\n  event: eventOrExpr\n}) {\n  const resolvedEvent = typeof eventOrExpr === 'function' ? eventOrExpr(args, actionParams) : eventOrExpr;\n  return [snapshot, {\n    event: resolvedEvent\n  }];\n}\nfunction executeEmit(actorScope, {\n  event\n}) {\n  actorScope.defer(() =\u003e actorScope.emit(event));\n}\n/**\n * Emits an event to event handlers registered on the actor via `actor.on(event,\n * handler)`.\n *\n * @example\n *\n * ```ts\n * import { emit } from 'xstate';\n *\n * const machine = createMachine({\n *   // ...\n *   on: {\n *     something: {\n *       actions: emit({\n *         type: 'emitted',\n *         some: 'data'\n *       })\n *     }\n *   }\n *   // ...\n * });\n *\n * const actor = createActor(machine).start();\n *\n * actor.on('emitted', (event) =\u003e {\n *   console.log(event);\n * });\n *\n * actor.send({ type: 'something' });\n * // logs:\n * // {\n * //   type: 'emitted',\n * //   some: 'data'\n * // }\n * ```\n */\nfunction emit( /** The event to emit, or an expression that returns an event to emit. */\neventOrExpr) {\n  function emit(args, params) {\n  }\n  emit.type = 'xstate.emit';\n  emit.event = eventOrExpr;\n  emit.resolve = resolveEmit;\n  emit.execute = executeEmit;\n  return emit;\n}\n\n/**\n * @remarks\n * `T | unknown` reduces to `unknown` and that can be problematic when it comes\n * to contextual typing. It especially is a problem when the union has a\n * function member, like here:\n *\n * ```ts\n * declare function test(\n *   cbOrVal: ((arg: number) =\u003e unknown) | unknown\n * ): void;\n * test((arg) =\u003e {}); // oops, implicit any\n * ```\n *\n * This type can be used to avoid this problem. This union represents the same\n * value space as `unknown`.\n */\n\n// https://github.com/microsoft/TypeScript/issues/23182#issuecomment-379091887\n\n// @TODO: Replace with native `NoInfer` when TS issue gets fixed:\n// https://github.com/microsoft/TypeScript/pull/57673\n/** @deprecated Use the built-in `NoInfer` type instead */\n/** The full definition of an event, with a string `type`. */\n/**\n * The string or object representing the state value relative to the parent\n * state node.\n *\n * @remarks\n * - For a child atomic state node, this is a string, e.g., `\"pending\"`.\n * - For complex state nodes, this is an object, e.g., `{ success:\n *   \"someChildState\" }`.\n */\n// TODO: remove once TS fixes this type-widening issue\n/** @deprecated Use `AnyMachineSnapshot` instead */\n// TODO: possibly refactor this somehow, use even a simpler type, and maybe even make `machine.options` private or something\n/** @ignore */\nlet SpecialTargets = /*#__PURE__*/function (SpecialTargets) {\n  SpecialTargets[\"Parent\"] = \"#_parent\";\n  SpecialTargets[\"Internal\"] = \"#_internal\";\n  return SpecialTargets;\n}({});\n\n/** @deprecated Use `AnyActor` instead. */\n\n// Based on RxJS types\n\n// TODO: in v6, this should only accept AnyActorLogic, like ActorRefFromLogic\n\n/** @deprecated Use `Actor\u003cT\u003e` instead. */\n\n/**\n * Represents logic which can be used by an actor.\n *\n * @template TSnapshot - The type of the snapshot.\n * @template TEvent - The type of the event object.\n * @template TInput - The type of the input.\n * @template TSystem - The type of the actor system.\n */\n\n/** @deprecated */\n\nfunction resolveSendTo(actorScope, snapshot, args, actionParams, {\n  to,\n  event: eventOrExpr,\n  id,\n  delay\n}, extra) {\n  const delaysMap = snapshot.machine.implementations.delays;\n  if (typeof eventOrExpr === 'string') {\n    throw new Error(`Only event objects may be used with sendTo; use sendTo({ type: \"${eventOrExpr}\" }) instead`);\n  }\n  const resolvedEvent = typeof eventOrExpr === 'function' ? eventOrExpr(args, actionParams) : eventOrExpr;\n  let resolvedDelay;\n  if (typeof delay === 'string') {\n    const configDelay = delaysMap \u0026\u0026 delaysMap[delay];\n    resolvedDelay = typeof configDelay === 'function' ? configDelay(args, actionParams) : configDelay;\n  } else {\n    resolvedDelay = typeof delay === 'function' ? delay(args, actionParams) : delay;\n  }\n  const resolvedTarget = typeof to === 'function' ? to(args, actionParams) : to;\n  let targetActorRef;\n  if (typeof resolvedTarget === 'string') {\n    if (resolvedTarget === SpecialTargets.Parent) {\n      targetActorRef = actorScope.self._parent;\n    } else if (resolvedTarget === SpecialTargets.Internal) {\n      targetActorRef = actorScope.self;\n    } else if (resolvedTarget.startsWith('#_')) {\n      // SCXML compatibility: https://www.w3.org/TR/scxml/#SCXMLEventProcessor\n      // #_invokeid. If the target is the special term '#_invokeid', where invokeid is the invokeid of an SCXML session that the sending session has created by \u003cinvoke\u003e, the Processor must add the event to the external queue of that session.\n      targetActorRef = snapshot.children[resolvedTarget.slice(2)];\n    } else {\n      targetActorRef = extra.deferredActorIds?.includes(resolvedTarget) ? resolvedTarget : snapshot.children[resolvedTarget];\n    }\n    if (!targetActorRef) {\n      throw new Error(`Unable to send event to actor '${resolvedTarget}' from machine '${snapshot.machine.id}'.`);\n    }\n  } else {\n    targetActorRef = resolvedTarget || actorScope.self;\n  }\n  return [snapshot, {\n    to: targetActorRef,\n    event: resolvedEvent,\n    id,\n    delay: resolvedDelay\n  }];\n}\nfunction retryResolveSendTo(_, snapshot, params) {\n  if (typeof params.to === 'string') {\n    params.to = snapshot.children[params.to];\n  }\n}\nfunction executeSendTo(actorScope, params) {\n  // this forms an outgoing events queue\n  // thanks to that the recipient actors are able to read the *updated* snapshot value of the sender\n  actorScope.defer(() =\u003e {\n    const {\n      to,\n      event,\n      delay,\n      id\n    } = params;\n    if (typeof delay === 'number') {\n      actorScope.system.scheduler.schedule(actorScope.self, to, event, delay, id);\n      return;\n    }\n    actorScope.system._relay(actorScope.self,\n    // at this point, in a deferred task, it should already be mutated by retryResolveSendTo\n    // if it initially started as a string\n    to, event.type === guards_dist_xstateGuards.XSTATE_ERROR ? guards_dist_xstateGuards.createErrorActorEvent(actorScope.self.id, event.data) : event);\n  });\n}\n/**\n * Sends an event to an actor.\n *\n * @param actor The `ActorRef` to send the event to.\n * @param event The event to send, or an expression that evaluates to the event\n *   to send\n * @param options Send action options\n *\n *   - `id` - The unique send event identifier (used with `cancel()`).\n *   - `delay` - The number of milliseconds to delay the sending of the event.\n */\nfunction sendTo(to, eventOrExpr, options) {\n  function sendTo(args, params) {\n  }\n  sendTo.type = 'xsnapshot.sendTo';\n  sendTo.to = to;\n  sendTo.event = eventOrExpr;\n  sendTo.id = options?.id;\n  sendTo.delay = options?.delay;\n  sendTo.resolve = resolveSendTo;\n  sendTo.retryResolve = retryResolveSendTo;\n  sendTo.execute = executeSendTo;\n  return sendTo;\n}\n\n/**\n * Sends an event to this machine's parent.\n *\n * @param event The event to send to the parent machine.\n * @param options Options to pass into the send event.\n */\nfunction sendParent(event, options) {\n  return sendTo(SpecialTargets.Parent, event, options);\n}\n/**\n * Forwards (sends) an event to the `target` actor.\n *\n * @param target The target actor to forward the event to.\n * @param options Options to pass into the send action creator.\n */\nfunction forwardTo(target, options) {\n  return sendTo(target, ({\n    event\n  }) =\u003e event, options);\n}\n\nfunction resolveEnqueueActions(actorScope, snapshot, args, actionParams, {\n  collect\n}) {\n  const actions = [];\n  const enqueue = function enqueue(action) {\n    actions.push(action);\n  };\n  enqueue.assign = (...args) =\u003e {\n    actions.push(assign(...args));\n  };\n  enqueue.cancel = (...args) =\u003e {\n    actions.push(guards_dist_xstateGuards.cancel(...args));\n  };\n  enqueue.raise = (...args) =\u003e {\n    // for some reason it fails to infer `TDelay` from `...args` here and picks its default (`never`)\n    // then it fails to typecheck that because `...args` use `string` in place of `TDelay`\n    actions.push(guards_dist_xstateGuards.raise(...args));\n  };\n  enqueue.sendTo = (...args) =\u003e {\n    // for some reason it fails to infer `TDelay` from `...args` here and picks its default (`never`)\n    // then it fails to typecheck that because `...args` use `string` in place of `TDelay\n    actions.push(sendTo(...args));\n  };\n  enqueue.sendParent = (...args) =\u003e {\n    actions.push(sendParent(...args));\n  };\n  enqueue.spawnChild = (...args) =\u003e {\n    actions.push(guards_dist_xstateGuards.spawnChild(...args));\n  };\n  enqueue.stopChild = (...args) =\u003e {\n    actions.push(guards_dist_xstateGuards.stopChild(...args));\n  };\n  enqueue.emit = (...args) =\u003e {\n    actions.push(emit(...args));\n  };\n  collect({\n    context: args.context,\n    event: args.event,\n    enqueue,\n    check: guard =\u003e guards_dist_xstateGuards.evaluateGuard(guard, snapshot.context, args.event, snapshot),\n    self: actorScope.self,\n    system: actorScope.system\n  }, actionParams);\n  return [snapshot, undefined, actions];\n}\n/**\n * Creates an action object that will execute actions that are queued by the\n * `enqueue(action)` function.\n *\n * @example\n *\n * ```ts\n * import { createMachine, enqueueActions } from 'xstate';\n *\n * const machine = createMachine({\n *   entry: enqueueActions(({ enqueue, check }) =\u003e {\n *     enqueue.assign({ count: 0 });\n *\n *     if (check('someGuard')) {\n *       enqueue.assign({ count: 1 });\n *     }\n *\n *     enqueue('someAction');\n *   })\n * });\n * ```\n */\nfunction enqueueActions(collect) {\n  function enqueueActions(args, params) {\n  }\n  enqueueActions.type = 'xstate.enqueueActions';\n  enqueueActions.collect = collect;\n  enqueueActions.resolve = resolveEnqueueActions;\n  return enqueueActions;\n}\n\nfunction resolveLog(_, snapshot, actionArgs, actionParams, {\n  value,\n  label\n}) {\n  return [snapshot, {\n    value: typeof value === 'function' ? value(actionArgs, actionParams) : value,\n    label\n  }];\n}\nfunction executeLog({\n  logger\n}, {\n  value,\n  label\n}) {\n  if (label) {\n    logger(label, value);\n  } else {\n    logger(value);\n  }\n}\n/**\n * @param expr The expression function to evaluate which will be logged. Takes\n *   in 2 arguments:\n *\n *   - `ctx` - the current state context\n *   - `event` - the event that caused this action to be executed.\n *\n * @param label The label to give to the logged expression.\n */\nfunction log(value = ({\n  context,\n  event\n}) =\u003e ({\n  context,\n  event\n}), label) {\n  function log(args, params) {\n  }\n  log.type = 'xstate.log';\n  log.value = value;\n  log.label = label;\n  log.resolve = resolveLog;\n  log.execute = executeLog;\n  return log;\n}\n\nexports.SpecialTargets = SpecialTargets;\nexports.assign = assign;\nexports.emit = emit;\nexports.enqueueActions = enqueueActions;\nexports.forwardTo = forwardTo;\nexports.log = log;\nexports.sendParent = sendParent;\nexports.sendTo = sendTo;\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar actors_dist_xstateActors = require('../actors/dist/xstate-actors.cjs.js');\nvar guards_dist_xstateGuards = require('./raise-cde45f56.cjs.js');\nvar log = require('./log-098d2ed5.cjs.js');\nrequire('../dev/dist/xstate-dev.cjs.js');\n\n/**\n * Asserts that the given event object is of the specified type or types. Throws\n * an error if the event object is not of the specified types.\n *\n * @example\n *\n * ```ts\n * // ...\n * entry: ({ event }) =\u003e {\n *   assertEvent(event, 'doNothing');\n *   // event is { type: 'doNothing' }\n * },\n * // ...\n * exit: ({ event }) =\u003e {\n *   assertEvent(event, 'greet');\n *   // event is { type: 'greet'; message: string }\n *\n *   assertEvent(event, ['greet', 'notify']);\n *   // event is { type: 'greet'; message: string }\n *   // or { type: 'notify'; message: string; level: 'info' | 'error' }\n * },\n * ```\n */\nfunction assertEvent(event, type) {\n  const types = guards_dist_xstateGuards.toArray(type);\n  if (!types.includes(event.type)) {\n    const typesText = types.length === 1 ? `type \"${types[0]}\"` : `one of types \"${types.join('\", \"')}\"`;\n    throw new Error(`Expected event ${JSON.stringify(event)} to have ${typesText}`);\n  }\n}\n\nconst cache = new WeakMap();\nfunction memo(object, key, fn) {\n  let memoizedData = cache.get(object);\n  if (!memoizedData) {\n    memoizedData = {\n      [key]: fn()\n    };\n    cache.set(object, memoizedData);\n  } else if (!(key in memoizedData)) {\n    memoizedData[key] = fn();\n  }\n  return memoizedData[key];\n}\n\nconst EMPTY_OBJECT = {};\nconst toSerializableAction = action =\u003e {\n  if (typeof action === 'string') {\n    return {\n      type: action\n    };\n  }\n  if (typeof action === 'function') {\n    if ('resolve' in action) {\n      return {\n        type: action.type\n      };\n    }\n    return {\n      type: action.name\n    };\n  }\n  return action;\n};\nclass StateNode {\n  constructor( /** The raw config used to create the machine. */\n  config, options) {\n    this.config = config;\n    /**\n     * The relative key of the state node, which represents its location in the\n     * overall state value.\n     */\n    this.key = void 0;\n    /** The unique ID of the state node. */\n    this.id = void 0;\n    /**\n     * The type of this state node:\n     *\n     * - `'atomic'` - no child state nodes\n     * - `'compound'` - nested child state nodes (XOR)\n     * - `'parallel'` - orthogonal nested child state nodes (AND)\n     * - `'history'` - history state node\n     * - `'final'` - final state node\n     */\n    this.type = void 0;\n    /** The string path from the root machine node to this node. */\n    this.path = void 0;\n    /** The child state nodes. */\n    this.states = void 0;\n    /**\n     * The type of history on this state node. Can be:\n     *\n     * - `'shallow'` - recalls only top-level historical state value\n     * - `'deep'` - recalls historical state value at all levels\n     */\n    this.history = void 0;\n    /** The action(s) to be executed upon entering the state node. */\n    this.entry = void 0;\n    /** The action(s) to be executed upon exiting the state node. */\n    this.exit = void 0;\n    /** The parent state node. */\n    this.parent = void 0;\n    /** The root machine node. */\n    this.machine = void 0;\n    /**\n     * The meta data associated with this state node, which will be returned in\n     * State instances.\n     */\n    this.meta = void 0;\n    /**\n     * The output data sent with the \"xstate.done.state._id_\" event if this is a\n     * final state node.\n     */\n    this.output = void 0;\n    /**\n     * The order this state node appears. Corresponds to the implicit document\n     * order.\n     */\n    this.order = -1;\n    this.description = void 0;\n    this.tags = [];\n    this.transitions = void 0;\n    this.always = void 0;\n    this.parent = options._parent;\n    this.key = options._key;\n    this.machine = options._machine;\n    this.path = this.parent ? this.parent.path.concat(this.key) : [];\n    this.id = this.config.id || [this.machine.id, ...this.path].join(guards_dist_xstateGuards.STATE_DELIMITER);\n    this.type = this.config.type || (this.config.states \u0026\u0026 Object.keys(this.config.states).length ? 'compound' : this.config.history ? 'history' : 'atomic');\n    this.description = this.config.description;\n    this.order = this.machine.idMap.size;\n    this.machine.idMap.set(this.id, this);\n    this.states = this.config.states ? guards_dist_xstateGuards.mapValues(this.config.states, (stateConfig, key) =\u003e {\n      const stateNode = new StateNode(stateConfig, {\n        _parent: this,\n        _key: key,\n        _machine: this.machine\n      });\n      return stateNode;\n    }) : EMPTY_OBJECT;\n    if (this.type === 'compound' \u0026\u0026 !this.config.initial) {\n      throw new Error(`No initial state specified for compound state node \"#${this.id}\". Try adding { initial: \"${Object.keys(this.states)[0]}\" } to the state config.`);\n    }\n\n    // History config\n    this.history = this.config.history === true ? 'shallow' : this.config.history || false;\n    this.entry = guards_dist_xstateGuards.toArray(this.config.entry).slice();\n    this.exit = guards_dist_xstateGuards.toArray(this.config.exit).slice();\n    this.meta = this.config.meta;\n    this.output = this.type === 'final' || !this.parent ? this.config.output : undefined;\n    this.tags = guards_dist_xstateGuards.toArray(config.tags).slice();\n  }\n\n  /** @internal */\n  _initialize() {\n    this.transitions = guards_dist_xstateGuards.formatTransitions(this);\n    if (this.config.always) {\n      this.always = guards_dist_xstateGuards.toTransitionConfigArray(this.config.always).map(t =\u003e guards_dist_xstateGuards.formatTransition(this, guards_dist_xstateGuards.NULL_EVENT, t));\n    }\n    Object.keys(this.states).forEach(key =\u003e {\n      this.states[key]._initialize();\n    });\n  }\n\n  /** The well-structured state node definition. */\n  get definition() {\n    return {\n      id: this.id,\n      key: this.key,\n      version: this.machine.version,\n      type: this.type,\n      initial: this.initial ? {\n        target: this.initial.target,\n        source: this,\n        actions: this.initial.actions.map(toSerializableAction),\n        eventType: null,\n        reenter: false,\n        toJSON: () =\u003e ({\n          target: this.initial.target.map(t =\u003e `#${t.id}`),\n          source: `#${this.id}`,\n          actions: this.initial.actions.map(toSerializableAction),\n          eventType: null\n        })\n      } : undefined,\n      history: this.history,\n      states: guards_dist_xstateGuards.mapValues(this.states, state =\u003e {\n        return state.definition;\n      }),\n      on: this.on,\n      transitions: [...this.transitions.values()].flat().map(t =\u003e ({\n        ...t,\n        actions: t.actions.map(toSerializableAction)\n      })),\n      entry: this.entry.map(toSerializableAction),\n      exit: this.exit.map(toSerializableAction),\n      meta: this.meta,\n      order: this.order || -1,\n      output: this.output,\n      invoke: this.invoke,\n      description: this.description,\n      tags: this.tags\n    };\n  }\n\n  /** @internal */\n  toJSON() {\n    return this.definition;\n  }\n\n  /** The logic invoked as actors by this state node. */\n  get invoke() {\n    return memo(this, 'invoke', () =\u003e guards_dist_xstateGuards.toArray(this.config.invoke).map((invokeConfig, i) =\u003e {\n      const {\n        src,\n        systemId\n      } = invokeConfig;\n      const resolvedId = invokeConfig.id ?? guards_dist_xstateGuards.createInvokeId(this.id, i);\n      const resolvedSrc = typeof src === 'string' ? src : `xstate.invoke.${guards_dist_xstateGuards.createInvokeId(this.id, i)}`;\n      return {\n        ...invokeConfig,\n        src: resolvedSrc,\n        id: resolvedId,\n        systemId: systemId,\n        toJSON() {\n          const {\n            onDone,\n            onError,\n            ...invokeDefValues\n          } = invokeConfig;\n          return {\n            ...invokeDefValues,\n            type: 'xstate.invoke',\n            src: resolvedSrc,\n            id: resolvedId\n          };\n        }\n      };\n    }));\n  }\n\n  /** The mapping of events to transitions. */\n  get on() {\n    return memo(this, 'on', () =\u003e {\n      const transitions = this.transitions;\n      return [...transitions].flatMap(([descriptor, t]) =\u003e t.map(t =\u003e [descriptor, t])).reduce((map, [descriptor, transition]) =\u003e {\n        map[descriptor] = map[descriptor] || [];\n        map[descriptor].push(transition);\n        return map;\n      }, {});\n    });\n  }\n  get after() {\n    return memo(this, 'delayedTransitions', () =\u003e guards_dist_xstateGuards.getDelayedTransitions(this));\n  }\n  get initial() {\n    return memo(this, 'initial', () =\u003e guards_dist_xstateGuards.formatInitialTransition(this, this.config.initial));\n  }\n\n  /** @internal */\n  next(snapshot, event) {\n    const eventType = event.type;\n    const actions = [];\n    let selectedTransition;\n    const candidates = memo(this, `candidates-${eventType}`, () =\u003e guards_dist_xstateGuards.getCandidates(this, eventType));\n    for (const candidate of candidates) {\n      const {\n        guard\n      } = candidate;\n      const resolvedContext = snapshot.context;\n      let guardPassed = false;\n      try {\n        guardPassed = !guard || guards_dist_xstateGuards.evaluateGuard(guard, resolvedContext, event, snapshot);\n      } catch (err) {\n        const guardType = typeof guard === 'string' ? guard : typeof guard === 'object' ? guard.type : undefined;\n        throw new Error(`Unable to evaluate guard ${guardType ? `'${guardType}' ` : ''}in transition for event '${eventType}' in state node '${this.id}':\\n${err.message}`);\n      }\n      if (guardPassed) {\n        actions.push(...candidate.actions);\n        selectedTransition = candidate;\n        break;\n      }\n    }\n    return selectedTransition ? [selectedTransition] : undefined;\n  }\n\n  /** All the event types accepted by this state node and its descendants. */\n  get events() {\n    return memo(this, 'events', () =\u003e {\n      const {\n        states\n      } = this;\n      const events = new Set(this.ownEvents);\n      if (states) {\n        for (const stateId of Object.keys(states)) {\n          const state = states[stateId];\n          if (state.states) {\n            for (const event of state.events) {\n              events.add(`${event}`);\n            }\n          }\n        }\n      }\n      return Array.from(events);\n    });\n  }\n\n  /**\n   * All the events that have transitions directly from this state node.\n   *\n   * Excludes any inert events.\n   */\n  get ownEvents() {\n    const events = new Set([...this.transitions.keys()].filter(descriptor =\u003e {\n      return this.transitions.get(descriptor).some(transition =\u003e !(!transition.target \u0026\u0026 !transition.actions.length \u0026\u0026 !transition.reenter));\n    }));\n    return Array.from(events);\n  }\n}\n\nconst STATE_IDENTIFIER = '#';\nclass StateMachine {\n  constructor( /** The raw config used to create the machine. */\n  config, implementations) {\n    this.config = config;\n    /** The machine's own version. */\n    this.version = void 0;\n    this.schemas = void 0;\n    this.implementations = void 0;\n    /** @internal */\n    this.__xstatenode = true;\n    /** @internal */\n    this.idMap = new Map();\n    this.root = void 0;\n    this.id = void 0;\n    this.states = void 0;\n    this.events = void 0;\n    this.id = config.id || '(machine)';\n    this.implementations = {\n      actors: implementations?.actors ?? {},\n      actions: implementations?.actions ?? {},\n      delays: implementations?.delays ?? {},\n      guards: implementations?.guards ?? {}\n    };\n    this.version = this.config.version;\n    this.schemas = this.config.schemas;\n    this.transition = this.transition.bind(this);\n    this.getInitialSnapshot = this.getInitialSnapshot.bind(this);\n    this.getPersistedSnapshot = this.getPersistedSnapshot.bind(this);\n    this.restoreSnapshot = this.restoreSnapshot.bind(this);\n    this.start = this.start.bind(this);\n    this.root = new StateNode(config, {\n      _key: this.id,\n      _machine: this\n    });\n    this.root._initialize();\n    this.states = this.root.states; // TODO: remove!\n    this.events = this.root.events;\n  }\n\n  /**\n   * Clones this state machine with the provided implementations and merges the\n   * `context` (if provided).\n   *\n   * @param implementations Options (`actions`, `guards`, `actors`, `delays`,\n   *   `context`) to recursively merge with the existing options.\n   * @returns A new `StateMachine` instance with the provided implementations.\n   */\n  provide(implementations) {\n    const {\n      actions,\n      guards,\n      actors,\n      delays\n    } = this.implementations;\n    return new StateMachine(this.config, {\n      actions: {\n        ...actions,\n        ...implementations.actions\n      },\n      guards: {\n        ...guards,\n        ...implementations.guards\n      },\n      actors: {\n        ...actors,\n        ...implementations.actors\n      },\n      delays: {\n        ...delays,\n        ...implementations.delays\n      }\n    });\n  }\n  resolveState(config) {\n    const resolvedStateValue = guards_dist_xstateGuards.resolveStateValue(this.root, config.value);\n    const nodeSet = guards_dist_xstateGuards.getAllStateNodes(guards_dist_xstateGuards.getStateNodes(this.root, resolvedStateValue));\n    return guards_dist_xstateGuards.createMachineSnapshot({\n      _nodes: [...nodeSet],\n      context: config.context || {},\n      children: {},\n      status: guards_dist_xstateGuards.isInFinalState(nodeSet, this.root) ? 'done' : config.status || 'active',\n      output: config.output,\n      error: config.error,\n      historyValue: config.historyValue\n    }, this);\n  }\n\n  /**\n   * Determines the next snapshot given the current `snapshot` and received\n   * `event`. Calculates a full macrostep from all microsteps.\n   *\n   * @param snapshot The current snapshot\n   * @param event The received event\n   */\n  transition(snapshot, event, actorScope) {\n    return guards_dist_xstateGuards.macrostep(snapshot, event, actorScope).snapshot;\n  }\n\n  /**\n   * Determines the next state given the current `state` and `event`. Calculates\n   * a microstep.\n   *\n   * @param state The current state\n   * @param event The received event\n   */\n  microstep(snapshot, event, actorScope) {\n    return guards_dist_xstateGuards.macrostep(snapshot, event, actorScope).microstates;\n  }\n  getTransitionData(snapshot, event) {\n    return guards_dist_xstateGuards.transitionNode(this.root, snapshot.value, snapshot, event) || [];\n  }\n\n  /**\n   * The initial state _before_ evaluating any microsteps. This \"pre-initial\"\n   * state is provided to initial actions executed in the initial state.\n   */\n  getPreInitialState(actorScope, initEvent, internalQueue) {\n    const {\n      context\n    } = this.config;\n    const preInitial = guards_dist_xstateGuards.createMachineSnapshot({\n      context: typeof context !== 'function' \u0026\u0026 context ? context : {},\n      _nodes: [this.root],\n      children: {},\n      status: 'active'\n    }, this);\n    if (typeof context === 'function') {\n      const assignment = ({\n        spawn,\n        event,\n        self\n      }) =\u003e context({\n        spawn,\n        input: event.input,\n        self\n      });\n      return guards_dist_xstateGuards.resolveActionsAndContext(preInitial, initEvent, actorScope, [log.assign(assignment)], internalQueue);\n    }\n    return preInitial;\n  }\n\n  /**\n   * Returns the initial `State` instance, with reference to `self` as an\n   * `ActorRef`.\n   */\n  getInitialSnapshot(actorScope, input) {\n    const initEvent = guards_dist_xstateGuards.createInitEvent(input); // TODO: fix;\n    const internalQueue = [];\n    const preInitialState = this.getPreInitialState(actorScope, initEvent, internalQueue);\n    const nextState = guards_dist_xstateGuards.microstep([{\n      target: [...guards_dist_xstateGuards.getInitialStateNodes(this.root)],\n      source: this.root,\n      reenter: true,\n      actions: [],\n      eventType: null,\n      toJSON: null // TODO: fix\n    }], preInitialState, actorScope, initEvent, true, internalQueue);\n    const {\n      snapshot: macroState\n    } = guards_dist_xstateGuards.macrostep(nextState, initEvent, actorScope, internalQueue);\n    return macroState;\n  }\n  start(snapshot) {\n    Object.values(snapshot.children).forEach(child =\u003e {\n      if (child.getSnapshot().status === 'active') {\n        child.start();\n      }\n    });\n  }\n  getStateNodeById(stateId) {\n    const fullPath = guards_dist_xstateGuards.toStatePath(stateId);\n    const relativePath = fullPath.slice(1);\n    const resolvedStateId = guards_dist_xstateGuards.isStateId(fullPath[0]) ? fullPath[0].slice(STATE_IDENTIFIER.length) : fullPath[0];\n    const stateNode = this.idMap.get(resolvedStateId);\n    if (!stateNode) {\n      throw new Error(`Child state node '#${resolvedStateId}' does not exist on machine '${this.id}'`);\n    }\n    return guards_dist_xstateGuards.getStateNodeByPath(stateNode, relativePath);\n  }\n  get definition() {\n    return this.root.definition;\n  }\n  toJSON() {\n    return this.definition;\n  }\n  getPersistedSnapshot(snapshot, options) {\n    return guards_dist_xstateGuards.getPersistedSnapshot(snapshot, options);\n  }\n  restoreSnapshot(snapshot, _actorScope) {\n    const children = {};\n    const snapshotChildren = snapshot.children;\n    Object.keys(snapshotChildren).forEach(actorId =\u003e {\n      const actorData = snapshotChildren[actorId];\n      const childState = actorData.snapshot;\n      const src = actorData.src;\n      const logic = typeof src === 'string' ? guards_dist_xstateGuards.resolveReferencedActor(this, src) : src;\n      if (!logic) {\n        return;\n      }\n      const actorRef = guards_dist_xstateGuards.createActor(logic, {\n        id: actorId,\n        parent: _actorScope.self,\n        syncSnapshot: actorData.syncSnapshot,\n        snapshot: childState,\n        src,\n        systemId: actorData.systemId\n      });\n      children[actorId] = actorRef;\n    });\n    const restoredSnapshot = guards_dist_xstateGuards.createMachineSnapshot({\n      ...snapshot,\n      children,\n      _nodes: Array.from(guards_dist_xstateGuards.getAllStateNodes(guards_dist_xstateGuards.getStateNodes(this.root, snapshot.value)))\n    }, this);\n    let seen = new Set();\n    function reviveContext(contextPart, children) {\n      if (seen.has(contextPart)) {\n        return;\n      }\n      seen.add(contextPart);\n      for (let key in contextPart) {\n        const value = contextPart[key];\n        if (value \u0026\u0026 typeof value === 'object') {\n          if ('xstate$$type' in value \u0026\u0026 value.xstate$$type === guards_dist_xstateGuards.$$ACTOR_TYPE) {\n            contextPart[key] = children[value.id];\n            continue;\n          }\n          reviveContext(value, children);\n        }\n      }\n    }\n    reviveContext(restoredSnapshot.context, children);\n    return restoredSnapshot;\n  }\n}\n\n// this is not 100% accurate since we can't make parallel regions required in the result\n// `TTestValue` doesn't encode this information anyhow for us to be able to do that\n// this is fine for most practical use cases anyway though\n/**\n * Creates a state machine (statechart) with the given configuration.\n *\n * The state machine represents the pure logic of a state machine actor.\n *\n * @example\n *\n * ```ts\n * import { createMachine } from 'xstate';\n *\n * const lightMachine = createMachine({\n *   id: 'light',\n *   initial: 'green',\n *   states: {\n *     green: {\n *       on: {\n *         TIMER: { target: 'yellow' }\n *       }\n *     },\n *     yellow: {\n *       on: {\n *         TIMER: { target: 'red' }\n *       }\n *     },\n *     red: {\n *       on: {\n *         TIMER: { target: 'green' }\n *       }\n *     }\n *   }\n * });\n *\n * const lightActor = createActor(lightMachine);\n * lightActor.start();\n *\n * lightActor.send({ type: 'TIMER' });\n * ```\n *\n * @param config The state machine configuration.\n * @param options DEPRECATED: use `setup({ ... })` or `machine.provide({ ... })`\n *   to provide machine implementations instead.\n */\nfunction createMachine(config, implementations) {\n  return new StateMachine(config, implementations);\n}\n\n/** @internal */\nfunction createInertActorScope(actorLogic) {\n  const self = guards_dist_xstateGuards.createActor(actorLogic);\n  const inertActorScope = {\n    self,\n    defer: () =\u003e {},\n    id: '',\n    logger: () =\u003e {},\n    sessionId: '',\n    stopChild: () =\u003e {},\n    system: self.system,\n    emit: () =\u003e {}\n  };\n  return inertActorScope;\n}\nfunction getInitialSnapshot(actorLogic, ...[input]) {\n  const actorScope = createInertActorScope(actorLogic);\n  return actorLogic.getInitialSnapshot(actorScope, input);\n}\n\n/**\n * Determines the next snapshot for the given `actorLogic` based on the given\n * `snapshot` and `event`.\n *\n * If the `snapshot` is `undefined`, the initial snapshot of the `actorLogic` is\n * used.\n *\n * @example\n *\n * ```ts\n * import { getNextSnapshot } from 'xstate';\n * import { trafficLightMachine } from './trafficLightMachine.ts';\n *\n * const nextSnapshot = getNextSnapshot(\n *   trafficLightMachine, // actor logic\n *   undefined, // snapshot (or initial state if undefined)\n *   { type: 'TIMER' }\n * ); // event object\n *\n * console.log(nextSnapshot.value);\n * // =\u003e 'yellow'\n *\n * const nextSnapshot2 = getNextSnapshot(\n *   trafficLightMachine, // actor logic\n *   nextSnapshot, // snapshot\n *   { type: 'TIMER' }\n * ); // event object\n *\n * console.log(nextSnapshot2.value);\n * // =\u003e'red'\n * ```\n */\nfunction getNextSnapshot(actorLogic, snapshot, event) {\n  const inertActorScope = createInertActorScope(actorLogic);\n  inertActorScope.self._snapshot = snapshot;\n  return actorLogic.transition(snapshot, event, inertActorScope);\n}\n\n// at the moment we allow extra actors - ones that are not specified by `children`\n// this could be reconsidered in the future\nfunction setup({\n  schemas,\n  actors,\n  actions,\n  guards,\n  delays\n}) {\n  return {\n    createMachine: config =\u003e createMachine({\n      ...config,\n      schemas\n    }, {\n      actors,\n      actions,\n      guards,\n      delays\n    })\n  };\n}\n\nclass SimulatedClock {\n  constructor() {\n    this.timeouts = new Map();\n    this._now = 0;\n    this._id = 0;\n    this._flushing = false;\n    this._flushingInvalidated = false;\n  }\n  now() {\n    return this._now;\n  }\n  getId() {\n    return this._id++;\n  }\n  setTimeout(fn, timeout) {\n    this._flushingInvalidated = this._flushing;\n    const id = this.getId();\n    this.timeouts.set(id, {\n      start: this.now(),\n      timeout,\n      fn\n    });\n    return id;\n  }\n  clearTimeout(id) {\n    this._flushingInvalidated = this._flushing;\n    this.timeouts.delete(id);\n  }\n  set(time) {\n    if (this._now \u003e time) {\n      throw new Error('Unable to travel back in time');\n    }\n    this._now = time;\n    this.flushTimeouts();\n  }\n  flushTimeouts() {\n    if (this._flushing) {\n      this._flushingInvalidated = true;\n      return;\n    }\n    this._flushing = true;\n    const sorted = [...this.timeouts].sort(([_idA, timeoutA], [_idB, timeoutB]) =\u003e {\n      const endA = timeoutA.start + timeoutA.timeout;\n      const endB = timeoutB.start + timeoutB.timeout;\n      return endB \u003e endA ? -1 : 1;\n    });\n    for (const [id, timeout] of sorted) {\n      if (this._flushingInvalidated) {\n        this._flushingInvalidated = false;\n        this._flushing = false;\n        this.flushTimeouts();\n        return;\n      }\n      if (this.now() - timeout.start \u003e= timeout.timeout) {\n        this.timeouts.delete(id);\n        timeout.fn.call(null);\n      }\n    }\n    this._flushing = false;\n  }\n  increment(ms) {\n    this._now += ms;\n    this.flushTimeouts();\n  }\n}\n\n/**\n * Returns a promise that resolves to the `output` of the actor when it is done.\n *\n * @example\n *\n * ```ts\n * const machine = createMachine({\n *   // ...\n *   output: {\n *     count: 42\n *   }\n * });\n *\n * const actor = createActor(machine);\n *\n * actor.start();\n *\n * const output = await toPromise(actor);\n *\n * console.log(output);\n * // logs { count: 42 }\n * ```\n */\nfunction toPromise(actor) {\n  return new Promise((resolve, reject) =\u003e {\n    actor.subscribe({\n      complete: () =\u003e {\n        resolve(actor.getSnapshot().output);\n      },\n      error: reject\n    });\n  });\n}\n\nconst defaultWaitForOptions = {\n  timeout: Infinity // much more than 10 seconds\n};\n\n/**\n * Subscribes to an actor ref and waits for its emitted value to satisfy a\n * predicate, and then resolves with that value. Will throw if the desired state\n * is not reached after an optional timeout. (defaults to Infinity).\n *\n * @example\n *\n * ```js\n * const state = await waitFor(someService, (state) =\u003e {\n *   return state.hasTag('loaded');\n * });\n *\n * state.hasTag('loaded'); // true\n * ```\n *\n * @param actorRef The actor ref to subscribe to\n * @param predicate Determines if a value matches the condition to wait for\n * @param options\n * @returns A promise that eventually resolves to the emitted value that matches\n *   the condition\n */\nfunction waitFor(actorRef, predicate, options) {\n  const resolvedOptions = {\n    ...defaultWaitForOptions,\n    ...options\n  };\n  return new Promise((res, rej) =\u003e {\n    const {\n      signal\n    } = resolvedOptions;\n    if (signal?.aborted) {\n      rej(signal.reason);\n      return;\n    }\n    let done = false;\n    const handle = resolvedOptions.timeout === Infinity ? undefined : setTimeout(() =\u003e {\n      dispose();\n      rej(new Error(`Timeout of ${resolvedOptions.timeout} ms exceeded`));\n    }, resolvedOptions.timeout);\n    const dispose = () =\u003e {\n      clearTimeout(handle);\n      done = true;\n      sub?.unsubscribe();\n      if (abortListener) {\n        signal.removeEventListener('abort', abortListener);\n      }\n    };\n    function checkEmitted(emitted) {\n      if (predicate(emitted)) {\n        dispose();\n        res(emitted);\n      }\n    }\n\n    /**\n     * If the `signal` option is provided, this will be the listener for its\n     * `abort` event\n     */\n    let abortListener;\n    let sub; // avoid TDZ when disposing synchronously\n\n    // See if the current snapshot already matches the predicate\n    checkEmitted(actorRef.getSnapshot());\n    if (done) {\n      return;\n    }\n\n    // only define the `abortListener` if the `signal` option is provided\n    if (signal) {\n      abortListener = () =\u003e {\n        dispose();\n        // XState does not \"own\" the signal, so we should reject with its reason (if any)\n        rej(signal.reason);\n      };\n      signal.addEventListener('abort', abortListener);\n    }\n    sub = actorRef.subscribe({\n      next: checkEmitted,\n      error: err =\u003e {\n        dispose();\n        rej(err);\n      },\n      complete: () =\u003e {\n        dispose();\n        rej(new Error(`Actor terminated without satisfying predicate`));\n      }\n    });\n    if (done) {\n      sub.unsubscribe();\n    }\n  });\n}\n\nexports.createEmptyActor = actors_dist_xstateActors.createEmptyActor;\nexports.fromCallback = actors_dist_xstateActors.fromCallback;\nexports.fromEventObservable = actors_dist_xstateActors.fromEventObservable;\nexports.fromObservable = actors_dist_xstateActors.fromObservable;\nexports.fromPromise = actors_dist_xstateActors.fromPromise;\nexports.fromTransition = actors_dist_xstateActors.fromTransition;\nexports.Actor = guards_dist_xstateGuards.Actor;\nexports.__unsafe_getAllOwnEventDescriptors = guards_dist_xstateGuards.getAllOwnEventDescriptors;\nexports.and = guards_dist_xstateGuards.and;\nexports.cancel = guards_dist_xstateGuards.cancel;\nexports.createActor = guards_dist_xstateGuards.createActor;\nexports.getStateNodes = guards_dist_xstateGuards.getStateNodes;\nexports.interpret = guards_dist_xstateGuards.interpret;\nexports.isMachineSnapshot = guards_dist_xstateGuards.isMachineSnapshot;\nexports.matchesState = guards_dist_xstateGuards.matchesState;\nexports.not = guards_dist_xstateGuards.not;\nexports.or = guards_dist_xstateGuards.or;\nexports.pathToStateValue = guards_dist_xstateGuards.pathToStateValue;\nexports.raise = guards_dist_xstateGuards.raise;\nexports.spawnChild = guards_dist_xstateGuards.spawnChild;\nexports.stateIn = guards_dist_xstateGuards.stateIn;\nexports.stop = guards_dist_xstateGuards.stop;\nexports.stopChild = guards_dist_xstateGuards.stopChild;\nexports.toObserver = guards_dist_xstateGuards.toObserver;\nexports.SpecialTargets = log.SpecialTargets;\nexports.assign = log.assign;\nexports.emit = log.emit;\nexports.enqueueActions = log.enqueueActions;\nexports.forwardTo = log.forwardTo;\nexports.log = log.log;\nexports.sendParent = log.sendParent;\nexports.sendTo = log.sendTo;\nexports.SimulatedClock = SimulatedClock;\nexports.StateMachine = StateMachine;\nexports.StateNode = StateNode;\nexports.assertEvent = assertEvent;\nexports.createMachine = createMachine;\nexports.getInitialSnapshot = getInitialSnapshot;\nexports.getNextSnapshot = getNextSnapshot;\nexports.setup = setup;\nexports.toPromise = toPromise;\nexports.waitFor = waitFor;\n","function number(n: number) {\n  if (!Number.isSafeInteger(n) || n \u003c 0) throw new Error(`positive integer expected, not ${n}`);\n}\n\nfunction bool(b: boolean) {\n  if (typeof b !== 'boolean') throw new Error(`boolean expected, not ${b}`);\n}\n\n// copied from utils\nexport function isBytes(a: unknown): a is Uint8Array {\n  return (\n    a instanceof Uint8Array ||\n    (a != null \u0026\u0026 typeof a === 'object' \u0026\u0026 a.constructor.name === 'Uint8Array')\n  );\n}\n\nfunction bytes(b: Uint8Array | undefined, ...lengths: number[]) {\n  if (!isBytes(b)) throw new Error('Uint8Array expected');\n  if (lengths.length \u003e 0 \u0026\u0026 !lengths.includes(b.length))\n    throw new Error(`Uint8Array expected of length ${lengths}, not of length=${b.length}`);\n}\n\ntype Hash = {\n  (data: Uint8Array): Uint8Array;\n  blockLen: number;\n  outputLen: number;\n  create: any;\n};\nfunction hash(h: Hash) {\n  if (typeof h !== 'function' || typeof h.create !== 'function')\n    throw new Error('Hash should be wrapped by utils.wrapConstructor');\n  number(h.outputLen);\n  number(h.blockLen);\n}\n\nfunction exists(instance: any, checkFinished = true) {\n  if (instance.destroyed) throw new Error('Hash instance has been destroyed');\n  if (checkFinished \u0026\u0026 instance.finished) throw new Error('Hash#digest() has already been called');\n}\nfunction output(out: any, instance: any) {\n  bytes(out);\n  const min = instance.outputLen;\n  if (out.length \u003c min) {\n    throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n  }\n}\n\nexport { number, bool, bytes, hash, exists, output };\n\nconst assert = { number, bool, bytes, hash, exists, output };\nexport default assert;\n","// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// See utils.ts for details.\ndeclare const globalThis: Record\u003cstring, any\u003e | undefined;\nexport const crypto =\n  typeof globalThis === 'object' \u0026\u0026 'crypto' in globalThis ? globalThis.crypto : undefined;\n","/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated (2025-04-30), we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\nimport { bytes as abytes } from './_assert.js';\n// export { isBytes } from './_assert.js';\n// We can't reuse isBytes from _assert, because somehow this causes huge perf issues\nexport function isBytes(a: unknown): a is Uint8Array {\n  return (\n    a instanceof Uint8Array ||\n    (a != null \u0026\u0026 typeof a === 'object' \u0026\u0026 a.constructor.name === 'Uint8Array')\n  );\n}\n\n// prettier-ignore\nexport type TypedArray = Int8Array | Uint8ClampedArray | Uint8Array |\n  Uint16Array | Int16Array | Uint32Array | Int32Array;\n\n// Cast array to different type\nexport const u8 = (arr: TypedArray) =\u003e new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr: TypedArray) =\u003e\n  new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n\n// Cast array to view\nexport const createView = (arr: TypedArray) =\u003e\n  new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word: number, shift: number) =\u003e (word \u003c\u003c (32 - shift)) | (word \u003e\u003e\u003e shift);\n// The rotate left (circular left shift) operation for uint32\nexport const rotl = (word: number, shift: number) =\u003e\n  (word \u003c\u003c shift) | ((word \u003e\u003e\u003e (32 - shift)) \u003e\u003e\u003e 0);\n\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\n// The byte swap operation for uint32\nexport const byteSwap = (word: number) =\u003e\n  ((word \u003c\u003c 24) \u0026 0xff000000) |\n  ((word \u003c\u003c 8) \u0026 0xff0000) |\n  ((word \u003e\u003e\u003e 8) \u0026 0xff00) |\n  ((word \u003e\u003e\u003e 24) \u0026 0xff);\n// Conditionally byte swap if on a big-endian platform\nexport const byteSwapIfBE = isLE ? (n: number) =\u003e n : (n: number) =\u003e byteSwap(n);\n\n// In place byte swap for Uint32Array\nexport function byteSwap32(arr: Uint32Array) {\n  for (let i = 0; i \u003c arr.length; i++) {\n    arr[i] = byteSwap(arr[i]);\n  }\n}\n\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) =\u003e\n  i.toString(16).padStart(2, '0')\n);\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes: Uint8Array): string {\n  abytes(bytes);\n  // pre-caching improves the speed 6x\n  let hex = '';\n  for (let i = 0; i \u003c bytes.length; i++) {\n    hex += hexes[bytes[i]];\n  }\n  return hex;\n}\n\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, _A: 65, _F: 70, _a: 97, _f: 102 } as const;\nfunction asciiToBase16(char: number): number | undefined {\n  if (char \u003e= asciis._0 \u0026\u0026 char \u003c= asciis._9) return char - asciis._0;\n  if (char \u003e= asciis._A \u0026\u0026 char \u003c= asciis._F) return char - (asciis._A - 10);\n  if (char \u003e= asciis._a \u0026\u0026 char \u003c= asciis._f) return char - (asciis._a - 10);\n  return;\n}\n\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  const hl = hex.length;\n  const al = hl / 2;\n  if (hl % 2) throw new Error('padded hex string expected, got unpadded hex of length ' + hl);\n  const array = new Uint8Array(al);\n  for (let ai = 0, hi = 0; ai \u003c al; ai++, hi += 2) {\n    const n1 = asciiToBase16(hex.charCodeAt(hi));\n    const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n    if (n1 === undefined || n2 === undefined) {\n      const char = hex[hi] + hex[hi + 1];\n      throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n    }\n    array[ai] = n1 * 16 + n2;\n  }\n  return array;\n}\n\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () =\u003e {};\n\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters: number, tick: number, cb: (i: number) =\u003e void) {\n  let ts = Date.now();\n  for (let i = 0; i \u003c iters; i++) {\n    cb(i);\n    // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n    const diff = Date.now() - ts;\n    if (diff \u003e= 0 \u0026\u0026 diff \u003c tick) continue;\n    await nextTick();\n    ts += diff;\n  }\n}\n\n// Global symbols in both browsers and Node.js since v11\n// See https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any;\n\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str: string): Uint8Array {\n  if (typeof str !== 'string') throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n  return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n\nexport type Input = Uint8Array | string;\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data: Input): Uint8Array {\n  if (typeof data === 'string') data = utf8ToBytes(data);\n  abytes(data);\n  return data;\n}\n\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  let sum = 0;\n  for (let i = 0; i \u003c arrays.length; i++) {\n    const a = arrays[i];\n    abytes(a);\n    sum += a.length;\n  }\n  const res = new Uint8Array(sum);\n  for (let i = 0, pad = 0; i \u003c arrays.length; i++) {\n    const a = arrays[i];\n    res.set(a, pad);\n    pad += a.length;\n  }\n  return res;\n}\n\n// For runtime check if class implements interface\nexport abstract class Hash\u003cT extends Hash\u003cT\u003e\u003e {\n  abstract blockLen: number; // Bytes per block\n  abstract outputLen: number; // Bytes in output\n  abstract update(buf: Input): this;\n  // Writes digest into buf\n  abstract digestInto(buf: Uint8Array): void;\n  abstract digest(): Uint8Array;\n  /**\n   * Resets internal state. Makes Hash instance unusable.\n   * Reset is impossible for keyed hashes if key is consumed into state. If digest is not consumed\n   * by user, they will need to manually call `destroy()` when zeroing is necessary.\n   */\n  abstract destroy(): void;\n  /**\n   * Clones hash instance. Unsafe: doesn't check whether `to` is valid. Can be used as `clone()`\n   * when no options are passed.\n   * Reasons to use `_cloneInto` instead of clone: 1) performance 2) reuse instance =\u003e all internal\n   * buffers are overwritten =\u003e causes buffer overwrite which is used for digest in some cases.\n   * There are no guarantees for clean-up because it's impossible in JS.\n   */\n  abstract _cloneInto(to?: T): T;\n  // Safe version that clones internal state\n  clone(): T {\n    return this._cloneInto();\n  }\n}\n\n/**\n * XOF: streaming API to read digest in chunks.\n * Same as 'squeeze' in keccak/k12 and 'seek' in blake3, but more generic name.\n * When hash used in XOF mode it is up to user to call '.destroy' afterwards, since we cannot\n * destroy state, next call can require more bytes.\n */\nexport type HashXOF\u003cT extends Hash\u003cT\u003e\u003e = Hash\u003cT\u003e \u0026 {\n  xof(bytes: number): Uint8Array; // Read 'bytes' bytes from digest stream\n  xofInto(buf: Uint8Array): Uint8Array; // read buf.length bytes from digest stream into buf\n};\n\nconst toStr = {}.toString;\ntype EmptyObj = {};\nexport function checkOpts\u003cT1 extends EmptyObj, T2 extends EmptyObj\u003e(\n  defaults: T1,\n  opts?: T2\n): T1 \u0026 T2 {\n  if (opts !== undefined \u0026\u0026 toStr.call(opts) !== '[object Object]')\n    throw new Error('Options should be object or undefined');\n  const merged = Object.assign(defaults, opts);\n  return merged as T1 \u0026 T2;\n}\n\nexport type CHash = ReturnType\u003ctypeof wrapConstructor\u003e;\n\nexport function wrapConstructor\u003cT extends Hash\u003cT\u003e\u003e(hashCons: () =\u003e Hash\u003cT\u003e) {\n  const hashC = (msg: Input): Uint8Array =\u003e hashCons().update(toBytes(msg)).digest();\n  const tmp = hashCons();\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = () =\u003e hashCons();\n  return hashC;\n}\n\nexport function wrapConstructorWithOpts\u003cH extends Hash\u003cH\u003e, T extends Object\u003e(\n  hashCons: (opts?: T) =\u003e Hash\u003cH\u003e\n) {\n  const hashC = (msg: Input, opts?: T): Uint8Array =\u003e hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts: T) =\u003e hashCons(opts);\n  return hashC;\n}\n\nexport function wrapXOFConstructorWithOpts\u003cH extends HashXOF\u003cH\u003e, T extends Object\u003e(\n  hashCons: (opts?: T) =\u003e HashXOF\u003cH\u003e\n) {\n  const hashC = (msg: Input, opts?: T): Uint8Array =\u003e hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts: T) =\u003e hashCons(opts);\n  return hashC;\n}\n\n/**\n * Secure PRNG. Uses `crypto.getRandomValues`, which defers to OS.\n */\nexport function randomBytes(bytesLength = 32): Uint8Array {\n  if (crypto \u0026\u0026 typeof crypto.getRandomValues === 'function') {\n    return crypto.getRandomValues(new Uint8Array(bytesLength));\n  }\n  // Legacy Node.js compatibility\n  if (crypto \u0026\u0026 typeof crypto.randomBytes === 'function') {\n    return crypto.randomBytes(bytesLength);\n  }\n  throw new Error('crypto.getRandomValues must be defined');\n}\n","import { exists, output } from './_assert.js';\nimport { Hash, createView, Input, toBytes } from './utils.js';\n\n/**\n * Polyfill for Safari 14\n */\nfunction setBigUint64(view: DataView, byteOffset: number, value: bigint, isLE: boolean): void {\n  if (typeof view.setBigUint64 === 'function') return view.setBigUint64(byteOffset, value, isLE);\n  const _32n = BigInt(32);\n  const _u32_max = BigInt(0xffffffff);\n  const wh = Number((value \u003e\u003e _32n) \u0026 _u32_max);\n  const wl = Number(value \u0026 _u32_max);\n  const h = isLE ? 4 : 0;\n  const l = isLE ? 0 : 4;\n  view.setUint32(byteOffset + h, wh, isLE);\n  view.setUint32(byteOffset + l, wl, isLE);\n}\n\n/**\n * Choice: a ? b : c\n */\nexport const Chi = (a: number, b: number, c: number) =\u003e (a \u0026 b) ^ (~a \u0026 c);\n\n/**\n * Majority function, true if any two inputs is true\n */\nexport const Maj = (a: number, b: number, c: number) =\u003e (a \u0026 b) ^ (a \u0026 c) ^ (b \u0026 c);\n\n/**\n * Merkle-Damgard hash construction base class.\n * Could be used to create MD5, RIPEMD, SHA1, SHA2.\n */\nexport abstract class HashMD\u003cT extends HashMD\u003cT\u003e\u003e extends Hash\u003cT\u003e {\n  protected abstract process(buf: DataView, offset: number): void;\n  protected abstract get(): number[];\n  protected abstract set(...args: number[]): void;\n  abstract destroy(): void;\n  protected abstract roundClean(): void;\n  // For partial updates less than block size\n  protected buffer: Uint8Array;\n  protected view: DataView;\n  protected finished = false;\n  protected length = 0;\n  protected pos = 0;\n  protected destroyed = false;\n\n  constructor(\n    readonly blockLen: number,\n    public outputLen: number,\n    readonly padOffset: number,\n    readonly isLE: boolean\n  ) {\n    super();\n    this.buffer = new Uint8Array(blockLen);\n    this.view = createView(this.buffer);\n  }\n  update(data: Input): this {\n    exists(this);\n    const { view, buffer, blockLen } = this;\n    data = toBytes(data);\n    const len = data.length;\n    for (let pos = 0; pos \u003c len; ) {\n      const take = Math.min(blockLen - this.pos, len - pos);\n      // Fast path: we have at least one block in input, cast it to view and process\n      if (take === blockLen) {\n        const dataView = createView(data);\n        for (; blockLen \u003c= len - pos; pos += blockLen) this.process(dataView, pos);\n        continue;\n      }\n      buffer.set(data.subarray(pos, pos + take), this.pos);\n      this.pos += take;\n      pos += take;\n      if (this.pos === blockLen) {\n        this.process(view, 0);\n        this.pos = 0;\n      }\n    }\n    this.length += data.length;\n    this.roundClean();\n    return this;\n  }\n  digestInto(out: Uint8Array) {\n    exists(this);\n    output(out, this);\n    this.finished = true;\n    // Padding\n    // We can avoid allocation of buffer for padding completely if it\n    // was previously not allocated here. But it won't change performance.\n    const { buffer, view, blockLen, isLE } = this;\n    let { pos } = this;\n    // append the bit '1' to the message\n    buffer[pos++] = 0b10000000;\n    this.buffer.subarray(pos).fill(0);\n    // we have less than padOffset left in buffer, so we cannot put length in\n    // current block, need process it and pad again\n    if (this.padOffset \u003e blockLen - pos) {\n      this.process(view, 0);\n      pos = 0;\n    }\n    // Pad until full block byte with zeros\n    for (let i = pos; i \u003c blockLen; i++) buffer[i] = 0;\n    // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n    // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n    // So we just write lowest 64 bits of that value.\n    setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n    this.process(view, 0);\n    const oview = createView(out);\n    const len = this.outputLen;\n    // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n    if (len % 4) throw new Error('_sha2: outputLen should be aligned to 32bit');\n    const outLen = len / 4;\n    const state = this.get();\n    if (outLen \u003e state.length) throw new Error('_sha2: outputLen bigger than state');\n    for (let i = 0; i \u003c outLen; i++) oview.setUint32(4 * i, state[i], isLE);\n  }\n  digest() {\n    const { buffer, outputLen } = this;\n    this.digestInto(buffer);\n    const res = buffer.slice(0, outputLen);\n    this.destroy();\n    return res;\n  }\n  _cloneInto(to?: T): T {\n    to ||= new (this.constructor as any)() as T;\n    to.set(...this.get());\n    const { blockLen, buffer, length, finished, destroyed, pos } = this;\n    to.length = length;\n    to.pos = pos;\n    to.finished = finished;\n    to.destroyed = destroyed;\n    if (length % blockLen) to.buffer.set(buffer);\n    return to;\n  }\n}\n","import { HashMD, Chi, Maj } from './_md.js';\nimport { rotr, wrapConstructor } from './utils.js';\n\n// SHA2-256 need to try 2^128 hashes to execute birthday attack.\n// BTC network is doing 2^67 hashes/sec as per early 2023.\n\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = /* @__PURE__ */ new Uint32Array([\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n\n// Initial state:\n// first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19\n// prettier-ignore\nconst SHA256_IV = /* @__PURE__ */ new Uint32Array([\n  0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = /* @__PURE__ */ new Uint32Array(64);\nexport class SHA256 extends HashMD\u003cSHA256\u003e {\n  // We cannot use array here since array allows indexing by variable\n  // which means optimizer/compiler cannot use registers.\n  A = SHA256_IV[0] | 0;\n  B = SHA256_IV[1] | 0;\n  C = SHA256_IV[2] | 0;\n  D = SHA256_IV[3] | 0;\n  E = SHA256_IV[4] | 0;\n  F = SHA256_IV[5] | 0;\n  G = SHA256_IV[6] | 0;\n  H = SHA256_IV[7] | 0;\n\n  constructor() {\n    super(64, 32, 8, false);\n  }\n  protected get(): [number, number, number, number, number, number, number, number] {\n    const { A, B, C, D, E, F, G, H } = this;\n    return [A, B, C, D, E, F, G, H];\n  }\n  // prettier-ignore\n  protected set(\n    A: number, B: number, C: number, D: number, E: number, F: number, G: number, H: number\n  ) {\n    this.A = A | 0;\n    this.B = B | 0;\n    this.C = C | 0;\n    this.D = D | 0;\n    this.E = E | 0;\n    this.F = F | 0;\n    this.G = G | 0;\n    this.H = H | 0;\n  }\n  protected process(view: DataView, offset: number): void {\n    // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n    for (let i = 0; i \u003c 16; i++, offset += 4) SHA256_W[i] = view.getUint32(offset, false);\n    for (let i = 16; i \u003c 64; i++) {\n      const W15 = SHA256_W[i - 15];\n      const W2 = SHA256_W[i - 2];\n      const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 \u003e\u003e\u003e 3);\n      const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 \u003e\u003e\u003e 10);\n      SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n    }\n    // Compression function main loop, 64 rounds\n    let { A, B, C, D, E, F, G, H } = this;\n    for (let i = 0; i \u003c 64; i++) {\n      const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n      const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n      const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n      const T2 = (sigma0 + Maj(A, B, C)) | 0;\n      H = G;\n      G = F;\n      F = E;\n      E = (D + T1) | 0;\n      D = C;\n      C = B;\n      B = A;\n      A = (T1 + T2) | 0;\n    }\n    // Add the compressed chunk to the current hash value\n    A = (A + this.A) | 0;\n    B = (B + this.B) | 0;\n    C = (C + this.C) | 0;\n    D = (D + this.D) | 0;\n    E = (E + this.E) | 0;\n    F = (F + this.F) | 0;\n    G = (G + this.G) | 0;\n    H = (H + this.H) | 0;\n    this.set(A, B, C, D, E, F, G, H);\n  }\n  protected roundClean() {\n    SHA256_W.fill(0);\n  }\n  destroy() {\n    this.set(0, 0, 0, 0, 0, 0, 0, 0);\n    this.buffer.fill(0);\n  }\n}\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nclass SHA224 extends SHA256 {\n  A = 0xc1059ed8 | 0;\n  B = 0x367cd507 | 0;\n  C = 0x3070dd17 | 0;\n  D = 0xf70e5939 | 0;\n  E = 0xffc00b31 | 0;\n  F = 0x68581511 | 0;\n  G = 0x64f98fa7 | 0;\n  H = 0xbefa4fa4 | 0;\n  constructor() {\n    super();\n    this.outputLen = 28;\n  }\n}\n\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexport const sha256 = /* @__PURE__ */ wrapConstructor(() =\u003e new SHA256());\n/**\n * SHA2-224 hash function\n */\nexport const sha224 = /* @__PURE__ */ wrapConstructor(() =\u003e new SHA224());\n","'use strict'\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\nfunction base (ALPHABET) {\n  if (ALPHABET.length \u003e= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256)\n  for (var j = 0; j \u003c BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255\n  }\n  for (var i = 0; i \u003c ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i)\n    var xc = x.charCodeAt(0)\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i\n  }\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n  var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (source instanceof Uint8Array) {\n    } else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength)\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source)\n    }\n    if (!(source instanceof Uint8Array)) { throw new TypeError('Expected Uint8Array') }\n    if (source.length === 0) { return '' }\n        // Skip \u0026 count leading zeroes.\n    var zeroes = 0\n    var length = 0\n    var pbegin = 0\n    var pend = source.length\n    while (pbegin !== pend \u0026\u0026 source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) \u003e\u003e\u003e 0\n    var b58 = new Uint8Array(size)\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin]\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0\n      for (var it1 = size - 1; (carry !== 0 || i \u003c length) \u0026\u0026 (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) \u003e\u003e\u003e 0\n        b58[it1] = (carry % BASE) \u003e\u003e\u003e 0\n        carry = (carry / BASE) \u003e\u003e\u003e 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      pbegin++\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length\n    while (it2 !== size \u0026\u0026 b58[it2] === 0) {\n      it2++\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes)\n    for (; it2 \u003c size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return new Uint8Array() }\n    var psz = 0\n        // Skip and count leading '1's.\n    var zeroes = 0\n    var length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) \u003e\u003e\u003e 0 // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size)\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)]\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0\n      for (var it3 = size - 1; (carry !== 0 || i \u003c length) \u0026\u0026 (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) \u003e\u003e\u003e 0\n        b256[it3] = (carry % 256) \u003e\u003e\u003e 0\n        carry = (carry / 256) \u003e\u003e\u003e 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      psz++\n    }\n        // Skip leading zeroes in b256.\n    var it4 = size - length\n    while (it4 !== size \u0026\u0026 b256[it4] === 0) {\n      it4++\n    }\n    var vch = new Uint8Array(zeroes + (size - it4))\n    var j = zeroes\n    while (it4 !== size) {\n      vch[j++] = b256[it4++]\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string)\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nmodule.exports = base\n","const basex = require('base-x')\nconst ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n\nmodule.exports = basex(ALPHABET)\n","'use strict'\n\nvar base58 = require('bs58')\n\nmodule.exports = function (checksumFn) {\n  // Encode a buffer as a base58-check encoded string\n  function encode (payload) {\n    var payloadU8 = Uint8Array.from(payload)\n    var checksum = checksumFn(payloadU8)\n    var length = payloadU8.length + 4\n    var both = new Uint8Array(length)\n    both.set(payloadU8, 0)\n    both.set(checksum.subarray(0, 4), payloadU8.length)\n    return base58.encode(both, length)\n  }\n\n  function decodeRaw (buffer) {\n    var payload = buffer.slice(0, -4)\n    var checksum = buffer.slice(-4)\n    var newChecksum = checksumFn(payload)\n\n    if (checksum[0] ^ newChecksum[0] |\n        checksum[1] ^ newChecksum[1] |\n        checksum[2] ^ newChecksum[2] |\n        checksum[3] ^ newChecksum[3]) return\n\n    return payload\n  }\n\n  // Decode a base58-check encoded string to a buffer, no result if checksum is wrong\n  function decodeUnsafe (string) {\n    var buffer = base58.decodeUnsafe(string)\n    if (!buffer) return\n\n    return decodeRaw(buffer)\n  }\n\n  function decode (string) {\n    var buffer = base58.decode(string)\n    var payload = decodeRaw(buffer, checksumFn)\n    if (!payload) throw new Error('Invalid checksum')\n    return payload\n  }\n\n  return {\n    encode: encode,\n    decode: decode,\n    decodeUnsafe: decodeUnsafe\n  }\n}\n","'use strict'\n\nvar { sha256 } = require('@noble/hashes/sha256')\nvar bs58checkBase = require('./base')\n\n// SHA256(SHA256(buffer))\nfunction sha256x2 (buffer) {\n  return sha256(sha256(buffer))\n}\n\nmodule.exports = bs58checkBase(sha256x2)\n","(function (root, factory) {\n    // Hack to make all exports of this module sha256 function object properties.\n    var exports = {};\n    factory(exports);\n    var sha256 = exports[\"default\"];\n    for (var k in exports) {\n        sha256[k] = exports[k];\n    }\n        \n    if (typeof module === 'object' \u0026\u0026 typeof module.exports === 'object') {\n        module.exports = sha256;\n    } else if (typeof define === 'function' \u0026\u0026 define.amd) {\n        define(function() { return sha256; }); \n    } else {\n        root.sha256 = sha256;\n    }\n})(this, function(exports) {\n\"use strict\";\nexports.__esModule = true;\n// SHA-256 (+ HMAC and PBKDF2) for JavaScript.\n//\n// Written in 2014-2016 by Dmitry Chestnykh.\n// Public domain, no warranty.\n//\n// Functions (accept and return Uint8Arrays):\n//\n//   sha256(message) -\u003e hash\n//   sha256.hmac(key, message) -\u003e mac\n//   sha256.pbkdf2(password, salt, rounds, dkLen) -\u003e dk\n//\n//  Classes:\n//\n//   new sha256.Hash()\n//   new sha256.HMAC(key)\n//\nexports.digestLength = 32;\nexports.blockSize = 64;\n// SHA-256 constants\nvar K = new Uint32Array([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b,\n    0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01,\n    0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7,\n    0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n    0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152,\n    0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147,\n    0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc,\n    0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819,\n    0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116, 0x1e376c08,\n    0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f,\n    0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n    0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\nfunction hashBlocks(w, v, p, pos, len) {\n    var a, b, c, d, e, f, g, h, u, i, j, t1, t2;\n    while (len \u003e= 64) {\n        a = v[0];\n        b = v[1];\n        c = v[2];\n        d = v[3];\n        e = v[4];\n        f = v[5];\n        g = v[6];\n        h = v[7];\n        for (i = 0; i \u003c 16; i++) {\n            j = pos + i * 4;\n            w[i] = (((p[j] \u0026 0xff) \u003c\u003c 24) | ((p[j + 1] \u0026 0xff) \u003c\u003c 16) |\n                ((p[j + 2] \u0026 0xff) \u003c\u003c 8) | (p[j + 3] \u0026 0xff));\n        }\n        for (i = 16; i \u003c 64; i++) {\n            u = w[i - 2];\n            t1 = (u \u003e\u003e\u003e 17 | u \u003c\u003c (32 - 17)) ^ (u \u003e\u003e\u003e 19 | u \u003c\u003c (32 - 19)) ^ (u \u003e\u003e\u003e 10);\n            u = w[i - 15];\n            t2 = (u \u003e\u003e\u003e 7 | u \u003c\u003c (32 - 7)) ^ (u \u003e\u003e\u003e 18 | u \u003c\u003c (32 - 18)) ^ (u \u003e\u003e\u003e 3);\n            w[i] = (t1 + w[i - 7] | 0) + (t2 + w[i - 16] | 0);\n        }\n        for (i = 0; i \u003c 64; i++) {\n            t1 = (((((e \u003e\u003e\u003e 6 | e \u003c\u003c (32 - 6)) ^ (e \u003e\u003e\u003e 11 | e \u003c\u003c (32 - 11)) ^\n                (e \u003e\u003e\u003e 25 | e \u003c\u003c (32 - 25))) + ((e \u0026 f) ^ (~e \u0026 g))) | 0) +\n                ((h + ((K[i] + w[i]) | 0)) | 0)) | 0;\n            t2 = (((a \u003e\u003e\u003e 2 | a \u003c\u003c (32 - 2)) ^ (a \u003e\u003e\u003e 13 | a \u003c\u003c (32 - 13)) ^\n                (a \u003e\u003e\u003e 22 | a \u003c\u003c (32 - 22))) + ((a \u0026 b) ^ (a \u0026 c) ^ (b \u0026 c))) | 0;\n            h = g;\n            g = f;\n            f = e;\n            e = (d + t1) | 0;\n            d = c;\n            c = b;\n            b = a;\n            a = (t1 + t2) | 0;\n        }\n        v[0] += a;\n        v[1] += b;\n        v[2] += c;\n        v[3] += d;\n        v[4] += e;\n        v[5] += f;\n        v[6] += g;\n        v[7] += h;\n        pos += 64;\n        len -= 64;\n    }\n    return pos;\n}\n// Hash implements SHA256 hash algorithm.\nvar Hash = /** @class */ (function () {\n    function Hash() {\n        this.digestLength = exports.digestLength;\n        this.blockSize = exports.blockSize;\n        // Note: Int32Array is used instead of Uint32Array for performance reasons.\n        this.state = new Int32Array(8); // hash state\n        this.temp = new Int32Array(64); // temporary state\n        this.buffer = new Uint8Array(128); // buffer for data to hash\n        this.bufferLength = 0; // number of bytes in buffer\n        this.bytesHashed = 0; // number of total bytes hashed\n        this.finished = false; // indicates whether the hash was finalized\n        this.reset();\n    }\n    // Resets hash state making it possible\n    // to re-use this instance to hash other data.\n    Hash.prototype.reset = function () {\n        this.state[0] = 0x6a09e667;\n        this.state[1] = 0xbb67ae85;\n        this.state[2] = 0x3c6ef372;\n        this.state[3] = 0xa54ff53a;\n        this.state[4] = 0x510e527f;\n        this.state[5] = 0x9b05688c;\n        this.state[6] = 0x1f83d9ab;\n        this.state[7] = 0x5be0cd19;\n        this.bufferLength = 0;\n        this.bytesHashed = 0;\n        this.finished = false;\n        return this;\n    };\n    // Cleans internal buffers and re-initializes hash state.\n    Hash.prototype.clean = function () {\n        for (var i = 0; i \u003c this.buffer.length; i++) {\n            this.buffer[i] = 0;\n        }\n        for (var i = 0; i \u003c this.temp.length; i++) {\n            this.temp[i] = 0;\n        }\n        this.reset();\n    };\n    // Updates hash state with the given data.\n    //\n    // Optionally, length of the data can be specified to hash\n    // fewer bytes than data.length.\n    //\n    // Throws error when trying to update already finalized hash:\n    // instance must be reset to use it again.\n    Hash.prototype.update = function (data, dataLength) {\n        if (dataLength === void 0) { dataLength = data.length; }\n        if (this.finished) {\n            throw new Error(\"SHA256: can't update because hash was finished.\");\n        }\n        var dataPos = 0;\n        this.bytesHashed += dataLength;\n        if (this.bufferLength \u003e 0) {\n            while (this.bufferLength \u003c 64 \u0026\u0026 dataLength \u003e 0) {\n                this.buffer[this.bufferLength++] = data[dataPos++];\n                dataLength--;\n            }\n            if (this.bufferLength === 64) {\n                hashBlocks(this.temp, this.state, this.buffer, 0, 64);\n                this.bufferLength = 0;\n            }\n        }\n        if (dataLength \u003e= 64) {\n            dataPos = hashBlocks(this.temp, this.state, data, dataPos, dataLength);\n            dataLength %= 64;\n        }\n        while (dataLength \u003e 0) {\n            this.buffer[this.bufferLength++] = data[dataPos++];\n            dataLength--;\n        }\n        return this;\n    };\n    // Finalizes hash state and puts hash into out.\n    //\n    // If hash was already finalized, puts the same value.\n    Hash.prototype.finish = function (out) {\n        if (!this.finished) {\n            var bytesHashed = this.bytesHashed;\n            var left = this.bufferLength;\n            var bitLenHi = (bytesHashed / 0x20000000) | 0;\n            var bitLenLo = bytesHashed \u003c\u003c 3;\n            var padLength = (bytesHashed % 64 \u003c 56) ? 64 : 128;\n            this.buffer[left] = 0x80;\n            for (var i = left + 1; i \u003c padLength - 8; i++) {\n                this.buffer[i] = 0;\n            }\n            this.buffer[padLength - 8] = (bitLenHi \u003e\u003e\u003e 24) \u0026 0xff;\n            this.buffer[padLength - 7] = (bitLenHi \u003e\u003e\u003e 16) \u0026 0xff;\n            this.buffer[padLength - 6] = (bitLenHi \u003e\u003e\u003e 8) \u0026 0xff;\n            this.buffer[padLength - 5] = (bitLenHi \u003e\u003e\u003e 0) \u0026 0xff;\n            this.buffer[padLength - 4] = (bitLenLo \u003e\u003e\u003e 24) \u0026 0xff;\n            this.buffer[padLength - 3] = (bitLenLo \u003e\u003e\u003e 16) \u0026 0xff;\n            this.buffer[padLength - 2] = (bitLenLo \u003e\u003e\u003e 8) \u0026 0xff;\n            this.buffer[padLength - 1] = (bitLenLo \u003e\u003e\u003e 0) \u0026 0xff;\n            hashBlocks(this.temp, this.state, this.buffer, 0, padLength);\n            this.finished = true;\n        }\n        for (var i = 0; i \u003c 8; i++) {\n            out[i * 4 + 0] = (this.state[i] \u003e\u003e\u003e 24) \u0026 0xff;\n            out[i * 4 + 1] = (this.state[i] \u003e\u003e\u003e 16) \u0026 0xff;\n            out[i * 4 + 2] = (this.state[i] \u003e\u003e\u003e 8) \u0026 0xff;\n            out[i * 4 + 3] = (this.state[i] \u003e\u003e\u003e 0) \u0026 0xff;\n        }\n        return this;\n    };\n    // Returns the final hash digest.\n    Hash.prototype.digest = function () {\n        var out = new Uint8Array(this.digestLength);\n        this.finish(out);\n        return out;\n    };\n    // Internal function for use in HMAC for optimization.\n    Hash.prototype._saveState = function (out) {\n        for (var i = 0; i \u003c this.state.length; i++) {\n            out[i] = this.state[i];\n        }\n    };\n    // Internal function for use in HMAC for optimization.\n    Hash.prototype._restoreState = function (from, bytesHashed) {\n        for (var i = 0; i \u003c this.state.length; i++) {\n            this.state[i] = from[i];\n        }\n        this.bytesHashed = bytesHashed;\n        this.finished = false;\n        this.bufferLength = 0;\n    };\n    return Hash;\n}());\nexports.Hash = Hash;\n// HMAC implements HMAC-SHA256 message authentication algorithm.\nvar HMAC = /** @class */ (function () {\n    function HMAC(key) {\n        this.inner = new Hash();\n        this.outer = new Hash();\n        this.blockSize = this.inner.blockSize;\n        this.digestLength = this.inner.digestLength;\n        var pad = new Uint8Array(this.blockSize);\n        if (key.length \u003e this.blockSize) {\n            (new Hash()).update(key).finish(pad).clean();\n        }\n        else {\n            for (var i = 0; i \u003c key.length; i++) {\n                pad[i] = key[i];\n            }\n        }\n        for (var i = 0; i \u003c pad.length; i++) {\n            pad[i] ^= 0x36;\n        }\n        this.inner.update(pad);\n        for (var i = 0; i \u003c pad.length; i++) {\n            pad[i] ^= 0x36 ^ 0x5c;\n        }\n        this.outer.update(pad);\n        this.istate = new Uint32Array(8);\n        this.ostate = new Uint32Array(8);\n        this.inner._saveState(this.istate);\n        this.outer._saveState(this.ostate);\n        for (var i = 0; i \u003c pad.length; i++) {\n            pad[i] = 0;\n        }\n    }\n    // Returns HMAC state to the state initialized with key\n    // to make it possible to run HMAC over the other data with the same\n    // key without creating a new instance.\n    HMAC.prototype.reset = function () {\n        this.inner._restoreState(this.istate, this.inner.blockSize);\n        this.outer._restoreState(this.ostate, this.outer.blockSize);\n        return this;\n    };\n    // Cleans HMAC state.\n    HMAC.prototype.clean = function () {\n        for (var i = 0; i \u003c this.istate.length; i++) {\n            this.ostate[i] = this.istate[i] = 0;\n        }\n        this.inner.clean();\n        this.outer.clean();\n    };\n    // Updates state with provided data.\n    HMAC.prototype.update = function (data) {\n        this.inner.update(data);\n        return this;\n    };\n    // Finalizes HMAC and puts the result in out.\n    HMAC.prototype.finish = function (out) {\n        if (this.outer.finished) {\n            this.outer.finish(out);\n        }\n        else {\n            this.inner.finish(out);\n            this.outer.update(out, this.digestLength).finish(out);\n        }\n        return this;\n    };\n    // Returns message authentication code.\n    HMAC.prototype.digest = function () {\n        var out = new Uint8Array(this.digestLength);\n        this.finish(out);\n        return out;\n    };\n    return HMAC;\n}());\nexports.HMAC = HMAC;\n// Returns SHA256 hash of data.\nfunction hash(data) {\n    var h = (new Hash()).update(data);\n    var digest = h.digest();\n    h.clean();\n    return digest;\n}\nexports.hash = hash;\n// Function hash is both available as module.hash and as default export.\nexports[\"default\"] = hash;\n// Returns HMAC-SHA256 of data under the key.\nfunction hmac(key, data) {\n    var h = (new HMAC(key)).update(data);\n    var digest = h.digest();\n    h.clean();\n    return digest;\n}\nexports.hmac = hmac;\n// Fills hkdf buffer like this:\n// T(1) = HMAC-Hash(PRK, T(0) | info | 0x01)\nfunction fillBuffer(buffer, hmac, info, counter) {\n    // Counter is a byte value: check if it overflowed.\n    var num = counter[0];\n    if (num === 0) {\n        throw new Error(\"hkdf: cannot expand more\");\n    }\n    // Prepare HMAC instance for new data with old key.\n    hmac.reset();\n    // Hash in previous output if it was generated\n    // (i.e. counter is greater than 1).\n    if (num \u003e 1) {\n        hmac.update(buffer);\n    }\n    // Hash in info if it exists.\n    if (info) {\n        hmac.update(info);\n    }\n    // Hash in the counter.\n    hmac.update(counter);\n    // Output result to buffer and clean HMAC instance.\n    hmac.finish(buffer);\n    // Increment counter inside typed array, this works properly.\n    counter[0]++;\n}\nvar hkdfSalt = new Uint8Array(exports.digestLength); // Filled with zeroes.\nfunction hkdf(key, salt, info, length) {\n    if (salt === void 0) { salt = hkdfSalt; }\n    if (length === void 0) { length = 32; }\n    var counter = new Uint8Array([1]);\n    // HKDF-Extract uses salt as HMAC key, and key as data.\n    var okm = hmac(salt, key);\n    // Initialize HMAC for expanding with extracted key.\n    // Ensure no collisions with `hmac` function.\n    var hmac_ = new HMAC(okm);\n    // Allocate buffer.\n    var buffer = new Uint8Array(hmac_.digestLength);\n    var bufpos = buffer.length;\n    var out = new Uint8Array(length);\n    for (var i = 0; i \u003c length; i++) {\n        if (bufpos === buffer.length) {\n            fillBuffer(buffer, hmac_, info, counter);\n            bufpos = 0;\n        }\n        out[i] = buffer[bufpos++];\n    }\n    hmac_.clean();\n    buffer.fill(0);\n    counter.fill(0);\n    return out;\n}\nexports.hkdf = hkdf;\n// Derives a key from password and salt using PBKDF2-HMAC-SHA256\n// with the given number of iterations.\n//\n// The number of bytes returned is equal to dkLen.\n//\n// (For better security, avoid dkLen greater than hash length - 32 bytes).\nfunction pbkdf2(password, salt, iterations, dkLen) {\n    var prf = new HMAC(password);\n    var len = prf.digestLength;\n    var ctr = new Uint8Array(4);\n    var t = new Uint8Array(len);\n    var u = new Uint8Array(len);\n    var dk = new Uint8Array(dkLen);\n    for (var i = 0; i * len \u003c dkLen; i++) {\n        var c = i + 1;\n        ctr[0] = (c \u003e\u003e\u003e 24) \u0026 0xff;\n        ctr[1] = (c \u003e\u003e\u003e 16) \u0026 0xff;\n        ctr[2] = (c \u003e\u003e\u003e 8) \u0026 0xff;\n        ctr[3] = (c \u003e\u003e\u003e 0) \u0026 0xff;\n        prf.reset();\n        prf.update(salt);\n        prf.update(ctr);\n        prf.finish(u);\n        for (var j = 0; j \u003c len; j++) {\n            t[j] = u[j];\n        }\n        for (var j = 2; j \u003c= iterations; j++) {\n            prf.reset();\n            prf.update(u).finish(u);\n            for (var k = 0; k \u003c len; k++) {\n                t[k] ^= u[k];\n            }\n        }\n        for (var j = 0; j \u003c len \u0026\u0026 i * len + j \u003c dkLen; j++) {\n            dk[i * len + j] = t[j];\n        }\n    }\n    for (var i = 0; i \u003c len; i++) {\n        t[i] = u[i] = 0;\n    }\n    for (var i = 0; i \u003c 4; i++) {\n        ctr[i] = 0;\n    }\n    prf.clean();\n    return dk;\n}\nexports.pbkdf2 = pbkdf2;\n});\n","/**\n * # The next API\n *\n * This module contains new features we are working on which are backwards\n * incompatible with the current API of Automerge. This module will become the\n * API of the next major version of Automerge\n *\n * ## Differences from stable\n *\n * In the stable API text objects are represented using the {@link Text} class.\n * This means you must decide up front whether your string data might need\n * concurrent merges in the future and if you change your mind you have to\n * figure out how to migrate your data. In the unstable API the `Text` class is\n * gone and all `string`s are represented using the text CRDT, allowing for\n * concurrent changes. Modifying a string is done using the {@link splice}\n * function. You can still access the old behaviour of strings which do not\n * support merging behaviour via the {@link RawString} class.\n *\n * This leads to the following differences from `stable`:\n *\n * * There is no `unstable.Text` class, all strings are text objects\n * * Reading strings in an `unstable` document is the same as reading any other\n *   javascript string\n * * To modify strings in an `unstable` document use {@link splice}\n * * The {@link AutomergeValue} type does not include the {@link Text}\n *   class but the  {@link RawString} class is included in the {@link ScalarValue}\n *   type\n *\n * ## CHANGELOG\n * * Rename this module to `next` to reflect our increased confidence in it\n *   and stability commitment to it\n * * Introduce this module to expose the new API which has no `Text` class\n *\n *\n * @module\n */\nexport { Counter, Int, Uint, Float64, } from \"./next_types.js\";\nimport { unstableConflictAt } from \"./conflicts.js\";\nexport { view, free, getHeads, change, changeAt, emptyChange, loadIncremental, saveIncremental, save, merge, getActorId, getLastLocalChange, getChanges, getAllChanges, applyChanges, getHistory, equals, encodeSyncState, decodeSyncState, generateSyncMessage, receiveSyncMessage, hasOurChanges, initSyncState, encodeChange, decodeChange, encodeSyncMessage, decodeSyncMessage, getMissingDeps, dump, toJS, isAutomerge, getObjectId, diff, insertAt, deleteAt, saveSince, initializeWasm, initializeBase64Wasm, wasmInitialized, isWasmInitialized, hasHeads, topoHistoryTraversal, inspectChange, stats, } from \"./stable.js\";\nimport * as stable from \"./stable.js\";\nexport { RawString } from \"./raw_string.js\";\n/** @hidden */\nexport const getBackend = stable.getBackend;\nimport { _is_proxy, _state, _obj, _clear_cache } from \"./internal_state.js\";\n/**\n * Create a new automerge document\n *\n * @typeParam T - The type of value contained in the document. This will be the\n *     type that is passed to the change closure in {@link change}\n * @param _opts - Either an actorId or an {@link InitOptions} (which may\n *     contain an actorId). If this is null the document will be initialised with a\n *     random actor ID\n */\nexport function init(_opts) {\n    const opts = importOpts(_opts);\n    opts.enableTextV2 = true;\n    return stable.init(opts);\n}\n/**\n * Make a full writable copy of an automerge document\n *\n * @remarks\n * Unlike {@link view} this function makes a full copy of the memory backing\n * the document and can thus be passed to {@link change}. It also generates a\n * new actor ID so that changes made in the new document do not create duplicate\n * sequence numbers with respect to the old document. If you need control over\n * the actor ID which is generated you can pass the actor ID as the second\n * argument\n *\n * @typeParam T - The type of the value contained in the document\n * @param doc - The document to clone\n * @param _opts - Either an actor ID to use for the new doc or an {@link InitOptions}\n */\nexport function clone(doc, _opts) {\n    const opts = importOpts(_opts);\n    opts.enableTextV2 = true;\n    return stable.clone(doc, opts);\n}\n/**\n * Create an automerge document from a POJO\n *\n * @param initialState - The initial state which will be copied into the document\n * @typeParam T - The type of the value passed to `from` _and_ the type the resulting document will contain\n * @typeParam actor - The actor ID of the resulting document, if this is null a random actor ID will be used\n *\n * @example\n * ```\n * const doc = automerge.from({\n *     tasks: [\n *         {description: \"feed dogs\", done: false}\n *     ]\n * })\n * ```\n */\nexport function from(initialState, _opts) {\n    const opts = importOpts(_opts);\n    opts.enableTextV2 = true;\n    return stable.from(initialState, opts);\n}\n/**\n * Load an automerge document from a compressed document produce by {@link save}\n *\n * @typeParam T - The type of the value which is contained in the document.\n *                Note that no validation is done to make sure this type is in\n *                fact the type of the contained value so be a bit careful\n * @param data  - The compressed document\n * @param _opts - Either an actor ID or some {@link InitOptions}, if the actor\n *                ID is null a random actor ID will be created\n *\n * Note that `load` will throw an error if passed incomplete content (for\n * example if you are receiving content over the network and don't know if you\n * have the complete document yet). If you need to handle incomplete content use\n * {@link init} followed by {@link loadIncremental}.\n */\nexport function load(data, _opts) {\n    const opts = importOpts(_opts);\n    opts.enableTextV2 = true;\n    if (opts.patchCallback) {\n        return stable.loadIncremental(stable.init(opts), data);\n    }\n    else {\n        return stable.load(data, opts);\n    }\n}\nfunction importOpts(_actor) {\n    if (typeof _actor === \"object\") {\n        return _actor;\n    }\n    else {\n        return { actor: _actor };\n    }\n}\nfunction cursorToIndex(state, value, index) {\n    if (typeof index == \"string\") {\n        if (/^[0-9]+@[0-9a-zA-z]+$/.test(index)) {\n            return state.handle.getCursorPosition(value, index);\n        }\n        else {\n            throw new RangeError(\"index must be a number or cursor\");\n        }\n    }\n    else {\n        return index;\n    }\n}\n/**\n * Modify a string\n *\n * @typeParam T - The type of the value contained in the document\n * @param doc - The document to modify\n * @param path - The path to the string to modify\n * @param index - The position (as a {@link Cursor} or index) to edit.\n *   If a cursor is used then the edit happens such that the cursor will\n *   now point to the end of the newText, so you can continue to reuse\n *   the same cursor for multiple calls to splice.\n * @param del - The number of code units to delete, a positive number\n *   deletes N characters after the cursor, a negative number deletes\n *   N characters before the cursor.\n * @param newText - The string to insert (if any).\n */\nexport function splice(doc, path, index, del, newText) {\n    const objPath = absoluteObjPath(doc, path, \"splice\");\n    if (!_is_proxy(doc)) {\n        throw new RangeError(\"object cannot be modified outside of a change block\");\n    }\n    const state = _state(doc, false);\n    _clear_cache(doc);\n    index = cursorToIndex(state, objPath, index);\n    try {\n        return state.handle.splice(objPath, index, del, newText);\n    }\n    catch (e) {\n        throw new RangeError(`Cannot splice: ${e}`);\n    }\n}\n/**\n * Update the value of a string\n *\n * @typeParam T - The type of the value contained in the document\n * @param doc - The document to modify\n * @param path - The path to the string to modify\n * @param newText - The new text to update the value to\n *\n * @remarks\n * This will calculate a diff between the current value and the new value and\n * then convert that diff into calls to {@link splice}. This will produce results\n * which don't merge as well as directly capturing the user input actions, but\n * sometimes it's not possible to capture user input and this is the best you\n * can do.\n *\n * This is an experimental API and may change in the future.\n *\n * @beta\n */\nexport function updateText(doc, path, newText) {\n    const objPath = absoluteObjPath(doc, path, \"updateText\");\n    if (!_is_proxy(doc)) {\n        throw new RangeError(\"object cannot be modified outside of a change block\");\n    }\n    const state = _state(doc, false);\n    _clear_cache(doc);\n    try {\n        return state.handle.updateText(objPath, newText);\n    }\n    catch (e) {\n        throw new RangeError(`Cannot updateText: ${e}`);\n    }\n}\n/**\n * Return the text + block markers at a given path\n *\n * @remarks\n * Rich text in automerge is represented as a sequence of characters with block\n * markers appearing inline with the text, and inline formatting spans overlaid\n * on the whole sequence. Block markers are normal automerge maps, but they are\n * only visible via either the {@link block} function or the {@link spans}\n * function. This function returns the current state of the spans\n */\nexport function spans(doc, path) {\n    const state = _state(doc, false);\n    const objPath = absoluteObjPath(doc, path, \"spans\");\n    try {\n        return state.handle.spans(objPath, state.heads);\n    }\n    catch (e) {\n        throw new RangeError(`Cannot splice: ${e}`);\n    }\n}\n/**\n * Get the block marker at the given index\n */\nexport function block(doc, path, index) {\n    const objPath = absoluteObjPath(doc, path, \"splitBlock\");\n    const state = _state(doc, false);\n    index = cursorToIndex(state, objPath, index);\n    try {\n        return state.handle.getBlock(objPath, index);\n    }\n    catch (e) {\n        throw new RangeError(`Cannot get block: ${e}`);\n    }\n}\n/**\n * Insert a new block marker at the given index\n */\nexport function splitBlock(doc, path, index, block) {\n    if (!_is_proxy(doc)) {\n        throw new RangeError(\"object cannot be modified outside of a change block\");\n    }\n    const objPath = absoluteObjPath(doc, path, \"splitBlock\");\n    const state = _state(doc, false);\n    _clear_cache(doc);\n    index = cursorToIndex(state, objPath, index);\n    try {\n        state.handle.splitBlock(objPath, index, block);\n    }\n    catch (e) {\n        throw new RangeError(`Cannot splice: ${e}`);\n    }\n}\n/**\n * Delete the block marker at the given index\n */\nexport function joinBlock(doc, path, index) {\n    if (!_is_proxy(doc)) {\n        throw new RangeError(\"object cannot be modified outside of a change block\");\n    }\n    const objPath = absoluteObjPath(doc, path, \"joinBlock\");\n    const state = _state(doc, false);\n    _clear_cache(doc);\n    index = cursorToIndex(state, objPath, index);\n    try {\n        state.handle.joinBlock(objPath, index);\n    }\n    catch (e) {\n        throw new RangeError(`Cannot joinBlock: ${e}`);\n    }\n}\n/**\n * Update the block marker at the given index\n */\nexport function updateBlock(doc, path, index, block) {\n    if (!_is_proxy(doc)) {\n        throw new RangeError(\"object cannot be modified outside of a change block\");\n    }\n    const objPath = absoluteObjPath(doc, path, \"updateBlock\");\n    const state = _state(doc, false);\n    _clear_cache(doc);\n    index = cursorToIndex(state, objPath, index);\n    try {\n        state.handle.updateBlock(objPath, index, block);\n    }\n    catch (e) {\n        throw new RangeError(`Cannot updateBlock: ${e}`);\n    }\n}\n/**\n * Update the spans at the given path\n *\n * @remarks\n * Like {@link updateText} this will diff `newSpans` against the current state\n * of the text at `path` and perform a reasonably minimal number of operations\n * required to update the spans to the new state.\n */\nexport function updateSpans(doc, path, newSpans) {\n    if (!_is_proxy(doc)) {\n        throw new RangeError(\"object cannot be modified outside of a change block\");\n    }\n    const objPath = absoluteObjPath(doc, path, \"updateSpans\");\n    const state = _state(doc, false);\n    _clear_cache(doc);\n    try {\n        state.handle.updateSpans(objPath, newSpans);\n    }\n    catch (e) {\n        throw new RangeError(`Cannot updateBlock: ${e}`);\n    }\n}\n/**\n * Returns a cursor for the given position in a string.\n *\n * @remarks\n * A cursor represents a relative position, \"before character X\",\n * rather than an absolute position. As the document is edited, the\n * cursor remains stable relative to its context, just as you'd expect\n * from a cursor in a concurrent text editor.\n *\n * The string representation is shareable, and so you can use this both\n * to edit the document yourself (using {@link splice}) or to share multiple\n * collaborator's current cursor positions over the network.\n *\n * @typeParam T - The type of the value contained in the document\n * @param doc - The document\n * @param path - The path to the string\n * @param index - The current index of the position of the cursor\n */\nexport function getCursor(doc, path, index) {\n    const objPath = absoluteObjPath(doc, path, \"getCursor\");\n    const state = _state(doc, false);\n    try {\n        return state.handle.getCursor(objPath, index);\n    }\n    catch (e) {\n        throw new RangeError(`Cannot getCursor: ${e}`);\n    }\n}\n/**\n * Returns the current index of the cursor.\n *\n * @typeParam T - The type of the value contained in the document\n *\n * @param doc - The document\n * @param path - The path to the string\n * @param index - The cursor\n */\nexport function getCursorPosition(doc, path, cursor) {\n    const objPath = absoluteObjPath(doc, path, \"getCursorPosition\");\n    const state = _state(doc, false);\n    try {\n        return state.handle.getCursorPosition(objPath, cursor);\n    }\n    catch (e) {\n        throw new RangeError(`Cannot getCursorPosition: ${e}`);\n    }\n}\nexport function mark(doc, path, range, name, value) {\n    const objPath = absoluteObjPath(doc, path, \"mark\");\n    if (!_is_proxy(doc)) {\n        throw new RangeError(\"object cannot be modified outside of a change block\");\n    }\n    const state = _state(doc, false);\n    try {\n        return state.handle.mark(objPath, range, name, value);\n    }\n    catch (e) {\n        throw new RangeError(`Cannot mark: ${e}`);\n    }\n}\nexport function unmark(doc, path, range, name) {\n    const objPath = absoluteObjPath(doc, path, \"unmark\");\n    if (!_is_proxy(doc)) {\n        throw new RangeError(\"object cannot be modified outside of a change block\");\n    }\n    const state = _state(doc, false);\n    try {\n        return state.handle.unmark(objPath, range, name);\n    }\n    catch (e) {\n        throw new RangeError(`Cannot unmark: ${e}`);\n    }\n}\nexport function marks(doc, path) {\n    const objPath = absoluteObjPath(doc, path, \"marks\");\n    const state = _state(doc, false);\n    try {\n        return state.handle.marks(objPath);\n    }\n    catch (e) {\n        throw new RangeError(`Cannot call marks(): ${e}`);\n    }\n}\nexport function marksAt(doc, path, index) {\n    const objPath = absoluteObjPath(doc, path, \"marksAt\");\n    const state = _state(doc, false);\n    try {\n        return state.handle.marksAt(objPath, index);\n    }\n    catch (e) {\n        throw new RangeError(`Cannot call marksAt(): ${e}`);\n    }\n}\n/**\n * Get the conflicts associated with a property\n *\n * The values of properties in a map in automerge can be conflicted if there\n * are concurrent \"put\" operations to the same key. Automerge chooses one value\n * arbitrarily (but deterministically, any two nodes who have the same set of\n * changes will choose the same value) from the set of conflicting values to\n * present as the value of the key.\n *\n * Sometimes you may want to examine these conflicts, in this case you can use\n * {@link getConflicts} to get the conflicts for the key.\n *\n * @example\n * ```\n * import * as automerge from \"@automerge/automerge\"\n *\n * type Profile = {\n *     pets: Array\u003c{name: string, type: string}\u003e\n * }\n *\n * let doc1 = automerge.init\u003cProfile\u003e(\"aaaa\")\n * doc1 = automerge.change(doc1, d =\u003e {\n *     d.pets = [{name: \"Lassie\", type: \"dog\"}]\n * })\n * let doc2 = automerge.init\u003cProfile\u003e(\"bbbb\")\n * doc2 = automerge.merge(doc2, automerge.clone(doc1))\n *\n * doc2 = automerge.change(doc2, d =\u003e {\n *     d.pets[0].name = \"Beethoven\"\n * })\n *\n * doc1 = automerge.change(doc1, d =\u003e {\n *     d.pets[0].name = \"Babe\"\n * })\n *\n * const doc3 = automerge.merge(doc1, doc2)\n *\n * // Note that here we pass `doc3.pets`, not `doc3`\n * let conflicts = automerge.getConflicts(doc3.pets[0], \"name\")\n *\n * // The two conflicting values are the keys of the conflicts object\n * assert.deepEqual(Object.values(conflicts), [\"Babe\", \"Beethoven\"])\n * ```\n */\nexport function getConflicts(doc, prop) {\n    const state = _state(doc, false);\n    if (!state.textV2) {\n        throw new Error(\"use getConflicts for a stable document\");\n    }\n    const objectId = _obj(doc);\n    if (objectId != null) {\n        return unstableConflictAt(state.handle, objectId, prop);\n    }\n    else {\n        return undefined;\n    }\n}\nfunction absoluteObjPath(doc, path, functionName) {\n    path = path.slice();\n    const objectId = _obj(doc);\n    if (!objectId) {\n        throw new RangeError(`invalid object for ${functionName}`);\n    }\n    path.unshift(objectId);\n    return path.join(\"/\");\n}\n","// Properties of the document root object\nexport const STATE = Symbol.for(\"_am_meta\"); // symbol used to hide application metadata on automerge objects\nexport const TRACE = Symbol.for(\"_am_trace\"); // used for debugging\nexport const OBJECT_ID = Symbol.for(\"_am_objectId\"); // symbol used to hide the object id on automerge objects\nexport const IS_PROXY = Symbol.for(\"_am_isProxy\"); // symbol used to test if the document is a proxy object\nexport const CLEAR_CACHE = Symbol.for(\"_am_clearCache\"); // symbol used to tell a proxy object to clear its cache\nexport const UINT = Symbol.for(\"_am_uint\");\nexport const INT = Symbol.for(\"_am_int\");\nexport const F64 = Symbol.for(\"_am_f64\");\nexport const COUNTER = Symbol.for(\"_am_counter\");\nexport const TEXT = Symbol.for(\"_am_text\");\n","import { TEXT, STATE } from \"./constants.js\";\nexport class Text {\n    constructor(text) {\n        if (typeof text === \"string\") {\n            this.elems = [...text];\n        }\n        else if (Array.isArray(text)) {\n            this.elems = text;\n        }\n        else if (text === undefined) {\n            this.elems = [];\n        }\n        else {\n            throw new TypeError(`Unsupported initial value for Text: ${text}`);\n        }\n        Reflect.defineProperty(this, TEXT, { value: true });\n    }\n    get length() {\n        return this.elems.length;\n    }\n    //eslint-disable-next-line @typescript-eslint/no-explicit-any\n    get(index) {\n        return this.elems[index];\n    }\n    /**\n     * Iterates over the text elements character by character, including any\n     * inline objects.\n     */\n    [Symbol.iterator]() {\n        const elems = this.elems;\n        let index = -1;\n        return {\n            next() {\n                index += 1;\n                if (index \u003c elems.length) {\n                    return { done: false, value: elems[index] };\n                }\n                else {\n                    return { done: true };\n                }\n            },\n        };\n    }\n    /**\n     * Returns the content of the Text object as a simple string, ignoring any\n     * non-character elements.\n     */\n    toString() {\n        if (!this.str) {\n            // Concatting to a string is faster than creating an array and then\n            // .join()ing for small (\u003c100KB) arrays.\n            // https://jsperf.com/join-vs-loop-w-type-test\n            this.str = \"\";\n            for (const elem of this.elems) {\n                if (typeof elem === \"string\")\n                    this.str += elem;\n                else\n                    this.str += \"\\uFFFC\";\n            }\n        }\n        return this.str;\n    }\n    /**\n     * Returns the content of the Text object as a sequence of strings,\n     * interleaved with non-character elements.\n     *\n     * For example, the value `['a', 'b', {x: 3}, 'c', 'd']` has spans:\n     * `=\u003e ['ab', {x: 3}, 'cd']`\n     */\n    toSpans() {\n        if (!this.spans) {\n            this.spans = [];\n            let chars = \"\";\n            for (const elem of this.elems) {\n                if (typeof elem === \"string\") {\n                    chars += elem;\n                }\n                else {\n                    if (chars.length \u003e 0) {\n                        this.spans.push(chars);\n                        chars = \"\";\n                    }\n                    this.spans.push(elem);\n                }\n            }\n            if (chars.length \u003e 0) {\n                this.spans.push(chars);\n            }\n        }\n        return this.spans;\n    }\n    /**\n     * Returns the content of the Text object as a simple string, so that the\n     * JSON serialization of an Automerge document represents text nicely.\n     */\n    toJSON() {\n        return this.toString();\n    }\n    /**\n     * Updates the list item at position `index` to a new value `value`.\n     */\n    set(index, value) {\n        if (this[STATE]) {\n            throw new RangeError(\"object cannot be modified outside of a change block\");\n        }\n        this.elems[index] = value;\n    }\n    /**\n     * Inserts new list items `values` starting at position `index`.\n     */\n    insertAt(index, ...values) {\n        if (this[STATE]) {\n            throw new RangeError(\"object cannot be modified outside of a change block\");\n        }\n        if (values.every(v =\u003e typeof v === \"string\")) {\n            this.elems.splice(index, 0, ...values.join(\"\"));\n        }\n        else {\n            this.elems.splice(index, 0, ...values);\n        }\n    }\n    /**\n     * Deletes `numDelete` list items starting at position `index`.\n     * if `numDelete` is not given, one item is deleted.\n     */\n    deleteAt(index, numDelete = 1) {\n        if (this[STATE]) {\n            throw new RangeError(\"object cannot be modified outside of a change block\");\n        }\n        this.elems.splice(index, numDelete);\n    }\n    map(callback) {\n        this.elems.map(callback);\n    }\n    lastIndexOf(searchElement, fromIndex) {\n        this.elems.lastIndexOf(searchElement, fromIndex);\n    }\n    concat(other) {\n        return new Text(this.elems.concat(other.elems));\n    }\n    every(test) {\n        return this.elems.every(test);\n    }\n    filter(test) {\n        return new Text(this.elems.filter(test));\n    }\n    find(test) {\n        return this.elems.find(test);\n    }\n    findIndex(test) {\n        return this.elems.findIndex(test);\n    }\n    forEach(f) {\n        this.elems.forEach(f);\n    }\n    includes(elem) {\n        return this.elems.includes(elem);\n    }\n    indexOf(elem) {\n        return this.elems.indexOf(elem);\n    }\n    join(sep) {\n        return this.elems.join(sep);\n    }\n    reduce(f) {\n        this.elems.reduce(f);\n    }\n    reduceRight(f) {\n        this.elems.reduceRight(f);\n    }\n    slice(start, end) {\n        return new Text(this.elems.slice(start, end));\n    }\n    some(test) {\n        return this.elems.some(test);\n    }\n    toLocaleString() {\n        this.toString();\n    }\n}\n","import { COUNTER } from \"./constants.js\";\n/**\n * The most basic CRDT: an integer value that can be changed only by\n * incrementing and decrementing. Since addition of integers is commutative,\n * the value trivially converges.\n */\nexport class Counter {\n    constructor(value) {\n        this.value = value || 0;\n        Reflect.defineProperty(this, COUNTER, { value: true });\n    }\n    /**\n     * A peculiar JavaScript language feature from its early days: if the object\n     * `x` has a `valueOf()` method that returns a number, you can use numerical\n     * operators on the object `x` directly, such as `x + 1` or `x \u003c 4`.\n     * This method is also called when coercing a value to a string by\n     * concatenating it with another string, as in `x + ''`.\n     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/valueOf\n     */\n    valueOf() {\n        return this.value;\n    }\n    /**\n     * Returns the counter value as a decimal string. If `x` is a counter object,\n     * this method is called e.g. when you do `['value: ', x].join('')` or when\n     * you use string interpolation: `value: ${x}`.\n     */\n    toString() {\n        return this.valueOf().toString();\n    }\n    /**\n     * Returns the counter value, so that a JSON serialization of an Automerge\n     * document represents the counter simply as an integer.\n     */\n    toJSON() {\n        return this.value;\n    }\n    /**\n     * Increases the value of the counter by `delta`. If `delta` is not given,\n     * increases the value of the counter by 1.\n     *\n     * Will throw an error if used outside of a change callback.\n     */\n    increment(_delta) {\n        throw new Error(\"Counters should not be incremented outside of a change callback\");\n    }\n    /**\n     * Decreases the value of the counter by `delta`. If `delta` is not given,\n     * decreases the value of the counter by 1.\n     *\n     * Will throw an error if used outside of a change callback.\n     */\n    decrement(_delta) {\n        throw new Error(\"Counters should not be decremented outside of a change callback\");\n    }\n}\n/**\n * An instance of this class is used when a counter is accessed within a change\n * callback.\n */\nclass WriteableCounter extends Counter {\n    constructor(value, context, path, objectId, key) {\n        super(value);\n        this.context = context;\n        this.path = path;\n        this.objectId = objectId;\n        this.key = key;\n    }\n    /**\n     * Increases the value of the counter by `delta`. If `delta` is not given,\n     * increases the value of the counter by 1.\n     */\n    increment(delta) {\n        delta = typeof delta === \"number\" ? delta : 1;\n        this.context.increment(this.objectId, this.key, delta);\n        this.value += delta;\n        return this.value;\n    }\n    /**\n     * Decreases the value of the counter by `delta`. If `delta` is not given,\n     * decreases the value of the counter by 1.\n     */\n    decrement(delta) {\n        return this.increment(typeof delta === \"number\" ? -delta : -1);\n    }\n}\n/**\n * Returns an instance of `WriteableCounter` for use in a change callback.\n * `context` is the proxy context that keeps track of the mutations.\n * `objectId` is the ID of the object containing the counter, and `key` is\n * the property name (key in map, or index in list) where the counter is\n * located.\n */\nexport function getWriteableCounter(value, context, path, objectId, key) {\n    return new WriteableCounter(value, context, path, objectId, key);\n}\n//module.exports = { Counter, getWriteableCounter }\n","// Convenience classes to allow users to strictly specify the number type they want\nimport { INT, UINT, F64 } from \"./constants.js\";\nexport class Int {\n    constructor(value) {\n        if (!(Number.isInteger(value) \u0026\u0026\n            value \u003c= Number.MAX_SAFE_INTEGER \u0026\u0026\n            value \u003e= Number.MIN_SAFE_INTEGER)) {\n            throw new RangeError(`Value ${value} cannot be a uint`);\n        }\n        this.value = value;\n        Reflect.defineProperty(this, INT, { value: true });\n        Object.freeze(this);\n    }\n}\nexport class Uint {\n    constructor(value) {\n        if (!(Number.isInteger(value) \u0026\u0026\n            value \u003c= Number.MAX_SAFE_INTEGER \u0026\u0026\n            value \u003e= 0)) {\n            throw new RangeError(`Value ${value} cannot be a uint`);\n        }\n        this.value = value;\n        Reflect.defineProperty(this, UINT, { value: true });\n        Object.freeze(this);\n    }\n}\nexport class Float64 {\n    constructor(value) {\n        if (typeof value !== \"number\") {\n            throw new RangeError(`Value ${value} cannot be a float64`);\n        }\n        this.value = value || 0.0;\n        Reflect.defineProperty(this, F64, { value: true });\n        Object.freeze(this);\n    }\n}\n","export class RawString {\n    constructor(val) {\n        this.val = val;\n    }\n    /**\n     * Returns the content of the RawString object as a simple string\n     */\n    toString() {\n        return this.val;\n    }\n    toJSON() {\n        return this.val;\n    }\n}\n","/* eslint-disable  @typescript-eslint/no-explicit-any */\nimport { Text } from \"./text.js\";\nimport { getWriteableCounter } from \"./counter.js\";\nimport { STATE, TRACE, IS_PROXY, OBJECT_ID, CLEAR_CACHE, COUNTER, INT, UINT, F64, } from \"./constants.js\";\nimport { RawString } from \"./raw_string.js\";\nfunction parseListIndex(key) {\n    if (typeof key === \"string\" \u0026\u0026 /^[0-9]+$/.test(key))\n        key = parseInt(key, 10);\n    if (typeof key !== \"number\") {\n        return key;\n    }\n    if (key \u003c 0 || isNaN(key) || key === Infinity || key === -Infinity) {\n        throw new RangeError(\"A list index must be positive, but you passed \" + key);\n    }\n    return key;\n}\nfunction valueAt(target, prop) {\n    const { context, objectId, path, textV2 } = target;\n    const value = context.getWithType(objectId, prop);\n    if (value === null) {\n        return;\n    }\n    const datatype = value[0];\n    const val = value[1];\n    switch (datatype) {\n        case undefined:\n            return;\n        case \"map\":\n            return mapProxy(context, val, textV2, [...path, prop]);\n        case \"list\":\n            return listProxy(context, val, textV2, [...path, prop]);\n        case \"text\":\n            if (textV2) {\n                return context.text(val);\n            }\n            else {\n                return textProxy(context, val, [\n                    ...path,\n                    prop,\n                ]);\n            }\n        case \"str\":\n            return val;\n        case \"uint\":\n            return val;\n        case \"int\":\n            return val;\n        case \"f64\":\n            return val;\n        case \"boolean\":\n            return val;\n        case \"null\":\n            return null;\n        case \"bytes\":\n            return val;\n        case \"timestamp\":\n            return val;\n        case \"counter\": {\n            const counter = getWriteableCounter(val, context, path, objectId, prop);\n            return counter;\n        }\n        default:\n            throw RangeError(`datatype ${datatype} unimplemented`);\n    }\n}\nfunction import_value(value, textV2, path, context) {\n    const type = typeof value;\n    switch (type) {\n        case \"object\":\n            if (value == null) {\n                return [null, \"null\"];\n            }\n            else if (value[UINT]) {\n                return [value.value, \"uint\"];\n            }\n            else if (value[INT]) {\n                return [value.value, \"int\"];\n            }\n            else if (value[F64]) {\n                return [value.value, \"f64\"];\n            }\n            else if (value[COUNTER]) {\n                return [value.value, \"counter\"];\n            }\n            else if (value instanceof Date) {\n                return [value.getTime(), \"timestamp\"];\n            }\n            else if (value instanceof RawString) {\n                return [value.toString(), \"str\"];\n            }\n            else if (value instanceof Text) {\n                return [value, \"text\"];\n            }\n            else if (value instanceof Uint8Array) {\n                return [value, \"bytes\"];\n            }\n            else if (value instanceof Array) {\n                return [value, \"list\"];\n            }\n            else if (Object.prototype.toString.call(value) === \"[object Object]\") {\n                return [value, \"map\"];\n            }\n            else if (isSameDocument(value, context)) {\n                throw new RangeError(\"Cannot create a reference to an existing document object\");\n            }\n            else {\n                throw new RangeError(`Cannot assign unknown object: ${value}`);\n            }\n        case \"boolean\":\n            return [value, \"boolean\"];\n        case \"number\":\n            if (Number.isInteger(value)) {\n                return [value, \"int\"];\n            }\n            else {\n                return [value, \"f64\"];\n            }\n        case \"string\":\n            if (textV2) {\n                return [value, \"text\"];\n            }\n            else {\n                return [value, \"str\"];\n            }\n        case \"undefined\":\n            throw new RangeError([\n                `Cannot assign undefined value at ${printPath(path)}, `,\n                \"because `undefined` is not a valid JSON data type. \",\n                \"You might consider setting the property's value to `null`, \",\n                \"or using `delete` to remove it altogether.\",\n            ].join(\"\"));\n        default:\n            throw new RangeError([\n                `Cannot assign ${type} value at ${printPath(path)}. `,\n                `All JSON primitive datatypes (object, array, string, number, boolean, null) `,\n                `are supported in an Automerge document; ${type} values are not. `,\n            ].join(\"\"));\n    }\n}\n// When we assign a value to a property in a proxy we recursively walk through\n// the value we are assigning and copy it into the document. This is generally\n// desirable behaviour. However, a very common bug is to accidentally assign a\n// value which is already in the document to another key within the same\n// document, this often leads to surprising behaviour where users expected to\n// _move_ the object, but it is instead copied. To avoid this we check if the\n// value is from the same document and if it is we throw an error, this means\n// we require an explicit Object.assign call to copy the object, thus avoiding\n// the footgun\nfunction isSameDocument(val, context) {\n    var _b, _c;\n    // Date is technically an object, but immutable, so allowing people to assign\n    // a date from one place in the document to another place in the document is\n    // not likely to be a bug\n    if (val instanceof Date) {\n        return false;\n    }\n    // this depends on __wbg_ptr being the wasm pointer\n    // a new version of wasm-bindgen will break this\n    // but the tests should expose the break\n    if (val \u0026\u0026 ((_c = (_b = val[STATE]) === null || _b === void 0 ? void 0 : _b.handle) === null || _c === void 0 ? void 0 : _c.__wbg_ptr) === context.__wbg_ptr) {\n        return true;\n    }\n    return false;\n}\nconst MapHandler = {\n    get(target, key) {\n        const { context, objectId, cache } = target;\n        if (key === Symbol.toStringTag) {\n            return target[Symbol.toStringTag];\n        }\n        if (key === OBJECT_ID)\n            return objectId;\n        if (key === IS_PROXY)\n            return true;\n        if (key === TRACE)\n            return target.trace;\n        if (key === STATE)\n            return { handle: context, textV2: target.textV2 };\n        if (!cache[key]) {\n            cache[key] = valueAt(target, key);\n        }\n        return cache[key];\n    },\n    set(target, key, val) {\n        const { context, objectId, path, textV2 } = target;\n        target.cache = {}; // reset cache on set\n        if (isSameDocument(val, context)) {\n            throw new RangeError(\"Cannot create a reference to an existing document object\");\n        }\n        if (key === TRACE) {\n            target.trace = val;\n            return true;\n        }\n        if (key === CLEAR_CACHE) {\n            return true;\n        }\n        const [value, datatype] = import_value(val, textV2, [...path, key], context);\n        switch (datatype) {\n            case \"list\": {\n                const list = context.putObject(objectId, key, []);\n                const proxyList = listProxy(context, list, textV2, [...path, key]);\n                for (let i = 0; i \u003c value.length; i++) {\n                    proxyList[i] = value[i];\n                }\n                break;\n            }\n            case \"text\": {\n                if (textV2) {\n                    assertString(value);\n                    context.putObject(objectId, key, value);\n                }\n                else {\n                    assertText(value);\n                    const text = context.putObject(objectId, key, \"\");\n                    const proxyText = textProxy(context, text, [...path, key]);\n                    proxyText.splice(0, 0, ...value);\n                }\n                break;\n            }\n            case \"map\": {\n                const map = context.putObject(objectId, key, {});\n                const proxyMap = mapProxy(context, map, textV2, [...path, key]);\n                for (const key in value) {\n                    proxyMap[key] = value[key];\n                }\n                break;\n            }\n            default:\n                context.put(objectId, key, value, datatype);\n        }\n        return true;\n    },\n    deleteProperty(target, key) {\n        const { context, objectId } = target;\n        target.cache = {}; // reset cache on delete\n        context.delete(objectId, key);\n        return true;\n    },\n    has(target, key) {\n        const value = this.get(target, key);\n        return value !== undefined;\n    },\n    getOwnPropertyDescriptor(target, key) {\n        // const { context, objectId } = target\n        const value = this.get(target, key);\n        if (typeof value !== \"undefined\") {\n            return {\n                configurable: true,\n                enumerable: true,\n                value,\n            };\n        }\n    },\n    ownKeys(target) {\n        const { context, objectId } = target;\n        // FIXME - this is a tmp workaround until fix the dupe key bug in keys()\n        const keys = context.keys(objectId);\n        return [...new Set(keys)];\n    },\n};\nconst ListHandler = {\n    get(target, index) {\n        const { context, objectId } = target;\n        index = parseListIndex(index);\n        if (index === Symbol.hasInstance) {\n            return (instance) =\u003e {\n                return Array.isArray(instance);\n            };\n        }\n        if (index === Symbol.toStringTag) {\n            return target[Symbol.toStringTag];\n        }\n        if (index === OBJECT_ID)\n            return objectId;\n        if (index === IS_PROXY)\n            return true;\n        if (index === TRACE)\n            return target.trace;\n        if (index === STATE)\n            return { handle: context };\n        if (index === \"length\")\n            return context.length(objectId);\n        if (typeof index === \"number\") {\n            return valueAt(target, index);\n        }\n        else {\n            return listMethods(target)[index];\n        }\n    },\n    set(target, index, val) {\n        const { context, objectId, path, textV2 } = target;\n        index = parseListIndex(index);\n        if (isSameDocument(val, context)) {\n            throw new RangeError(\"Cannot create a reference to an existing document object\");\n        }\n        if (index === CLEAR_CACHE) {\n            return true;\n        }\n        if (index === TRACE) {\n            target.trace = val;\n            return true;\n        }\n        if (typeof index == \"string\") {\n            throw new RangeError(\"list index must be a number\");\n        }\n        const [value, datatype] = import_value(val, textV2, [...path, index], context);\n        switch (datatype) {\n            case \"list\": {\n                let list;\n                if (index \u003e= context.length(objectId)) {\n                    list = context.insertObject(objectId, index, []);\n                }\n                else {\n                    list = context.putObject(objectId, index, []);\n                }\n                const proxyList = listProxy(context, list, textV2, [...path, index]);\n                proxyList.splice(0, 0, ...value);\n                break;\n            }\n            case \"text\": {\n                if (textV2) {\n                    assertString(value);\n                    if (index \u003e= context.length(objectId)) {\n                        context.insertObject(objectId, index, value);\n                    }\n                    else {\n                        context.putObject(objectId, index, value);\n                    }\n                }\n                else {\n                    let text;\n                    assertText(value);\n                    if (index \u003e= context.length(objectId)) {\n                        text = context.insertObject(objectId, index, \"\");\n                    }\n                    else {\n                        text = context.putObject(objectId, index, \"\");\n                    }\n                    const proxyText = textProxy(context, text, [...path, index]);\n                    proxyText.splice(0, 0, ...value);\n                }\n                break;\n            }\n            case \"map\": {\n                let map;\n                if (index \u003e= context.length(objectId)) {\n                    map = context.insertObject(objectId, index, {});\n                }\n                else {\n                    map = context.putObject(objectId, index, {});\n                }\n                const proxyMap = mapProxy(context, map, textV2, [...path, index]);\n                for (const key in value) {\n                    proxyMap[key] = value[key];\n                }\n                break;\n            }\n            default:\n                if (index \u003e= context.length(objectId)) {\n                    context.insert(objectId, index, value, datatype);\n                }\n                else {\n                    context.put(objectId, index, value, datatype);\n                }\n        }\n        return true;\n    },\n    deleteProperty(target, index) {\n        const { context, objectId } = target;\n        index = parseListIndex(index);\n        const elem = context.get(objectId, index);\n        if (elem != null \u0026\u0026 elem[0] == \"counter\") {\n            throw new TypeError(\"Unsupported operation: deleting a counter from a list\");\n        }\n        context.delete(objectId, index);\n        return true;\n    },\n    has(target, index) {\n        const { context, objectId } = target;\n        index = parseListIndex(index);\n        if (typeof index === \"number\") {\n            return index \u003c context.length(objectId);\n        }\n        return index === \"length\";\n    },\n    getOwnPropertyDescriptor(target, index) {\n        const { context, objectId } = target;\n        if (index === \"length\")\n            return { writable: true, value: context.length(objectId) };\n        if (index === OBJECT_ID)\n            return { configurable: false, enumerable: false, value: objectId };\n        index = parseListIndex(index);\n        const value = valueAt(target, index);\n        return { configurable: true, enumerable: true, value };\n    },\n    getPrototypeOf(target) {\n        return Object.getPrototypeOf(target);\n    },\n    ownKeys( /*target*/) {\n        const keys = [];\n        // uncommenting this causes assert.deepEqual() to fail when comparing to a pojo array\n        // but not uncommenting it causes for (i in list) {} to not enumerate values properly\n        //const {context, objectId } = target\n        //for (let i = 0; i \u003c target.context.length(objectId); i++) { keys.push(i.toString()) }\n        keys.push(\"length\");\n        return keys;\n    },\n};\nconst TextHandler = Object.assign({}, ListHandler, {\n    get(target, index) {\n        const { context, objectId } = target;\n        index = parseListIndex(index);\n        if (index === Symbol.hasInstance) {\n            return (instance) =\u003e {\n                return Array.isArray(instance);\n            };\n        }\n        if (index === Symbol.toStringTag) {\n            return target[Symbol.toStringTag];\n        }\n        if (index === OBJECT_ID)\n            return objectId;\n        if (index === IS_PROXY)\n            return true;\n        if (index === TRACE)\n            return target.trace;\n        if (index === STATE)\n            return { handle: context };\n        if (index === \"length\")\n            return context.length(objectId);\n        if (typeof index === \"number\") {\n            return valueAt(target, index);\n        }\n        else {\n            return textMethods(target)[index] || listMethods(target)[index];\n        }\n    },\n    getPrototypeOf( /*target*/) {\n        return Object.getPrototypeOf(new Text());\n    },\n});\nexport function mapProxy(context, objectId, textV2, path) {\n    const target = {\n        context,\n        objectId,\n        path: path || [],\n        cache: {},\n        textV2,\n    };\n    const proxied = {};\n    Object.assign(proxied, target);\n    const result = new Proxy(proxied, MapHandler);\n    // conversion through unknown is necessary because the types are so different\n    return result;\n}\nexport function listProxy(context, objectId, textV2, path) {\n    const target = {\n        context,\n        objectId,\n        path: path || [],\n        cache: {},\n        textV2,\n    };\n    const proxied = [];\n    Object.assign(proxied, target);\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    return new Proxy(proxied, ListHandler);\n}\nexport function textProxy(context, objectId, path) {\n    const target = {\n        context,\n        objectId,\n        path: path || [],\n        cache: {},\n        textV2: false,\n    };\n    const proxied = {};\n    Object.assign(proxied, target);\n    return new Proxy(proxied, TextHandler);\n}\nexport function rootProxy(context, textV2) {\n    /* eslint-disable-next-line */\n    return mapProxy(context, \"_root\", textV2, []);\n}\nfunction listMethods(target) {\n    const { context, objectId, path, textV2 } = target;\n    const methods = {\n        deleteAt(index, numDelete) {\n            if (typeof numDelete === \"number\") {\n                context.splice(objectId, index, numDelete);\n            }\n            else {\n                context.delete(objectId, index);\n            }\n            return this;\n        },\n        fill(val, start, end) {\n            const [value, datatype] = import_value(val, textV2, [...path, start], context);\n            const length = context.length(objectId);\n            start = parseListIndex(start || 0);\n            end = parseListIndex(end || length);\n            for (let i = start; i \u003c Math.min(end, length); i++) {\n                if (datatype === \"list\" || datatype === \"map\") {\n                    context.putObject(objectId, i, value);\n                }\n                else if (datatype === \"text\") {\n                    if (textV2) {\n                        assertString(value);\n                        context.putObject(objectId, i, value);\n                    }\n                    else {\n                        assertText(value);\n                        const text = context.putObject(objectId, i, \"\");\n                        const proxyText = textProxy(context, text, [...path, i]);\n                        for (let i = 0; i \u003c value.length; i++) {\n                            proxyText[i] = value.get(i);\n                        }\n                    }\n                }\n                else {\n                    context.put(objectId, i, value, datatype);\n                }\n            }\n            return this;\n        },\n        indexOf(o, start = 0) {\n            const length = context.length(objectId);\n            for (let i = start; i \u003c length; i++) {\n                const value = context.getWithType(objectId, i);\n                if (value \u0026\u0026 (value[1] === o[OBJECT_ID] || value[1] === o)) {\n                    return i;\n                }\n            }\n            return -1;\n        },\n        insertAt(index, ...values) {\n            this.splice(index, 0, ...values);\n            return this;\n        },\n        pop() {\n            const length = context.length(objectId);\n            if (length == 0) {\n                return undefined;\n            }\n            const last = valueAt(target, length - 1);\n            context.delete(objectId, length - 1);\n            return last;\n        },\n        push(...values) {\n            const len = context.length(objectId);\n            this.splice(len, 0, ...values);\n            return context.length(objectId);\n        },\n        shift() {\n            if (context.length(objectId) == 0)\n                return;\n            const first = valueAt(target, 0);\n            context.delete(objectId, 0);\n            return first;\n        },\n        splice(index, del, ...vals) {\n            index = parseListIndex(index);\n            // if del is undefined, delete until the end of the list\n            if (typeof del !== \"number\") {\n                del = context.length(objectId) - index;\n            }\n            del = parseListIndex(del);\n            for (const val of vals) {\n                if (isSameDocument(val, context)) {\n                    throw new RangeError(\"Cannot create a reference to an existing document object\");\n                }\n            }\n            const result = [];\n            for (let i = 0; i \u003c del; i++) {\n                const value = valueAt(target, index);\n                if (value !== undefined) {\n                    result.push(value);\n                }\n                context.delete(objectId, index);\n            }\n            const values = vals.map((val, index) =\u003e {\n                try {\n                    return import_value(val, textV2, [...path], context);\n                }\n                catch (e) {\n                    if (e instanceof RangeError) {\n                        throw new RangeError(`${e.message} (at index ${index} in the input)`);\n                    }\n                    else {\n                        throw e;\n                    }\n                }\n            });\n            for (const [value, datatype] of values) {\n                switch (datatype) {\n                    case \"list\": {\n                        const list = context.insertObject(objectId, index, []);\n                        const proxyList = listProxy(context, list, textV2, [...path, index]);\n                        proxyList.splice(0, 0, ...value);\n                        break;\n                    }\n                    case \"text\": {\n                        if (textV2) {\n                            assertString(value);\n                            context.insertObject(objectId, index, value);\n                        }\n                        else {\n                            const text = context.insertObject(objectId, index, \"\");\n                            const proxyText = textProxy(context, text, [...path, index]);\n                            proxyText.splice(0, 0, ...value);\n                        }\n                        break;\n                    }\n                    case \"map\": {\n                        const map = context.insertObject(objectId, index, {});\n                        const proxyMap = mapProxy(context, map, textV2, [...path, index]);\n                        for (const key in value) {\n                            proxyMap[key] = value[key];\n                        }\n                        break;\n                    }\n                    default:\n                        context.insert(objectId, index, value, datatype);\n                }\n                index += 1;\n            }\n            return result;\n        },\n        unshift(...values) {\n            this.splice(0, 0, ...values);\n            return context.length(objectId);\n        },\n        entries() {\n            let i = 0;\n            const iterator = {\n                next: () =\u003e {\n                    const value = valueAt(target, i);\n                    if (value === undefined) {\n                        return { value: undefined, done: true };\n                    }\n                    else {\n                        return { value: [i++, value], done: false };\n                    }\n                },\n                [Symbol.iterator]() {\n                    return this;\n                },\n            };\n            return iterator;\n        },\n        keys() {\n            let i = 0;\n            const len = context.length(objectId);\n            const iterator = {\n                next: () =\u003e {\n                    if (i \u003c len) {\n                        return { value: i++, done: false };\n                    }\n                    return { value: undefined, done: true };\n                },\n                [Symbol.iterator]() {\n                    return this;\n                },\n            };\n            return iterator;\n        },\n        values() {\n            let i = 0;\n            const iterator = {\n                next: () =\u003e {\n                    const value = valueAt(target, i++);\n                    if (value === undefined) {\n                        return { value: undefined, done: true };\n                    }\n                    else {\n                        return { value, done: false };\n                    }\n                },\n                [Symbol.iterator]() {\n                    return this;\n                },\n            };\n            return iterator;\n        },\n        toArray() {\n            const list = [];\n            let value;\n            do {\n                value = valueAt(target, list.length);\n                if (value !== undefined) {\n                    list.push(value);\n                }\n            } while (value !== undefined);\n            return list;\n        },\n        map(f) {\n            return this.toArray().map(f);\n        },\n        toString() {\n            return this.toArray().toString();\n        },\n        toLocaleString() {\n            return this.toArray().toLocaleString();\n        },\n        forEach(f) {\n            return this.toArray().forEach(f);\n        },\n        // todo: real concat function is different\n        concat(other) {\n            return this.toArray().concat(other);\n        },\n        every(f) {\n            return this.toArray().every(f);\n        },\n        filter(f) {\n            return this.toArray().filter(f);\n        },\n        find(f) {\n            let index = 0;\n            for (const v of this) {\n                if (f(v, index)) {\n                    return v;\n                }\n                index += 1;\n            }\n        },\n        findIndex(f) {\n            let index = 0;\n            for (const v of this) {\n                if (f(v, index)) {\n                    return index;\n                }\n                index += 1;\n            }\n            return -1;\n        },\n        includes(elem) {\n            return this.find(e =\u003e e === elem) !== undefined;\n        },\n        join(sep) {\n            return this.toArray().join(sep);\n        },\n        reduce(f, initialValue) {\n            return this.toArray().reduce(f, initialValue);\n        },\n        reduceRight(f, initialValue) {\n            return this.toArray().reduceRight(f, initialValue);\n        },\n        lastIndexOf(search, fromIndex = +Infinity) {\n            // this can be faster\n            return this.toArray().lastIndexOf(search, fromIndex);\n        },\n        slice(index, num) {\n            return this.toArray().slice(index, num);\n        },\n        some(f) {\n            let index = 0;\n            for (const v of this) {\n                if (f(v, index)) {\n                    return true;\n                }\n                index += 1;\n            }\n            return false;\n        },\n        [Symbol.iterator]: function* () {\n            let i = 0;\n            let value = valueAt(target, i);\n            while (value !== undefined) {\n                yield value;\n                i += 1;\n                value = valueAt(target, i);\n            }\n        },\n    };\n    return methods;\n}\nfunction textMethods(target) {\n    const { context, objectId } = target;\n    const methods = {\n        set(index, value) {\n            return (this[index] = value);\n        },\n        get(index) {\n            return this[index];\n        },\n        toString() {\n            return context.text(objectId).replace(/￼/g, \"\");\n        },\n        toSpans() {\n            const spans = [];\n            let chars = \"\";\n            const length = context.length(objectId);\n            for (let i = 0; i \u003c length; i++) {\n                const value = this[i];\n                if (typeof value === \"string\") {\n                    chars += value;\n                }\n                else {\n                    if (chars.length \u003e 0) {\n                        spans.push(chars);\n                        chars = \"\";\n                    }\n                    spans.push(value);\n                }\n            }\n            if (chars.length \u003e 0) {\n                spans.push(chars);\n            }\n            return spans;\n        },\n        toJSON() {\n            return this.toString();\n        },\n        indexOf(o, start = 0) {\n            const text = context.text(objectId);\n            return text.indexOf(o, start);\n        },\n        insertAt(index, ...values) {\n            if (values.every(v =\u003e typeof v === \"string\")) {\n                context.splice(objectId, index, 0, values.join(\"\"));\n            }\n            else {\n                listMethods(target).insertAt(index, ...values);\n            }\n        },\n    };\n    return methods;\n}\nfunction assertText(value) {\n    if (!(value instanceof Text)) {\n        throw new Error(\"value was not a Text instance\");\n    }\n}\nfunction assertString(value) {\n    if (typeof value !== \"string\") {\n        throw new Error(\"value was not a string\");\n    }\n}\nfunction printPath(path) {\n    // print the path as a json pointer\n    const jsonPointerComponents = path.map(component =\u003e {\n        // if its a number just turn it into a string\n        if (typeof component === \"number\") {\n            return component.toString();\n        }\n        else if (typeof component === \"string\") {\n            // otherwise we have to escape `/` and `~` characters\n            return component.replace(/~/g, \"~0\").replace(/\\//g, \"~1\");\n        }\n    });\n    if (path.length === 0) {\n        return \"\";\n    }\n    else {\n        return \"/\" + jsonPointerComponents.join(\"/\");\n    }\n}\n","import { Counter } from \"./types.js\";\nimport { Text } from \"./text.js\";\nimport { mapProxy, listProxy } from \"./proxies.js\";\nexport function stableConflictAt(context, objectId, prop) {\n    return conflictAt(context, objectId, prop, true, (context, conflictId) =\u003e {\n        return new Text(context.text(conflictId));\n    });\n}\nexport function unstableConflictAt(context, objectId, prop) {\n    return conflictAt(context, objectId, prop, true, (context, conflictId) =\u003e {\n        return context.text(conflictId);\n    });\n}\nfunction conflictAt(context, objectId, prop, textV2, handleText) {\n    const values = context.getAll(objectId, prop);\n    if (values.length \u003c= 1) {\n        return;\n    }\n    const result = {};\n    for (const fullVal of values) {\n        switch (fullVal[0]) {\n            case \"map\":\n                result[fullVal[1]] = mapProxy(context, fullVal[1], textV2, [prop]);\n                break;\n            case \"list\":\n                result[fullVal[1]] = listProxy(context, fullVal[1], textV2, [prop]);\n                break;\n            case \"text\":\n                result[fullVal[1]] = handleText(context, fullVal[1]);\n                break;\n            case \"str\":\n            case \"uint\":\n            case \"int\":\n            case \"f64\":\n            case \"boolean\":\n            case \"bytes\":\n            case \"null\":\n                result[fullVal[2]] = fullVal[1];\n                break;\n            case \"counter\":\n                result[fullVal[2]] = new Counter(fullVal[1]);\n                break;\n            case \"timestamp\":\n                result[fullVal[2]] = new Date(fullVal[1]);\n                break;\n            default:\n                throw RangeError(`datatype ${fullVal[0]} unimplemented`);\n        }\n    }\n    return result;\n}\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' \u0026\u0026 crypto.getRandomValues \u0026\u0026 crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' \u0026\u0026 REGEX.test(uuid);\n}\n\nexport default validate;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i \u003c 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import validate from './validate.js';\n\nfunction parse(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  let v;\n  const arr = new Uint8Array(16); // Parse ########-....-....-....-............\n\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) \u003e\u003e\u003e 24;\n  arr[1] = v \u003e\u003e\u003e 16 \u0026 0xff;\n  arr[2] = v \u003e\u003e\u003e 8 \u0026 0xff;\n  arr[3] = v \u0026 0xff; // Parse ........-####-....-....-............\n\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) \u003e\u003e\u003e 8;\n  arr[5] = v \u0026 0xff; // Parse ........-....-####-....-............\n\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) \u003e\u003e\u003e 8;\n  arr[7] = v \u0026 0xff; // Parse ........-....-....-####-............\n\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) \u003e\u003e\u003e 8;\n  arr[9] = v \u0026 0xff; // Parse ........-....-....-....-############\n  // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 \u0026 0xff;\n  arr[11] = v / 0x100000000 \u0026 0xff;\n  arr[12] = v \u003e\u003e\u003e 24 \u0026 0xff;\n  arr[13] = v \u003e\u003e\u003e 16 \u0026 0xff;\n  arr[14] = v \u003e\u003e\u003e 8 \u0026 0xff;\n  arr[15] = v \u0026 0xff;\n  return arr;\n}\n\nexport default parse;","const randomUUID = typeof crypto !== 'undefined' \u0026\u0026 crypto.randomUUID \u0026\u0026 crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID \u0026\u0026 !buf \u0026\u0026 !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] \u0026 0x0f | 0x40;\n  rnds[8] = rnds[8] \u0026 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i \u003c 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;","import { v4 } from \"uuid\";\nfunction defaultFactory() {\n    return v4().replace(/-/g, \"\");\n}\nlet factory = defaultFactory;\nexport const uuid = () =\u003e {\n    return factory();\n};\nuuid.setFactory = newFactory =\u003e {\n    factory = newFactory;\n};\nuuid.reset = () =\u003e {\n    factory = defaultFactory;\n};\n","let wasm;\n\nconst heap = new Array(128).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nfunction getObject(idx) { return heap[idx]; }\n\nlet heap_next = heap.length;\n\nfunction dropObject(idx) {\n    if (idx \u003c 132) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nlet cachedUint8Memory0 = null;\n\nfunction getUint8Memory0() {\n    if (cachedUint8Memory0 === null || cachedUint8Memory0.byteLength === 0) {\n        cachedUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachedUint8Memory0;\n}\n\nconst cachedTextEncoder = (typeof TextEncoder !== 'undefined' ? new TextEncoder('utf-8') : { encode: () =\u003e { throw Error('TextEncoder not available') } } );\n\nconst encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n    return cachedTextEncoder.encodeInto(arg, view);\n}\n    : function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n});\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length, 1) \u003e\u003e\u003e 0;\n        getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len, 1) \u003e\u003e\u003e 0;\n\n    const mem = getUint8Memory0();\n\n    let offset = 0;\n\n    for (; offset \u003c len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code \u003e 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3, 1) \u003e\u003e\u003e 0;\n        const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n\n        offset += ret.written;\n        ptr = realloc(ptr, len, offset, 1) \u003e\u003e\u003e 0;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n\nfunction isLikeNone(x) {\n    return x === undefined || x === null;\n}\n\nlet cachedInt32Memory0 = null;\n\nfunction getInt32Memory0() {\n    if (cachedInt32Memory0 === null || cachedInt32Memory0.byteLength === 0) {\n        cachedInt32Memory0 = new Int32Array(wasm.memory.buffer);\n    }\n    return cachedInt32Memory0;\n}\n\nconst cachedTextDecoder = (typeof TextDecoder !== 'undefined' ? new TextDecoder('utf-8', { ignoreBOM: true, fatal: true }) : { decode: () =\u003e { throw Error('TextDecoder not available') } } );\n\nif (typeof TextDecoder !== 'undefined') { cachedTextDecoder.decode(); };\n\nfunction getStringFromWasm0(ptr, len) {\n    ptr = ptr \u003e\u003e\u003e 0;\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nlet cachedFloat64Memory0 = null;\n\nfunction getFloat64Memory0() {\n    if (cachedFloat64Memory0 === null || cachedFloat64Memory0.byteLength === 0) {\n        cachedFloat64Memory0 = new Float64Array(wasm.memory.buffer);\n    }\n    return cachedFloat64Memory0;\n}\n\nfunction debugString(val) {\n    // primitive types\n    const type = typeof val;\n    if (type == 'number' || type == 'boolean' || val == null) {\n        return  `${val}`;\n    }\n    if (type == 'string') {\n        return `\"${val}\"`;\n    }\n    if (type == 'symbol') {\n        const description = val.description;\n        if (description == null) {\n            return 'Symbol';\n        } else {\n            return `Symbol(${description})`;\n        }\n    }\n    if (type == 'function') {\n        const name = val.name;\n        if (typeof name == 'string' \u0026\u0026 name.length \u003e 0) {\n            return `Function(${name})`;\n        } else {\n            return 'Function';\n        }\n    }\n    // objects\n    if (Array.isArray(val)) {\n        const length = val.length;\n        let debug = '[';\n        if (length \u003e 0) {\n            debug += debugString(val[0]);\n        }\n        for(let i = 1; i \u003c length; i++) {\n            debug += ', ' + debugString(val[i]);\n        }\n        debug += ']';\n        return debug;\n    }\n    // Test for built-in\n    const builtInMatches = /\\[object ([^\\]]+)\\]/.exec(toString.call(val));\n    let className;\n    if (builtInMatches.length \u003e 1) {\n        className = builtInMatches[1];\n    } else {\n        // Failed to match the standard '[object ClassName]'\n        return toString.call(val);\n    }\n    if (className == 'Object') {\n        // we're a user defined class or Object\n        // JSON.stringify avoids problems with cycles, and is generally much\n        // easier than looping through ownProperties of `val`.\n        try {\n            return 'Object(' + JSON.stringify(val) + ')';\n        } catch (_) {\n            return 'Object';\n        }\n    }\n    // errors\n    if (val instanceof Error) {\n        return `${val.name}: ${val.message}\\n${val.stack}`;\n    }\n    // TODO we could test for more things here, like `Set`s and `Map`s.\n    return className;\n}\n\nfunction _assertClass(instance, klass) {\n    if (!(instance instanceof klass)) {\n        throw new Error(`expected instance of ${klass.name}`);\n    }\n    return instance.ptr;\n}\n/**\n* @param {any} options\n* @returns {Automerge}\n*/\nexport function create(options) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        wasm.create(retptr, addHeapObject(options));\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var r2 = getInt32Memory0()[retptr / 4 + 2];\n        if (r2) {\n            throw takeObject(r1);\n        }\n        return Automerge.__wrap(r0);\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n\n/**\n* @param {Uint8Array} data\n* @param {any} options\n* @returns {Automerge}\n*/\nexport function load(data, options) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        wasm.load(retptr, addHeapObject(data), addHeapObject(options));\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var r2 = getInt32Memory0()[retptr / 4 + 2];\n        if (r2) {\n            throw takeObject(r1);\n        }\n        return Automerge.__wrap(r0);\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n\n/**\n* @param {any} change\n* @returns {Uint8Array}\n*/\nexport function encodeChange(change) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        wasm.encodeChange(retptr, addHeapObject(change));\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var r2 = getInt32Memory0()[retptr / 4 + 2];\n        if (r2) {\n            throw takeObject(r1);\n        }\n        return takeObject(r0);\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n\n/**\n* @param {Uint8Array} change\n* @returns {any}\n*/\nexport function decodeChange(change) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        wasm.decodeChange(retptr, addHeapObject(change));\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var r2 = getInt32Memory0()[retptr / 4 + 2];\n        if (r2) {\n            throw takeObject(r1);\n        }\n        return takeObject(r0);\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n\n/**\n* @returns {SyncState}\n*/\nexport function initSyncState() {\n    const ret = wasm.initSyncState();\n    return SyncState.__wrap(ret);\n}\n\n/**\n* @param {any} state\n* @returns {SyncState}\n*/\nexport function importSyncState(state) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        wasm.importSyncState(retptr, addHeapObject(state));\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var r2 = getInt32Memory0()[retptr / 4 + 2];\n        if (r2) {\n            throw takeObject(r1);\n        }\n        return SyncState.__wrap(r0);\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n\n/**\n* @param {SyncState} state\n* @returns {any}\n*/\nexport function exportSyncState(state) {\n    _assertClass(state, SyncState);\n    const ret = wasm.exportSyncState(state.__wbg_ptr);\n    return takeObject(ret);\n}\n\n/**\n* @param {any} message\n* @returns {Uint8Array}\n*/\nexport function encodeSyncMessage(message) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        wasm.encodeSyncMessage(retptr, addHeapObject(message));\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var r2 = getInt32Memory0()[retptr / 4 + 2];\n        if (r2) {\n            throw takeObject(r1);\n        }\n        return takeObject(r0);\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n\n/**\n* @param {Uint8Array} msg\n* @returns {any}\n*/\nexport function decodeSyncMessage(msg) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        wasm.decodeSyncMessage(retptr, addHeapObject(msg));\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var r2 = getInt32Memory0()[retptr / 4 + 2];\n        if (r2) {\n            throw takeObject(r1);\n        }\n        return takeObject(r0);\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n\n/**\n* @param {SyncState} state\n* @returns {Uint8Array}\n*/\nexport function encodeSyncState(state) {\n    _assertClass(state, SyncState);\n    const ret = wasm.encodeSyncState(state.__wbg_ptr);\n    return takeObject(ret);\n}\n\n/**\n* @param {Uint8Array} data\n* @returns {SyncState}\n*/\nexport function decodeSyncState(data) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        wasm.decodeSyncState(retptr, addHeapObject(data));\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var r2 = getInt32Memory0()[retptr / 4 + 2];\n        if (r2) {\n            throw takeObject(r1);\n        }\n        return SyncState.__wrap(r0);\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n\nfunction handleError(f, args) {\n    try {\n        return f.apply(this, args);\n    } catch (e) {\n        wasm.__wbindgen_exn_store(addHeapObject(e));\n    }\n}\n/**\n* How text is represented in materialized objects on the JS side\n*/\nexport const TextRepresentation = Object.freeze({\n/**\n* As an array of characters and objects\n*/\nArray:0,\"0\":\"Array\",\n/**\n* As a single JS string\n*/\nString:1,\"1\":\"String\", });\n\nconst AutomergeFinalization = (typeof FinalizationRegistry === 'undefined')\n    ? { register: () =\u003e {}, unregister: () =\u003e {} }\n    : new FinalizationRegistry(ptr =\u003e wasm.__wbg_automerge_free(ptr \u003e\u003e\u003e 0));\n/**\n*/\nexport class Automerge {\n\n    static __wrap(ptr) {\n        ptr = ptr \u003e\u003e\u003e 0;\n        const obj = Object.create(Automerge.prototype);\n        obj.__wbg_ptr = ptr;\n        AutomergeFinalization.register(obj, obj.__wbg_ptr, obj);\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n        AutomergeFinalization.unregister(this);\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_automerge_free(ptr);\n    }\n    /**\n    * @param {string | undefined} actor\n    * @param {TextRepresentation} text_rep\n    * @returns {Automerge}\n    */\n    static new(actor, text_rep) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            var ptr0 = isLikeNone(actor) ? 0 : passStringToWasm0(actor, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n            var len0 = WASM_VECTOR_LEN;\n            wasm.automerge_new(retptr, ptr0, len0, text_rep);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return Automerge.__wrap(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {string | undefined} [actor]\n    * @returns {Automerge}\n    */\n    clone(actor) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            var ptr0 = isLikeNone(actor) ? 0 : passStringToWasm0(actor, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n            var len0 = WASM_VECTOR_LEN;\n            wasm.automerge_clone(retptr, this.__wbg_ptr, ptr0, len0);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return Automerge.__wrap(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {string | undefined} actor\n    * @param {any} heads\n    * @returns {Automerge}\n    */\n    fork(actor, heads) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            var ptr0 = isLikeNone(actor) ? 0 : passStringToWasm0(actor, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n            var len0 = WASM_VECTOR_LEN;\n            wasm.automerge_fork(retptr, this.__wbg_ptr, ptr0, len0, addHeapObject(heads));\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return Automerge.__wrap(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @returns {any}\n    */\n    pendingOps() {\n        const ret = wasm.automerge_pendingOps(this.__wbg_ptr);\n        return takeObject(ret);\n    }\n    /**\n    * @param {string | undefined} [message]\n    * @param {number | undefined} [time]\n    * @returns {any}\n    */\n    commit(message, time) {\n        var ptr0 = isLikeNone(message) ? 0 : passStringToWasm0(message, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        const ret = wasm.automerge_commit(this.__wbg_ptr, ptr0, len0, !isLikeNone(time), isLikeNone(time) ? 0 : time);\n        return takeObject(ret);\n    }\n    /**\n    * @param {Automerge} other\n    * @returns {Array\u003cany\u003e}\n    */\n    merge(other) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            _assertClass(other, Automerge);\n            wasm.automerge_merge(retptr, this.__wbg_ptr, other.__wbg_ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return takeObject(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @returns {number}\n    */\n    rollback() {\n        const ret = wasm.automerge_rollback(this.__wbg_ptr);\n        return ret;\n    }\n    /**\n    * @param {any} obj\n    * @param {Array\u003cany\u003e | undefined} [heads]\n    * @returns {Array\u003cany\u003e}\n    */\n    keys(obj, heads) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.automerge_keys(retptr, this.__wbg_ptr, addHeapObject(obj), isLikeNone(heads) ? 0 : addHeapObject(heads));\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return takeObject(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {any} obj\n    * @param {Array\u003cany\u003e | undefined} [heads]\n    * @returns {string}\n    */\n    text(obj, heads) {\n        let deferred2_0;\n        let deferred2_1;\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.automerge_text(retptr, this.__wbg_ptr, addHeapObject(obj), isLikeNone(heads) ? 0 : addHeapObject(heads));\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            var r3 = getInt32Memory0()[retptr / 4 + 3];\n            var ptr1 = r0;\n            var len1 = r1;\n            if (r3) {\n                ptr1 = 0; len1 = 0;\n                throw takeObject(r2);\n            }\n            deferred2_0 = ptr1;\n            deferred2_1 = len1;\n            return getStringFromWasm0(ptr1, len1);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n            wasm.__wbindgen_free(deferred2_0, deferred2_1, 1);\n        }\n    }\n    /**\n    * @param {any} obj\n    * @param {Array\u003cany\u003e | undefined} [heads]\n    * @returns {Array\u003cany\u003e}\n    */\n    spans(obj, heads) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.automerge_spans(retptr, this.__wbg_ptr, addHeapObject(obj), isLikeNone(heads) ? 0 : addHeapObject(heads));\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return takeObject(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {any} obj\n    * @param {number} start\n    * @param {number} delete_count\n    * @param {any} text\n    */\n    splice(obj, start, delete_count, text) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.automerge_splice(retptr, this.__wbg_ptr, addHeapObject(obj), start, delete_count, addHeapObject(text));\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            if (r1) {\n                throw takeObject(r0);\n            }\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {any} obj\n    * @param {any} new_text\n    */\n    updateText(obj, new_text) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.automerge_updateText(retptr, this.__wbg_ptr, addHeapObject(obj), addHeapObject(new_text));\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            if (r1) {\n                throw takeObject(r0);\n            }\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {any} obj\n    * @param {any} args\n    */\n    updateSpans(obj, args) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.automerge_updateSpans(retptr, this.__wbg_ptr, addHeapObject(obj), addHeapObject(args));\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            if (r1) {\n                throw takeObject(r0);\n            }\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {any} obj\n    * @param {any} value\n    * @param {any} datatype\n    */\n    push(obj, value, datatype) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.automerge_push(retptr, this.__wbg_ptr, addHeapObject(obj), addHeapObject(value), addHeapObject(datatype));\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            if (r1) {\n                throw takeObject(r0);\n            }\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {any} obj\n    * @param {any} value\n    * @returns {string | undefined}\n    */\n    pushObject(obj, value) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.automerge_pushObject(retptr, this.__wbg_ptr, addHeapObject(obj), addHeapObject(value));\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            var r3 = getInt32Memory0()[retptr / 4 + 3];\n            if (r3) {\n                throw takeObject(r2);\n            }\n            let v1;\n            if (r0 !== 0) {\n                v1 = getStringFromWasm0(r0, r1).slice();\n                wasm.__wbindgen_free(r0, r1 * 1, 1);\n            }\n            return v1;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {any} obj\n    * @param {number} index\n    * @param {any} value\n    * @param {any} datatype\n    */\n    insert(obj, index, value, datatype) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.automerge_insert(retptr, this.__wbg_ptr, addHeapObject(obj), index, addHeapObject(value), addHeapObject(datatype));\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            if (r1) {\n                throw takeObject(r0);\n            }\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {any} obj\n    * @param {number} index\n    * @param {any} args\n    */\n    splitBlock(obj, index, args) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.automerge_splitBlock(retptr, this.__wbg_ptr, addHeapObject(obj), index, addHeapObject(args));\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            if (r1) {\n                throw takeObject(r0);\n            }\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {any} text\n    * @param {number} index\n    */\n    joinBlock(text, index) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.automerge_joinBlock(retptr, this.__wbg_ptr, addHeapObject(text), index);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            if (r1) {\n                throw takeObject(r0);\n            }\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {any} text\n    * @param {number} index\n    * @param {any} args\n    */\n    updateBlock(text, index, args) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.automerge_updateBlock(retptr, this.__wbg_ptr, addHeapObject(text), index, addHeapObject(args));\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            if (r1) {\n                throw takeObject(r0);\n            }\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {any} text\n    * @param {number} index\n    * @param {Array\u003cany\u003e | undefined} [heads]\n    * @returns {any}\n    */\n    getBlock(text, index, heads) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.automerge_getBlock(retptr, this.__wbg_ptr, addHeapObject(text), index, isLikeNone(heads) ? 0 : addHeapObject(heads));\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return takeObject(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {any} obj\n    * @param {number} index\n    * @param {any} value\n    * @returns {string | undefined}\n    */\n    insertObject(obj, index, value) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.automerge_insertObject(retptr, this.__wbg_ptr, addHeapObject(obj), index, addHeapObject(value));\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            var r3 = getInt32Memory0()[retptr / 4 + 3];\n            if (r3) {\n                throw takeObject(r2);\n            }\n            let v1;\n            if (r0 !== 0) {\n                v1 = getStringFromWasm0(r0, r1).slice();\n                wasm.__wbindgen_free(r0, r1 * 1, 1);\n            }\n            return v1;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {any} obj\n    * @param {any} prop\n    * @param {any} value\n    * @param {any} datatype\n    */\n    put(obj, prop, value, datatype) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.automerge_put(retptr, this.__wbg_ptr, addHeapObject(obj), addHeapObject(prop), addHeapObject(value), addHeapObject(datatype));\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            if (r1) {\n                throw takeObject(r0);\n            }\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {any} obj\n    * @param {any} prop\n    * @param {any} value\n    * @returns {any}\n    */\n    putObject(obj, prop, value) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.automerge_putObject(retptr, this.__wbg_ptr, addHeapObject(obj), addHeapObject(prop), addHeapObject(value));\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return takeObject(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {any} obj\n    * @param {any} prop\n    * @param {any} value\n    */\n    increment(obj, prop, value) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.automerge_increment(retptr, this.__wbg_ptr, addHeapObject(obj), addHeapObject(prop), addHeapObject(value));\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            if (r1) {\n                throw takeObject(r0);\n            }\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {any} obj\n    * @param {any} prop\n    * @param {Array\u003cany\u003e | undefined} [heads]\n    * @returns {any}\n    */\n    get(obj, prop, heads) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.automerge_get(retptr, this.__wbg_ptr, addHeapObject(obj), addHeapObject(prop), isLikeNone(heads) ? 0 : addHeapObject(heads));\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return takeObject(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {any} obj\n    * @param {any} prop\n    * @param {Array\u003cany\u003e | undefined} [heads]\n    * @returns {any}\n    */\n    getWithType(obj, prop, heads) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.automerge_getWithType(retptr, this.__wbg_ptr, addHeapObject(obj), addHeapObject(prop), isLikeNone(heads) ? 0 : addHeapObject(heads));\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return takeObject(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {any} obj\n    * @param {Array\u003cany\u003e | undefined} [heads]\n    * @returns {object}\n    */\n    objInfo(obj, heads) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.automerge_objInfo(retptr, this.__wbg_ptr, addHeapObject(obj), isLikeNone(heads) ? 0 : addHeapObject(heads));\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return takeObject(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {any} obj\n    * @param {any} arg\n    * @param {Array\u003cany\u003e | undefined} [heads]\n    * @returns {Array\u003cany\u003e}\n    */\n    getAll(obj, arg, heads) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.automerge_getAll(retptr, this.__wbg_ptr, addHeapObject(obj), addHeapObject(arg), isLikeNone(heads) ? 0 : addHeapObject(heads));\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return takeObject(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {any} enable\n    * @returns {any}\n    */\n    enableFreeze(enable) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.automerge_enableFreeze(retptr, this.__wbg_ptr, addHeapObject(enable));\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return takeObject(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {any} datatype\n    * @param {any} export_function\n    * @param {any} import_function\n    */\n    registerDatatype(datatype, export_function, import_function) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.automerge_registerDatatype(retptr, this.__wbg_ptr, addHeapObject(datatype), addHeapObject(export_function), addHeapObject(import_function));\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            if (r1) {\n                throw takeObject(r0);\n            }\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {any} object\n    * @param {any} meta\n    * @returns {any}\n    */\n    applyPatches(object, meta) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.automerge_applyPatches(retptr, this.__wbg_ptr, addHeapObject(object), addHeapObject(meta));\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return takeObject(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {any} object\n    * @param {any} meta\n    * @returns {any}\n    */\n    applyAndReturnPatches(object, meta) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.automerge_applyAndReturnPatches(retptr, this.__wbg_ptr, addHeapObject(object), addHeapObject(meta));\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return takeObject(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @returns {Array\u003cany\u003e}\n    */\n    diffIncremental() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.automerge_diffIncremental(retptr, this.__wbg_ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return takeObject(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    */\n    updateDiffCursor() {\n        wasm.automerge_updateDiffCursor(this.__wbg_ptr);\n    }\n    /**\n    */\n    resetDiffCursor() {\n        wasm.automerge_resetDiffCursor(this.__wbg_ptr);\n    }\n    /**\n    * @param {Array\u003cany\u003e} before\n    * @param {Array\u003cany\u003e} after\n    * @returns {Array\u003cany\u003e}\n    */\n    diff(before, after) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.automerge_diff(retptr, this.__wbg_ptr, addHeapObject(before), addHeapObject(after));\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return takeObject(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {Array\u003cany\u003e} heads\n    */\n    isolate(heads) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.automerge_isolate(retptr, this.__wbg_ptr, addHeapObject(heads));\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            if (r1) {\n                throw takeObject(r0);\n            }\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    */\n    integrate() {\n        wasm.automerge_integrate(this.__wbg_ptr);\n    }\n    /**\n    * @param {any} obj\n    * @param {Array\u003cany\u003e | undefined} [heads]\n    * @returns {number}\n    */\n    length(obj, heads) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.automerge_length(retptr, this.__wbg_ptr, addHeapObject(obj), isLikeNone(heads) ? 0 : addHeapObject(heads));\n            var r0 = getFloat64Memory0()[retptr / 8 + 0];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            var r3 = getInt32Memory0()[retptr / 4 + 3];\n            if (r3) {\n                throw takeObject(r2);\n            }\n            return r0;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {any} obj\n    * @param {any} prop\n    */\n    delete(obj, prop) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.automerge_delete(retptr, this.__wbg_ptr, addHeapObject(obj), addHeapObject(prop));\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            if (r1) {\n                throw takeObject(r0);\n            }\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @returns {Uint8Array}\n    */\n    save() {\n        const ret = wasm.automerge_save(this.__wbg_ptr);\n        return takeObject(ret);\n    }\n    /**\n    * @returns {Uint8Array}\n    */\n    saveIncremental() {\n        const ret = wasm.automerge_saveIncremental(this.__wbg_ptr);\n        return takeObject(ret);\n    }\n    /**\n    * @param {Array\u003cany\u003e} heads\n    * @returns {Uint8Array}\n    */\n    saveSince(heads) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.automerge_saveSince(retptr, this.__wbg_ptr, addHeapObject(heads));\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return takeObject(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @returns {Uint8Array}\n    */\n    saveNoCompress() {\n        const ret = wasm.automerge_saveNoCompress(this.__wbg_ptr);\n        return takeObject(ret);\n    }\n    /**\n    * @returns {Uint8Array}\n    */\n    saveAndVerify() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.automerge_saveAndVerify(retptr, this.__wbg_ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return takeObject(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {Uint8Array} data\n    * @returns {number}\n    */\n    loadIncremental(data) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.automerge_loadIncremental(retptr, this.__wbg_ptr, addHeapObject(data));\n            var r0 = getFloat64Memory0()[retptr / 8 + 0];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            var r3 = getInt32Memory0()[retptr / 4 + 3];\n            if (r3) {\n                throw takeObject(r2);\n            }\n            return r0;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {any} changes\n    */\n    applyChanges(changes) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.automerge_applyChanges(retptr, this.__wbg_ptr, addHeapObject(changes));\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            if (r1) {\n                throw takeObject(r0);\n            }\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {any} have_deps\n    * @returns {Array\u003cany\u003e}\n    */\n    getChanges(have_deps) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.automerge_getChanges(retptr, this.__wbg_ptr, addHeapObject(have_deps));\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return takeObject(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {any} hash\n    * @returns {any}\n    */\n    getChangeByHash(hash) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.automerge_getChangeByHash(retptr, this.__wbg_ptr, addHeapObject(hash));\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return takeObject(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {any} hash\n    * @returns {any}\n    */\n    getDecodedChangeByHash(hash) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.automerge_getDecodedChangeByHash(retptr, this.__wbg_ptr, addHeapObject(hash));\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return takeObject(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {Automerge} other\n    * @returns {Array\u003cany\u003e}\n    */\n    getChangesAdded(other) {\n        _assertClass(other, Automerge);\n        const ret = wasm.automerge_getChangesAdded(this.__wbg_ptr, other.__wbg_ptr);\n        return takeObject(ret);\n    }\n    /**\n    * @returns {Array\u003cany\u003e}\n    */\n    getHeads() {\n        const ret = wasm.automerge_getHeads(this.__wbg_ptr);\n        return takeObject(ret);\n    }\n    /**\n    * @returns {string}\n    */\n    getActorId() {\n        let deferred1_0;\n        let deferred1_1;\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.automerge_getActorId(retptr, this.__wbg_ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            deferred1_0 = r0;\n            deferred1_1 = r1;\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n            wasm.__wbindgen_free(deferred1_0, deferred1_1, 1);\n        }\n    }\n    /**\n    * @returns {any}\n    */\n    getLastLocalChange() {\n        const ret = wasm.automerge_getLastLocalChange(this.__wbg_ptr);\n        return takeObject(ret);\n    }\n    /**\n    */\n    dump() {\n        wasm.automerge_dump(this.__wbg_ptr);\n    }\n    /**\n    * @param {Array\u003cany\u003e | undefined} [heads]\n    * @returns {Array\u003cany\u003e}\n    */\n    getMissingDeps(heads) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.automerge_getMissingDeps(retptr, this.__wbg_ptr, isLikeNone(heads) ? 0 : addHeapObject(heads));\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return takeObject(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {SyncState} state\n    * @param {Uint8Array} message\n    */\n    receiveSyncMessage(state, message) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            _assertClass(state, SyncState);\n            wasm.automerge_receiveSyncMessage(retptr, this.__wbg_ptr, state.__wbg_ptr, addHeapObject(message));\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            if (r1) {\n                throw takeObject(r0);\n            }\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {SyncState} state\n    * @returns {any}\n    */\n    generateSyncMessage(state) {\n        _assertClass(state, SyncState);\n        const ret = wasm.automerge_generateSyncMessage(this.__wbg_ptr, state.__wbg_ptr);\n        return takeObject(ret);\n    }\n    /**\n    * @param {any} meta\n    * @returns {any}\n    */\n    toJS(meta) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.automerge_toJS(retptr, this.__wbg_ptr, addHeapObject(meta));\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return takeObject(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {any} obj\n    * @param {Array\u003cany\u003e | undefined} heads\n    * @param {any} meta\n    * @returns {any}\n    */\n    materialize(obj, heads, meta) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.automerge_materialize(retptr, this.__wbg_ptr, addHeapObject(obj), isLikeNone(heads) ? 0 : addHeapObject(heads), addHeapObject(meta));\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return takeObject(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {any} obj\n    * @param {number} index\n    * @param {Array\u003cany\u003e | undefined} [heads]\n    * @returns {string}\n    */\n    getCursor(obj, index, heads) {\n        let deferred2_0;\n        let deferred2_1;\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.automerge_getCursor(retptr, this.__wbg_ptr, addHeapObject(obj), index, isLikeNone(heads) ? 0 : addHeapObject(heads));\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            var r3 = getInt32Memory0()[retptr / 4 + 3];\n            var ptr1 = r0;\n            var len1 = r1;\n            if (r3) {\n                ptr1 = 0; len1 = 0;\n                throw takeObject(r2);\n            }\n            deferred2_0 = ptr1;\n            deferred2_1 = len1;\n            return getStringFromWasm0(ptr1, len1);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n            wasm.__wbindgen_free(deferred2_0, deferred2_1, 1);\n        }\n    }\n    /**\n    * @param {any} obj\n    * @param {any} cursor\n    * @param {Array\u003cany\u003e | undefined} [heads]\n    * @returns {number}\n    */\n    getCursorPosition(obj, cursor, heads) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.automerge_getCursorPosition(retptr, this.__wbg_ptr, addHeapObject(obj), addHeapObject(cursor), isLikeNone(heads) ? 0 : addHeapObject(heads));\n            var r0 = getFloat64Memory0()[retptr / 8 + 0];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            var r3 = getInt32Memory0()[retptr / 4 + 3];\n            if (r3) {\n                throw takeObject(r2);\n            }\n            return r0;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {string | undefined} [message]\n    * @param {number | undefined} [time]\n    * @returns {any}\n    */\n    emptyChange(message, time) {\n        var ptr0 = isLikeNone(message) ? 0 : passStringToWasm0(message, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        const ret = wasm.automerge_emptyChange(this.__wbg_ptr, ptr0, len0, !isLikeNone(time), isLikeNone(time) ? 0 : time);\n        return takeObject(ret);\n    }\n    /**\n    * @param {any} obj\n    * @param {any} range\n    * @param {any} name\n    * @param {any} value\n    * @param {any} datatype\n    */\n    mark(obj, range, name, value, datatype) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.automerge_mark(retptr, this.__wbg_ptr, addHeapObject(obj), addHeapObject(range), addHeapObject(name), addHeapObject(value), addHeapObject(datatype));\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            if (r1) {\n                throw takeObject(r0);\n            }\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {any} obj\n    * @param {any} range\n    * @param {any} name\n    */\n    unmark(obj, range, name) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.automerge_unmark(retptr, this.__wbg_ptr, addHeapObject(obj), addHeapObject(range), addHeapObject(name));\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            if (r1) {\n                throw takeObject(r0);\n            }\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {any} obj\n    * @param {Array\u003cany\u003e | undefined} [heads]\n    * @returns {any}\n    */\n    marks(obj, heads) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.automerge_marks(retptr, this.__wbg_ptr, addHeapObject(obj), isLikeNone(heads) ? 0 : addHeapObject(heads));\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return takeObject(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {any} obj\n    * @param {number} index\n    * @param {Array\u003cany\u003e | undefined} [heads]\n    * @returns {object}\n    */\n    marksAt(obj, index, heads) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.automerge_marksAt(retptr, this.__wbg_ptr, addHeapObject(obj), index, isLikeNone(heads) ? 0 : addHeapObject(heads));\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return takeObject(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {SyncState} state\n    * @returns {any}\n    */\n    hasOurChanges(state) {\n        _assertClass(state, SyncState);\n        const ret = wasm.automerge_hasOurChanges(this.__wbg_ptr, state.__wbg_ptr);\n        return takeObject(ret);\n    }\n    /**\n    * @returns {any}\n    */\n    topoHistoryTraversal() {\n        const ret = wasm.automerge_topoHistoryTraversal(this.__wbg_ptr);\n        return takeObject(ret);\n    }\n    /**\n    * @returns {any}\n    */\n    stats() {\n        const ret = wasm.automerge_stats(this.__wbg_ptr);\n        return takeObject(ret);\n    }\n}\n\nconst SyncStateFinalization = (typeof FinalizationRegistry === 'undefined')\n    ? { register: () =\u003e {}, unregister: () =\u003e {} }\n    : new FinalizationRegistry(ptr =\u003e wasm.__wbg_syncstate_free(ptr \u003e\u003e\u003e 0));\n/**\n*/\nexport class SyncState {\n\n    static __wrap(ptr) {\n        ptr = ptr \u003e\u003e\u003e 0;\n        const obj = Object.create(SyncState.prototype);\n        obj.__wbg_ptr = ptr;\n        SyncStateFinalization.register(obj, obj.__wbg_ptr, obj);\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n        SyncStateFinalization.unregister(this);\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_syncstate_free(ptr);\n    }\n    /**\n    * @returns {any}\n    */\n    get sharedHeads() {\n        const ret = wasm.syncstate_sharedHeads(this.__wbg_ptr);\n        return takeObject(ret);\n    }\n    /**\n    * @returns {any}\n    */\n    get lastSentHeads() {\n        const ret = wasm.syncstate_lastSentHeads(this.__wbg_ptr);\n        return takeObject(ret);\n    }\n    /**\n    * @param {any} heads\n    */\n    set lastSentHeads(heads) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.syncstate_set_lastSentHeads(retptr, this.__wbg_ptr, addHeapObject(heads));\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            if (r1) {\n                throw takeObject(r0);\n            }\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {any} hashes\n    */\n    set sentHashes(hashes) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.syncstate_set_sentHashes(retptr, this.__wbg_ptr, addHeapObject(hashes));\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            if (r1) {\n                throw takeObject(r0);\n            }\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @returns {SyncState}\n    */\n    clone() {\n        const ret = wasm.syncstate_clone(this.__wbg_ptr);\n        return SyncState.__wrap(ret);\n    }\n}\n\nasync function __wbg_load(module, imports) {\n    if (typeof Response === 'function' \u0026\u0026 module instanceof Response) {\n        if (typeof WebAssembly.instantiateStreaming === 'function') {\n            try {\n                return await WebAssembly.instantiateStreaming(module, imports);\n\n            } catch (e) {\n                if (module.headers.get('Content-Type') != 'application/wasm') {\n                    console.warn(\"`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\\n\", e);\n\n                } else {\n                    throw e;\n                }\n            }\n        }\n\n        const bytes = await module.arrayBuffer();\n        return await WebAssembly.instantiate(bytes, imports);\n\n    } else {\n        const instance = await WebAssembly.instantiate(module, imports);\n\n        if (instance instanceof WebAssembly.Instance) {\n            return { instance, module };\n\n        } else {\n            return instance;\n        }\n    }\n}\n\nfunction __wbg_get_imports() {\n    const imports = {};\n    imports.wbg = {};\n    imports.wbg.__wbindgen_object_drop_ref = function(arg0) {\n        takeObject(arg0);\n    };\n    imports.wbg.__wbindgen_string_get = function(arg0, arg1) {\n        const obj = getObject(arg1);\n        const ret = typeof(obj) === 'string' ? obj : undefined;\n        var ptr1 = isLikeNone(ret) ? 0 : passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len1 = WASM_VECTOR_LEN;\n        getInt32Memory0()[arg0 / 4 + 1] = len1;\n        getInt32Memory0()[arg0 / 4 + 0] = ptr1;\n    };\n    imports.wbg.__wbindgen_error_new = function(arg0, arg1) {\n        const ret = new Error(getStringFromWasm0(arg0, arg1));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_string_new = function(arg0, arg1) {\n        const ret = getStringFromWasm0(arg0, arg1);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_number_new = function(arg0) {\n        const ret = arg0;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_object_clone_ref = function(arg0) {\n        const ret = getObject(arg0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_number_get = function(arg0, arg1) {\n        const obj = getObject(arg1);\n        const ret = typeof(obj) === 'number' ? obj : undefined;\n        getFloat64Memory0()[arg0 / 8 + 1] = isLikeNone(ret) ? 0 : ret;\n        getInt32Memory0()[arg0 / 4 + 0] = !isLikeNone(ret);\n    };\n    imports.wbg.__wbindgen_is_undefined = function(arg0) {\n        const ret = getObject(arg0) === undefined;\n        return ret;\n    };\n    imports.wbg.__wbindgen_boolean_get = function(arg0) {\n        const v = getObject(arg0);\n        const ret = typeof(v) === 'boolean' ? (v ? 1 : 0) : 2;\n        return ret;\n    };\n    imports.wbg.__wbindgen_is_null = function(arg0) {\n        const ret = getObject(arg0) === null;\n        return ret;\n    };\n    imports.wbg.__wbindgen_is_string = function(arg0) {\n        const ret = typeof(getObject(arg0)) === 'string';\n        return ret;\n    };\n    imports.wbg.__wbindgen_is_function = function(arg0) {\n        const ret = typeof(getObject(arg0)) === 'function';\n        return ret;\n    };\n    imports.wbg.__wbindgen_is_object = function(arg0) {\n        const val = getObject(arg0);\n        const ret = typeof(val) === 'object' \u0026\u0026 val !== null;\n        return ret;\n    };\n    imports.wbg.__wbindgen_is_array = function(arg0) {\n        const ret = Array.isArray(getObject(arg0));\n        return ret;\n    };\n    imports.wbg.__wbindgen_json_serialize = function(arg0, arg1) {\n        const obj = getObject(arg1);\n        const ret = JSON.stringify(obj === undefined ? null : obj);\n        const ptr1 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len1 = WASM_VECTOR_LEN;\n        getInt32Memory0()[arg0 / 4 + 1] = len1;\n        getInt32Memory0()[arg0 / 4 + 0] = ptr1;\n    };\n    imports.wbg.__wbg_new_abda76e883ba8a5f = function() {\n        const ret = new Error();\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_stack_658279fe44541cf6 = function(arg0, arg1) {\n        const ret = getObject(arg1).stack;\n        const ptr1 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len1 = WASM_VECTOR_LEN;\n        getInt32Memory0()[arg0 / 4 + 1] = len1;\n        getInt32Memory0()[arg0 / 4 + 0] = ptr1;\n    };\n    imports.wbg.__wbg_error_f851667af71bcfc6 = function(arg0, arg1) {\n        let deferred0_0;\n        let deferred0_1;\n        try {\n            deferred0_0 = arg0;\n            deferred0_1 = arg1;\n            console.error(getStringFromWasm0(arg0, arg1));\n        } finally {\n            wasm.__wbindgen_free(deferred0_0, deferred0_1, 1);\n        }\n    };\n    imports.wbg.__wbindgen_jsval_loose_eq = function(arg0, arg1) {\n        const ret = getObject(arg0) == getObject(arg1);\n        return ret;\n    };\n    imports.wbg.__wbg_String_91fba7ded13ba54c = function(arg0, arg1) {\n        const ret = String(getObject(arg1));\n        const ptr1 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len1 = WASM_VECTOR_LEN;\n        getInt32Memory0()[arg0 / 4 + 1] = len1;\n        getInt32Memory0()[arg0 / 4 + 0] = ptr1;\n    };\n    imports.wbg.__wbindgen_bigint_from_i64 = function(arg0) {\n        const ret = arg0;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_bigint_from_u64 = function(arg0) {\n        const ret = BigInt.asUintN(64, arg0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_set_20cbc34131e76824 = function(arg0, arg1, arg2) {\n        getObject(arg0)[takeObject(arg1)] = takeObject(arg2);\n    };\n    imports.wbg.__wbg_getRandomValues_3aa56aa6edec874c = function() { return handleError(function (arg0, arg1) {\n        getObject(arg0).getRandomValues(getObject(arg1));\n    }, arguments) };\n    imports.wbg.__wbg_randomFillSync_5c9c955aa56b6049 = function() { return handleError(function (arg0, arg1) {\n        getObject(arg0).randomFillSync(takeObject(arg1));\n    }, arguments) };\n    imports.wbg.__wbg_crypto_1d1f22824a6a080c = function(arg0) {\n        const ret = getObject(arg0).crypto;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_process_4a72847cc503995b = function(arg0) {\n        const ret = getObject(arg0).process;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_versions_f686565e586dd935 = function(arg0) {\n        const ret = getObject(arg0).versions;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_node_104a2ff8d6ea03a2 = function(arg0) {\n        const ret = getObject(arg0).node;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_require_cca90b1a94a0255b = function() { return handleError(function () {\n        const ret = module.require;\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_msCrypto_eb05e62b530a1508 = function(arg0) {\n        const ret = getObject(arg0).msCrypto;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_log_5bb5f88f245d7762 = function(arg0) {\n        console.log(getObject(arg0));\n    };\n    imports.wbg.__wbg_log_1746d5c75ec89963 = function(arg0, arg1) {\n        console.log(getObject(arg0), getObject(arg1));\n    };\n    imports.wbg.__wbg_get_bd8e338fbd5f5cc8 = function(arg0, arg1) {\n        const ret = getObject(arg0)[arg1 \u003e\u003e\u003e 0];\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_length_cd7af8117672b8b8 = function(arg0) {\n        const ret = getObject(arg0).length;\n        return ret;\n    };\n    imports.wbg.__wbg_new_16b304a2cfa7ff4a = function() {\n        const ret = new Array();\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_newnoargs_e258087cd0daa0ea = function(arg0, arg1) {\n        const ret = new Function(getStringFromWasm0(arg0, arg1));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_next_40fc327bfc8770e6 = function(arg0) {\n        const ret = getObject(arg0).next;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_next_196c84450b364254 = function() { return handleError(function (arg0) {\n        const ret = getObject(arg0).next();\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_done_298b57d23c0fc80c = function(arg0) {\n        const ret = getObject(arg0).done;\n        return ret;\n    };\n    imports.wbg.__wbg_value_d93c65011f51a456 = function(arg0) {\n        const ret = getObject(arg0).value;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_iterator_2cee6dadfd956dfa = function() {\n        const ret = Symbol.iterator;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_get_e3c254076557e348 = function() { return handleError(function (arg0, arg1) {\n        const ret = Reflect.get(getObject(arg0), getObject(arg1));\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_call_27c0f87801dedf93 = function() { return handleError(function (arg0, arg1) {\n        const ret = getObject(arg0).call(getObject(arg1));\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_new_72fb9a18b5ae2624 = function() {\n        const ret = new Object();\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_length_dee433d4c85c9387 = function(arg0) {\n        const ret = getObject(arg0).length;\n        return ret;\n    };\n    imports.wbg.__wbg_set_d4638f722068f043 = function(arg0, arg1, arg2) {\n        getObject(arg0)[arg1 \u003e\u003e\u003e 0] = takeObject(arg2);\n    };\n    imports.wbg.__wbg_from_89e3fc3ba5e6fb48 = function(arg0) {\n        const ret = Array.from(getObject(arg0));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_isArray_2ab64d95e09ea0ae = function(arg0) {\n        const ret = Array.isArray(getObject(arg0));\n        return ret;\n    };\n    imports.wbg.__wbg_push_a5b05aedc7234f9f = function(arg0, arg1) {\n        const ret = getObject(arg0).push(getObject(arg1));\n        return ret;\n    };\n    imports.wbg.__wbg_unshift_e22df4b34bcf5070 = function(arg0, arg1) {\n        const ret = getObject(arg0).unshift(getObject(arg1));\n        return ret;\n    };\n    imports.wbg.__wbg_instanceof_ArrayBuffer_836825be07d4c9d2 = function(arg0) {\n        let result;\n        try {\n            result = getObject(arg0) instanceof ArrayBuffer;\n        } catch (_) {\n            result = false;\n        }\n        const ret = result;\n        return ret;\n    };\n    imports.wbg.__wbg_new_28c511d9baebfa89 = function(arg0, arg1) {\n        const ret = new Error(getStringFromWasm0(arg0, arg1));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_call_b3ca7c6051f9bec1 = function() { return handleError(function (arg0, arg1, arg2) {\n        const ret = getObject(arg0).call(getObject(arg1), getObject(arg2));\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_instanceof_Date_f65cf97fb83fc369 = function(arg0) {\n        let result;\n        try {\n            result = getObject(arg0) instanceof Date;\n        } catch (_) {\n            result = false;\n        }\n        const ret = result;\n        return ret;\n    };\n    imports.wbg.__wbg_getTime_2bc4375165f02d15 = function(arg0) {\n        const ret = getObject(arg0).getTime();\n        return ret;\n    };\n    imports.wbg.__wbg_new_cf3ec55744a78578 = function(arg0) {\n        const ret = new Date(getObject(arg0));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_instanceof_Object_71ca3c0a59266746 = function(arg0) {\n        let result;\n        try {\n            result = getObject(arg0) instanceof Object;\n        } catch (_) {\n            result = false;\n        }\n        const ret = result;\n        return ret;\n    };\n    imports.wbg.__wbg_assign_496d2d14fecafbcf = function(arg0, arg1) {\n        const ret = Object.assign(getObject(arg0), getObject(arg1));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_defineProperty_cc00e2de8a0f5141 = function(arg0, arg1, arg2) {\n        const ret = Object.defineProperty(getObject(arg0), getObject(arg1), getObject(arg2));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_entries_95cc2c823b285a09 = function(arg0) {\n        const ret = Object.entries(getObject(arg0));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_freeze_cc6bc19f75299986 = function(arg0) {\n        const ret = Object.freeze(getObject(arg0));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_keys_91e412b4b222659f = function(arg0) {\n        const ret = Object.keys(getObject(arg0));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_values_9c75e6e2bfbdb70d = function(arg0) {\n        const ret = Object.values(getObject(arg0));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_new_dd6a5dd7b538af21 = function(arg0, arg1) {\n        const ret = new RangeError(getStringFromWasm0(arg0, arg1));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_apply_0a5aa603881e6d79 = function() { return handleError(function (arg0, arg1, arg2) {\n        const ret = Reflect.apply(getObject(arg0), getObject(arg1), getObject(arg2));\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_deleteProperty_13e721a56f19e842 = function() { return handleError(function (arg0, arg1) {\n        const ret = Reflect.deleteProperty(getObject(arg0), getObject(arg1));\n        return ret;\n    }, arguments) };\n    imports.wbg.__wbg_ownKeys_658942b7f28d1fe9 = function() { return handleError(function (arg0) {\n        const ret = Reflect.ownKeys(getObject(arg0));\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_set_1f9b04f170055d33 = function() { return handleError(function (arg0, arg1, arg2) {\n        const ret = Reflect.set(getObject(arg0), getObject(arg1), getObject(arg2));\n        return ret;\n    }, arguments) };\n    imports.wbg.__wbg_buffer_12d079cc21e14bdb = function(arg0) {\n        const ret = getObject(arg0).buffer;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_concat_3de229fe4fe90fea = function(arg0, arg1) {\n        const ret = getObject(arg0).concat(getObject(arg1));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_slice_52fb626ffdc8da8f = function(arg0, arg1, arg2) {\n        const ret = getObject(arg0).slice(arg1 \u003e\u003e\u003e 0, arg2 \u003e\u003e\u003e 0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_for_27c67e2dbdce22f6 = function(arg0, arg1) {\n        const ret = Symbol.for(getStringFromWasm0(arg0, arg1));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_toString_7df3c77999517c20 = function(arg0) {\n        const ret = getObject(arg0).toString();\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_self_ce0dbfc45cf2f5be = function() { return handleError(function () {\n        const ret = self.self;\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_window_c6fb939a7f436783 = function() { return handleError(function () {\n        const ret = window.window;\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_globalThis_d1e6af4856ba331b = function() { return handleError(function () {\n        const ret = globalThis.globalThis;\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_global_207b558942527489 = function() { return handleError(function () {\n        const ret = global.global;\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_newwithbyteoffsetandlength_aa4a17c33a06e5cb = function(arg0, arg1, arg2) {\n        const ret = new Uint8Array(getObject(arg0), arg1 \u003e\u003e\u003e 0, arg2 \u003e\u003e\u003e 0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_new_63b92bc8671ed464 = function(arg0) {\n        const ret = new Uint8Array(getObject(arg0));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_set_a47bac70306a19a7 = function(arg0, arg1, arg2) {\n        getObject(arg0).set(getObject(arg1), arg2 \u003e\u003e\u003e 0);\n    };\n    imports.wbg.__wbg_length_c20a40f15020d68a = function(arg0) {\n        const ret = getObject(arg0).length;\n        return ret;\n    };\n    imports.wbg.__wbg_instanceof_Uint8Array_2b3bbecd033d19f6 = function(arg0) {\n        let result;\n        try {\n            result = getObject(arg0) instanceof Uint8Array;\n        } catch (_) {\n            result = false;\n        }\n        const ret = result;\n        return ret;\n    };\n    imports.wbg.__wbg_newwithlength_e9b4878cebadb3d3 = function(arg0) {\n        const ret = new Uint8Array(arg0 \u003e\u003e\u003e 0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_subarray_a1f73cd4b5b42fe1 = function(arg0, arg1, arg2) {\n        const ret = getObject(arg0).subarray(arg1 \u003e\u003e\u003e 0, arg2 \u003e\u003e\u003e 0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_debug_string = function(arg0, arg1) {\n        const ret = debugString(getObject(arg1));\n        const ptr1 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len1 = WASM_VECTOR_LEN;\n        getInt32Memory0()[arg0 / 4 + 1] = len1;\n        getInt32Memory0()[arg0 / 4 + 0] = ptr1;\n    };\n    imports.wbg.__wbindgen_throw = function(arg0, arg1) {\n        throw new Error(getStringFromWasm0(arg0, arg1));\n    };\n    imports.wbg.__wbindgen_memory = function() {\n        const ret = wasm.memory;\n        return addHeapObject(ret);\n    };\n\n    return imports;\n}\n\nfunction __wbg_init_memory(imports, maybe_memory) {\n\n}\n\nfunction __wbg_finalize_init(instance, module) {\n    wasm = instance.exports;\n    __wbg_init.__wbindgen_wasm_module = module;\n    cachedFloat64Memory0 = null;\n    cachedInt32Memory0 = null;\n    cachedUint8Memory0 = null;\n\n\n    return wasm;\n}\n\nfunction initSync(module) {\n    if (wasm !== undefined) return wasm;\n\n    const imports = __wbg_get_imports();\n\n    __wbg_init_memory(imports);\n\n    if (!(module instanceof WebAssembly.Module)) {\n        module = new WebAssembly.Module(module);\n    }\n\n    const instance = new WebAssembly.Instance(module, imports);\n\n    return __wbg_finalize_init(instance, module);\n}\n\nasync function __wbg_init(input) {\n    if (wasm !== undefined) return wasm;\n\n    if (typeof input === 'undefined') {\n        input = new URL('automerge_wasm_bg.wasm', import.meta.url);\n    }\n    const imports = __wbg_get_imports();\n\n    if (typeof input === 'string' || (typeof Request === 'function' \u0026\u0026 input instanceof Request) || (typeof URL === 'function' \u0026\u0026 input instanceof URL)) {\n        input = fetch(input);\n    }\n\n    __wbg_init_memory(imports);\n\n    const { instance, module } = await __wbg_load(await input, imports);\n\n    return __wbg_finalize_init(instance, module);\n}\n\nexport { initSync }\nexport default __wbg_init;\n","import { default as initWasm } from \"./wasm_bindgen_output/web/automerge_wasm.js\";\nimport * as WasmApi from \"./wasm_bindgen_output/web/automerge_wasm.js\";\nlet _initialized = false;\nlet _initializeListeners = [];\nexport function UseApi(api) {\n    for (const k in api) {\n        // eslint-disable-next-line @typescript-eslint/no-extra-semi,@typescript-eslint/no-explicit-any\n        ;\n        ApiHandler[k] = api[k];\n    }\n    _initialized = true;\n    for (const listener of _initializeListeners) {\n        listener();\n    }\n}\n/* eslint-disable */\nexport const ApiHandler = {\n    create(options) {\n        throw new RangeError(\"Automerge.use() not called\");\n    },\n    load(data, options) {\n        throw new RangeError(\"Automerge.use() not called (load)\");\n    },\n    encodeChange(change) {\n        throw new RangeError(\"Automerge.use() not called (encodeChange)\");\n    },\n    decodeChange(change) {\n        throw new RangeError(\"Automerge.use() not called (decodeChange)\");\n    },\n    initSyncState() {\n        throw new RangeError(\"Automerge.use() not called (initSyncState)\");\n    },\n    encodeSyncMessage(message) {\n        throw new RangeError(\"Automerge.use() not called (encodeSyncMessage)\");\n    },\n    decodeSyncMessage(msg) {\n        throw new RangeError(\"Automerge.use() not called (decodeSyncMessage)\");\n    },\n    encodeSyncState(state) {\n        throw new RangeError(\"Automerge.use() not called (encodeSyncState)\");\n    },\n    decodeSyncState(data) {\n        throw new RangeError(\"Automerge.use() not called (decodeSyncState)\");\n    },\n    exportSyncState(state) {\n        throw new RangeError(\"Automerge.use() not called (exportSyncState)\");\n    },\n    importSyncState(state) {\n        throw new RangeError(\"Automerge.use() not called (importSyncState)\");\n    },\n};\n/* eslint-enable */\n/**\n * Initialize the wasm module\n *\n * @param wasmBlob - The wasm module as a Uint8Array, Request, Promise\u003cUint8Array\u003e or string. If this argument is a string then it is assumed to be a URL and the library will attempt to fetch the wasm module from that URL.\n *\n * @remarks\n * If you are using the `/slim` subpath export then this function must be\n * called before any other functions in the library. If you are using any of\n * the other subpath exports then it will have already been called for you.\n */\nexport function initializeWasm(wasmBlob) {\n    return initWasm(wasmBlob).then(_ =\u003e {\n        UseApi(WasmApi);\n    });\n}\n/**\n * Initialize the wasm module from a base64 encoded string\n *\n * @param wasmBase64 - The bytes of the wasm file as a base64 encoded string\n */\nexport function initializeBase64Wasm(wasmBase64) {\n    return initializeWasm(Uint8Array.from(atob(wasmBase64), c =\u003e c.charCodeAt(0)));\n}\n/**\n * A promise which resolves when the web assembly module has been initialized\n * (or immediately if it has already been initialized)\n */\nexport function wasmInitialized() {\n    if (_initialized)\n        return Promise.resolve();\n    return new Promise(resolve =\u003e {\n        _initializeListeners.push(resolve);\n    });\n}\n/**\n * Check if the wasm module has been initialized\n *\n * @returns true if the wasm module has been initialized\n */\nexport function isWasmInitialized() {\n    return _initialized;\n}\n","import { CLEAR_CACHE, IS_PROXY, OBJECT_ID, STATE, TRACE } from \"./constants.js\";\nexport function _state(doc, checkroot = true) {\n    if (typeof doc !== \"object\") {\n        throw new RangeError(\"must be the document root\");\n    }\n    const state = Reflect.get(doc, STATE);\n    if (state === undefined ||\n        state == null ||\n        (checkroot \u0026\u0026 _obj(doc) !== \"_root\")) {\n        throw new RangeError(\"must be the document root\");\n    }\n    return state;\n}\nexport function _clear_cache(doc) {\n    Reflect.set(doc, CLEAR_CACHE, true);\n}\nexport function _trace(doc) {\n    return Reflect.get(doc, TRACE);\n}\nexport function _obj(doc) {\n    if (!(typeof doc === \"object\") || doc === null) {\n        return null;\n    }\n    return Reflect.get(doc, OBJECT_ID);\n}\nexport function _is_proxy(doc) {\n    return !!Reflect.get(doc, IS_PROXY);\n}\n","var __rest = (this \u0026\u0026 this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) \u0026\u0026 e.indexOf(p) \u003c 0)\n        t[p] = s[p];\n    if (s != null \u0026\u0026 typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i \u003c p.length; i++) {\n            if (e.indexOf(p[i]) \u003c 0 \u0026\u0026 Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\n/** @hidden **/\nexport { /** @hidden */ uuid } from \"./uuid.js\";\nimport { rootProxy } from \"./proxies.js\";\nimport { STATE } from \"./constants.js\";\nimport { Counter, } from \"./types.js\";\nexport { Counter, Int, Uint, Float64, } from \"./types.js\";\nimport { Text } from \"./text.js\";\nexport { Text } from \"./text.js\";\nconst SyncStateSymbol = Symbol(\"_syncstate\");\nimport { ApiHandler, UseApi } from \"./low_level.js\";\nexport { initializeWasm, initializeBase64Wasm, wasmInitialized, isWasmInitialized, } from \"./low_level.js\";\nimport { RawString } from \"./raw_string.js\";\nimport { _state, _is_proxy, _trace, _obj } from \"./internal_state.js\";\nimport { stableConflictAt } from \"./conflicts.js\";\n/**\n * Function for use in {@link change} which inserts values into a list at a given index\n * @param list\n * @param index\n * @param values\n */\nexport function insertAt(list, index, ...values) {\n    if (!_is_proxy(list)) {\n        throw new RangeError(\"object cannot be modified outside of a change block\");\n    }\n    ;\n    list.insertAt(index, ...values);\n}\n/**\n * Function for use in {@link change} which deletes values from a list at a given index\n * @param list\n * @param index\n * @param numDelete\n */\nexport function deleteAt(list, index, numDelete) {\n    if (!_is_proxy(list)) {\n        throw new RangeError(\"object cannot be modified outside of a change block\");\n    }\n    ;\n    list.deleteAt(index, numDelete);\n}\n/** @hidden **/\nexport function use(api) {\n    UseApi(api);\n}\n/** @hidden */\nexport function getBackend(doc) {\n    return _state(doc).handle;\n}\nfunction importOpts(_actor) {\n    if (typeof _actor === \"object\") {\n        return _actor;\n    }\n    else {\n        return { actor: _actor };\n    }\n}\n/**\n * Create a new automerge document\n *\n * @typeParam T - The type of value contained in the document. This will be the\n *     type that is passed to the change closure in {@link change}\n * @param _opts - Either an actorId or an {@link InitOptions} (which may\n *     contain an actorId). If this is null the document will be initialised with a\n *     random actor ID\n */\nexport function init(_opts) {\n    const opts = importOpts(_opts);\n    const freeze = !!opts.freeze;\n    const patchCallback = opts.patchCallback;\n    const text_v1 = !(opts.enableTextV2 || false);\n    const actor = opts.actor;\n    const handle = ApiHandler.create({ actor, text_v1 });\n    handle.enableFreeze(!!opts.freeze);\n    const textV2 = opts.enableTextV2 || false;\n    registerDatatypes(handle, textV2);\n    const doc = handle.materialize(\"/\", undefined, {\n        handle,\n        heads: undefined,\n        freeze,\n        patchCallback,\n        textV2,\n    });\n    return doc;\n}\n/**\n * Make an immutable view of an automerge document as at `heads`\n *\n * @remarks\n * The document returned from this function cannot be passed to {@link change}.\n * This is because it shares the same underlying memory as `doc`, but it is\n * consequently a very cheap copy.\n *\n * Note that this function will throw an error if any of the hashes in `heads`\n * are not in the document.\n *\n * @typeParam T - The type of the value contained in the document\n * @param doc - The document to create a view of\n * @param heads - The hashes of the heads to create a view at\n */\nexport function view(doc, heads) {\n    const state = _state(doc);\n    const handle = state.handle;\n    return state.handle.materialize(\"/\", heads, Object.assign(Object.assign({}, state), { handle,\n        heads }));\n}\n/**\n * Make a full writable copy of an automerge document\n *\n * @remarks\n * Unlike {@link view} this function makes a full copy of the memory backing\n * the document and can thus be passed to {@link change}. It also generates a\n * new actor ID so that changes made in the new document do not create duplicate\n * sequence numbers with respect to the old document. If you need control over\n * the actor ID which is generated you can pass the actor ID as the second\n * argument\n *\n * @typeParam T - The type of the value contained in the document\n * @param doc - The document to clone\n * @param _opts - Either an actor ID to use for the new doc or an {@link InitOptions}\n */\nexport function clone(doc, _opts) {\n    const state = _state(doc);\n    const heads = state.heads;\n    const opts = importOpts(_opts);\n    const handle = state.handle.fork(opts.actor, heads);\n    handle.updateDiffCursor();\n    // `change` uses the presence of state.heads to determine if we are in a view\n    // set it to undefined to indicate that this is a full fat document\n    const { heads: _oldHeads } = state, stateSansHeads = __rest(state, [\"heads\"]);\n    stateSansHeads.patchCallback = opts.patchCallback;\n    return handle.applyPatches(doc, Object.assign(Object.assign({}, stateSansHeads), { handle }));\n}\n/** Explicity free the memory backing a document. Note that this is note\n * necessary in environments which support\n * [`FinalizationRegistry`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/FinalizationRegistry)\n */\nexport function free(doc) {\n    return _state(doc).handle.free();\n}\n/**\n * Create an automerge document from a POJO\n *\n * @param initialState - The initial state which will be copied into the document\n * @typeParam T - The type of the value passed to `from` _and_ the type the resulting document will contain\n * @typeParam actor - The actor ID of the resulting document, if this is null a random actor ID will be used\n *\n * @example\n * ```\n * const doc = automerge.from({\n *     tasks: [\n *         {description: \"feed dogs\", done: false}\n *     ]\n * })\n * ```\n */\nexport function from(initialState, _opts) {\n    return _change(init(_opts), \"from\", {}, d =\u003e Object.assign(d, initialState))\n        .newDoc;\n}\n/**\n * Update the contents of an automerge document\n * @typeParam T - The type of the value contained in the document\n * @param doc - The document to update\n * @param options - Either a message, an {@link ChangeOptions}, or a {@link ChangeFn}\n * @param callback - A `ChangeFn` to be used if `options` was a `string`\n *\n * Note that if the second argument is a function it will be used as the `ChangeFn` regardless of what the third argument is.\n *\n * @example A simple change\n * ```\n * let doc1 = automerge.init()\n * doc1 = automerge.change(doc1, d =\u003e {\n *     d.key = \"value\"\n * })\n * assert.equal(doc1.key, \"value\")\n * ```\n *\n * @example A change with a message\n *\n * ```\n * doc1 = automerge.change(doc1, \"add another value\", d =\u003e {\n *     d.key2 = \"value2\"\n * })\n * ```\n *\n * @example A change with a message and a timestamp\n *\n * ```\n * doc1 = automerge.change(doc1, {message: \"add another value\", time: 1640995200}, d =\u003e {\n *     d.key2 = \"value2\"\n * })\n * ```\n *\n * @example responding to a patch callback\n * ```\n * let patchedPath\n * let patchCallback = patch =\u003e {\n *    patchedPath = patch.path\n * }\n * doc1 = automerge.change(doc1, {message: \"add another value\", time: 1640995200, patchCallback}, d =\u003e {\n *     d.key2 = \"value2\"\n * })\n * assert.equal(patchedPath, [\"key2\"])\n * ```\n */\nexport function change(doc, options, callback) {\n    if (typeof options === \"function\") {\n        return _change(doc, \"change\", {}, options).newDoc;\n    }\n    else if (typeof callback === \"function\") {\n        if (typeof options === \"string\") {\n            options = { message: options };\n        }\n        return _change(doc, \"change\", options, callback).newDoc;\n    }\n    else {\n        throw RangeError(\"Invalid args for change\");\n    }\n}\n/**\n * Make a change to the document as it was at a particular point in history\n * @typeParam T - The type of the value contained in the document\n * @param doc - The document to update\n * @param scope - The heads representing the point in history to make the change\n * @param options - Either a message or a {@link ChangeOptions} for the new change\n * @param callback - A `ChangeFn` to be used if `options` was a `string`\n *\n * @remarks\n * This function is similar to {@link change} but allows you to make changes to\n * the document as if it were at a particular point in time. To understand this\n * imagine a document created with the following history:\n *\n * ```ts\n * let doc = automerge.from({..})\n * doc = automerge.change(doc, () =\u003e {...})\n *\n * const heads = automerge.getHeads(doc)\n *\n * // fork the document make a change\n * let fork = automerge.fork(doc)\n * fork = automerge.change(fork, () =\u003e {...})\n * const headsOnFork = automerge.getHeads(fork)\n *\n * // make a change on the original doc\n * doc = automerge.change(doc, () =\u003e {...})\n * const headsOnOriginal = automerge.getHeads(doc)\n *\n * // now merge the changes back to the original document\n * doc = automerge.merge(doc, fork)\n *\n * // The heads of the document will now be (headsOnFork, headsOnOriginal)\n * ```\n *\n * {@link ChangeAt} produces an equivalent history, but without having to\n * create a fork of the document. In particular the `newHeads` field of the\n * returned {@link ChangeAtResult} will be the same as `headsOnFork`.\n *\n * Why would you want this? It's typically used in conjunction with {@link diff}\n * to reconcile state which is managed concurrently with the document. For\n * example, if you have a text editor component which the user is modifying\n * and you can't send the changes to the document synchronously you might follow\n * a workflow like this:\n *\n * * On initialization save the current heads of the document in the text editor state\n * * Every time the user makes a change record the change in the text editor state\n *\n * Now from time to time reconcile the editor state and the document\n * * Load the last saved heads from the text editor state, call them `oldHeads`\n * * Apply all the unreconciled changes to the document using `changeAt(doc, oldHeads, ...)`\n * * Get the diff from the resulting document to the current document using {@link diff}\n *   passing the {@link ChangeAtResult.newHeads} as the `before` argument and the\n *   heads of the entire document as the `after` argument.\n * * Apply the diff to the text editor state\n * * Save the current heads of the document in the text editor state\n */\nexport function changeAt(doc, scope, options, callback) {\n    if (typeof options === \"function\") {\n        return _change(doc, \"changeAt\", {}, options, scope);\n    }\n    else if (typeof callback === \"function\") {\n        if (typeof options === \"string\") {\n            options = { message: options };\n        }\n        return _change(doc, \"changeAt\", options, callback, scope);\n    }\n    else {\n        throw RangeError(\"Invalid args for changeAt\");\n    }\n}\nfunction progressDocument(doc, source, heads, callback) {\n    if (heads == null) {\n        return doc;\n    }\n    const state = _state(doc);\n    const nextState = Object.assign(Object.assign({}, state), { heads: undefined });\n    const { value: nextDoc, patches } = state.handle.applyAndReturnPatches(doc, nextState);\n    if (patches.length \u003e 0) {\n        if (callback != null) {\n            callback(patches, { before: doc, after: nextDoc, source });\n        }\n        const newState = _state(nextDoc);\n        newState.mostRecentPatch = {\n            before: _state(doc).heads,\n            after: newState.handle.getHeads(),\n            patches,\n        };\n    }\n    state.heads = heads;\n    return nextDoc;\n}\nfunction _change(doc, source, options, callback, scope) {\n    if (typeof callback !== \"function\") {\n        throw new RangeError(\"invalid change function\");\n    }\n    const state = _state(doc);\n    if (doc === undefined || state === undefined) {\n        throw new RangeError(\"must be the document root\");\n    }\n    if (state.heads) {\n        throw new RangeError(\"Attempting to change an outdated document.  Use Automerge.clone() if you wish to make a writable copy.\");\n    }\n    if (_is_proxy(doc)) {\n        throw new RangeError(\"Calls to Automerge.change cannot be nested\");\n    }\n    let heads = state.handle.getHeads();\n    if (scope \u0026\u0026 headsEqual(scope, heads)) {\n        scope = undefined;\n    }\n    if (scope) {\n        state.handle.isolate(scope);\n        heads = scope;\n    }\n    if (!(\"time\" in options)) {\n        options.time = Math.floor(Date.now() / 1000);\n    }\n    try {\n        state.heads = heads;\n        const root = rootProxy(state.handle, state.textV2);\n        callback(root);\n        if (state.handle.pendingOps() === 0) {\n            state.heads = undefined;\n            if (scope) {\n                state.handle.integrate();\n            }\n            return {\n                newDoc: doc,\n                newHeads: null,\n            };\n        }\n        else {\n            const newHead = state.handle.commit(options.message, options.time);\n            state.handle.integrate();\n            return {\n                newDoc: progressDocument(doc, source, heads, options.patchCallback || state.patchCallback),\n                newHeads: newHead != null ? [newHead] : null,\n            };\n        }\n    }\n    catch (e) {\n        state.heads = undefined;\n        state.handle.rollback();\n        throw e;\n    }\n}\n/**\n * Make a change to a document which does not modify the document\n *\n * @param doc - The doc to add the empty change to\n * @param options - Either a message or a {@link ChangeOptions} for the new change\n *\n * Why would you want to do this? One reason might be that you have merged\n * changes from some other peers and you want to generate a change which\n * depends on those merged changes so that you can sign the new change with all\n * of the merged changes as part of the new change.\n */\nexport function emptyChange(doc, options) {\n    if (options === undefined) {\n        options = {};\n    }\n    if (typeof options === \"string\") {\n        options = { message: options };\n    }\n    if (!(\"time\" in options)) {\n        options.time = Math.floor(Date.now() / 1000);\n    }\n    const state = _state(doc);\n    if (state.heads) {\n        throw new RangeError(\"Attempting to change an outdated document.  Use Automerge.clone() if you wish to make a writable copy.\");\n    }\n    if (_is_proxy(doc)) {\n        throw new RangeError(\"Calls to Automerge.change cannot be nested\");\n    }\n    const heads = state.handle.getHeads();\n    state.handle.emptyChange(options.message, options.time);\n    return progressDocument(doc, \"emptyChange\", heads);\n}\n/**\n * Load an automerge document from a compressed document produce by {@link save}\n *\n * @typeParam T - The type of the value which is contained in the document.\n *                Note that no validation is done to make sure this type is in\n *                fact the type of the contained value so be a bit careful\n * @param data  - The compressed document\n * @param _opts - Either an actor ID or some {@link InitOptions}, if the actor\n *                ID is null a random actor ID will be created\n *\n * Note that `load` will throw an error if passed incomplete content (for\n * example if you are receiving content over the network and don't know if you\n * have the complete document yet). If you need to handle incomplete content use\n * {@link init} followed by {@link loadIncremental}.\n */\nexport function load(data, _opts) {\n    const opts = importOpts(_opts);\n    const actor = opts.actor;\n    const patchCallback = opts.patchCallback;\n    const text_v1 = !(opts.enableTextV2 || false);\n    const unchecked = opts.unchecked || false;\n    const allowMissingDeps = opts.allowMissingChanges || false;\n    const convertRawStringsToText = opts.convertRawStringsToText || false;\n    const handle = ApiHandler.load(data, {\n        text_v1,\n        actor,\n        unchecked,\n        allowMissingDeps,\n        convertRawStringsToText,\n    });\n    handle.enableFreeze(!!opts.freeze);\n    const textV2 = opts.enableTextV2 || false;\n    registerDatatypes(handle, textV2);\n    const doc = handle.materialize(\"/\", undefined, {\n        handle,\n        heads: undefined,\n        patchCallback,\n        textV2,\n    });\n    return doc;\n}\n/**\n * Load changes produced by {@link saveIncremental}, or partial changes\n *\n * @typeParam T - The type of the value which is contained in the document.\n *                Note that no validation is done to make sure this type is in\n *                fact the type of the contained value so be a bit careful\n * @param data  - The compressedchanges\n * @param opts  - an {@link ApplyOptions}\n *\n * This function is useful when staying up to date with a connected peer.\n * Perhaps the other end sent you a full compresed document which you loaded\n * with {@link load} and they're sending you the result of\n * {@link getLastLocalChange} every time they make a change.\n *\n * Note that this function will succesfully load the results of {@link save} as\n * well as {@link getLastLocalChange} or any other incremental change.\n */\nexport function loadIncremental(doc, data, opts) {\n    if (!opts) {\n        opts = {};\n    }\n    const state = _state(doc);\n    if (state.heads) {\n        throw new RangeError(\"Attempting to change an out of date document - set at: \" + _trace(doc));\n    }\n    if (_is_proxy(doc)) {\n        throw new RangeError(\"Calls to Automerge.change cannot be nested\");\n    }\n    const heads = state.handle.getHeads();\n    state.handle.loadIncremental(data);\n    return progressDocument(doc, \"loadIncremental\", heads, opts.patchCallback || state.patchCallback);\n}\n/**\n * Create binary save data to be appended to a save file or fed into {@link loadIncremental}\n *\n * @typeParam T - The type of the value which is contained in the document.\n *                Note that no validation is done to make sure this type is in\n *                fact the type of the contained value so be a bit careful\n *\n * This function is useful for incrementally saving state.  The data can be appended to a\n * automerge save file, or passed to a document replicating its state.\n *\n */\nexport function saveIncremental(doc) {\n    const state = _state(doc);\n    if (state.heads) {\n        throw new RangeError(\"Attempting to change an out of date document - set at: \" + _trace(doc));\n    }\n    if (_is_proxy(doc)) {\n        throw new RangeError(\"Calls to Automerge.change cannot be nested\");\n    }\n    return state.handle.saveIncremental();\n}\n/**\n * Export the contents of a document to a compressed format\n *\n * @param doc - The doc to save\n *\n * The returned bytes can be passed to {@link load} or {@link loadIncremental}\n */\nexport function save(doc) {\n    return _state(doc).handle.save();\n}\n/**\n * Merge `remote` into `local`\n * @typeParam T - The type of values contained in each document\n * @param local - The document to merge changes into\n * @param remote - The document to merge changes from\n *\n * @returns - The merged document\n *\n * Often when you are merging documents you will also need to clone them. Both\n * arguments to `merge` are frozen after the call so you can no longer call\n * mutating methods (such as {@link change}) on them. The symtom of this will be\n * an error which says \"Attempting to change an out of date document\". To\n * overcome this call {@link clone} on the argument before passing it to {@link\n * merge}.\n */\nexport function merge(local, remote) {\n    const localState = _state(local);\n    if (localState.heads) {\n        throw new RangeError(\"Attempting to change an out of date document - set at: \" + _trace(local));\n    }\n    const heads = localState.handle.getHeads();\n    const remoteState = _state(remote);\n    const changes = localState.handle.getChangesAdded(remoteState.handle);\n    localState.handle.applyChanges(changes);\n    return progressDocument(local, \"merge\", heads, localState.patchCallback);\n}\n/**\n * Get the actor ID associated with the document\n */\nexport function getActorId(doc) {\n    const state = _state(doc);\n    return state.handle.getActorId();\n}\n/**\n * Get the conflicts associated with a property\n *\n * The values of properties in a map in automerge can be conflicted if there\n * are concurrent \"put\" operations to the same key. Automerge chooses one value\n * arbitrarily (but deterministically, any two nodes who have the same set of\n * changes will choose the same value) from the set of conflicting values to\n * present as the value of the key.\n *\n * Sometimes you may want to examine these conflicts, in this case you can use\n * {@link getConflicts} to get the conflicts for the key.\n *\n * @example\n * ```\n * import * as automerge from \"@automerge/automerge\"\n *\n * type Profile = {\n *     pets: Array\u003c{name: string, type: string}\u003e\n * }\n *\n * let doc1 = automerge.init\u003cProfile\u003e(\"aaaa\")\n * doc1 = automerge.change(doc1, d =\u003e {\n *     d.pets = [{name: \"Lassie\", type: \"dog\"}]\n * })\n * let doc2 = automerge.init\u003cProfile\u003e(\"bbbb\")\n * doc2 = automerge.merge(doc2, automerge.clone(doc1))\n *\n * doc2 = automerge.change(doc2, d =\u003e {\n *     d.pets[0].name = \"Beethoven\"\n * })\n *\n * doc1 = automerge.change(doc1, d =\u003e {\n *     d.pets[0].name = \"Babe\"\n * })\n *\n * const doc3 = automerge.merge(doc1, doc2)\n *\n * // Note that here we pass `doc3.pets`, not `doc3`\n * let conflicts = automerge.getConflicts(doc3.pets[0], \"name\")\n *\n * // The two conflicting values are the keys of the conflicts object\n * assert.deepEqual(Object.values(conflicts), [\"Babe\", Beethoven\"])\n * ```\n */\nexport function getConflicts(doc, prop) {\n    const state = _state(doc, false);\n    if (state.textV2) {\n        throw new Error(\"use unstable.getConflicts for an unstable document\");\n    }\n    const objectId = _obj(doc);\n    if (objectId != null) {\n        return stableConflictAt(state.handle, objectId, prop);\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * Get the binary representation of the last change which was made to this doc\n *\n * This is most useful when staying in sync with other peers, every time you\n * make a change locally via {@link change} you immediately call {@link\n * getLastLocalChange} and send the result over the network to other peers.\n */\nexport function getLastLocalChange(doc) {\n    const state = _state(doc);\n    return state.handle.getLastLocalChange() || undefined;\n}\n/**\n * Return the object ID of an arbitrary javascript value\n *\n * This is useful to determine if something is actually an automerge document,\n * if `doc` is not an automerge document this will return null.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function getObjectId(doc, prop) {\n    if (prop) {\n        const state = _state(doc, false);\n        const objectId = _obj(doc);\n        if (!state || !objectId) {\n            return null;\n        }\n        return state.handle.get(objectId, prop);\n    }\n    else {\n        return _obj(doc);\n    }\n}\n/**\n * Get the changes which are in `newState` but not in `oldState`. The returned\n * changes can be loaded in `oldState` via {@link applyChanges}.\n *\n * Note that this will crash if there are changes in `oldState` which are not in `newState`.\n */\nexport function getChanges(oldState, newState) {\n    const n = _state(newState);\n    return n.handle.getChanges(getHeads(oldState));\n}\n/**\n * Get all the changes in a document\n *\n * This is different to {@link save} because the output is an array of changes\n * which can be individually applied via {@link applyChanges}`\n *\n */\nexport function getAllChanges(doc) {\n    const state = _state(doc);\n    return state.handle.getChanges([]);\n}\n/**\n * Apply changes received from another document\n *\n * `doc` will be updated to reflect the `changes`. If there are changes which\n * we do not have dependencies for yet those will be stored in the document and\n * applied when the depended on changes arrive.\n *\n * You can use the {@link ApplyOptions} to pass a patchcallback which will be\n * informed of any changes which occur as a result of applying the changes\n *\n */\nexport function applyChanges(doc, changes, opts) {\n    const state = _state(doc);\n    if (!opts) {\n        opts = {};\n    }\n    if (state.heads) {\n        throw new RangeError(\"Attempting to change an outdated document.  Use Automerge.clone() if you wish to make a writable copy.\");\n    }\n    if (_is_proxy(doc)) {\n        throw new RangeError(\"Calls to Automerge.change cannot be nested\");\n    }\n    const heads = state.handle.getHeads();\n    state.handle.applyChanges(changes);\n    state.heads = heads;\n    return [\n        progressDocument(doc, \"applyChanges\", heads, opts.patchCallback || state.patchCallback),\n    ];\n}\n/** @hidden */\nexport function getHistory(doc) {\n    const textV2 = _state(doc).textV2;\n    const history = getAllChanges(doc);\n    return history.map((change, index) =\u003e ({\n        get change() {\n            return decodeChange(change);\n        },\n        get snapshot() {\n            const [state] = applyChanges(init({ enableTextV2: textV2 }), history.slice(0, index + 1));\n            return state;\n        },\n    }));\n}\n/**\n * Create a set of patches representing the change from one set of heads to another\n *\n * If either of the heads are missing from the document the returned set of patches will be empty\n */\nexport function diff(doc, before, after) {\n    checkHeads(before, \"before\");\n    checkHeads(after, \"after\");\n    const state = _state(doc);\n    if (state.mostRecentPatch \u0026\u0026\n        equals(state.mostRecentPatch.before, before) \u0026\u0026\n        equals(state.mostRecentPatch.after, after)) {\n        return state.mostRecentPatch.patches;\n    }\n    return state.handle.diff(before, after);\n}\nfunction headsEqual(heads1, heads2) {\n    if (heads1.length !== heads2.length) {\n        return false;\n    }\n    for (let i = 0; i \u003c heads1.length; i++) {\n        if (heads1[i] !== heads2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction checkHeads(heads, fieldname) {\n    if (!Array.isArray(heads)) {\n        throw new Error(`${fieldname} must be an array`);\n    }\n}\n/** @hidden */\n// FIXME : no tests\n// FIXME can we just use deep equals now?\nexport function equals(val1, val2) {\n    if (!isObject(val1) || !isObject(val2))\n        return val1 === val2;\n    const keys1 = Object.keys(val1).sort(), keys2 = Object.keys(val2).sort();\n    if (keys1.length !== keys2.length)\n        return false;\n    for (let i = 0; i \u003c keys1.length; i++) {\n        if (keys1[i] !== keys2[i])\n            return false;\n        if (!equals(val1[keys1[i]], val2[keys2[i]]))\n            return false;\n    }\n    return true;\n}\n/**\n * encode a {@link SyncState} into binary to send over the network\n *\n * @group sync\n * */\nexport function encodeSyncState(state) {\n    const sync = ApiHandler.importSyncState(state);\n    const result = ApiHandler.encodeSyncState(sync);\n    sync.free();\n    return result;\n}\n/**\n * Decode some binary data into a {@link SyncState}\n *\n * @group sync\n */\nexport function decodeSyncState(state) {\n    const sync = ApiHandler.decodeSyncState(state);\n    const result = ApiHandler.exportSyncState(sync);\n    sync.free();\n    return result;\n}\n/**\n * Generate a sync message to send to the peer represented by `inState`\n * @param doc - The doc to generate messages about\n * @param inState - The {@link SyncState} representing the peer we are talking to\n *\n * @group sync\n *\n * @returns An array of `[newSyncState, syncMessage | null]` where\n * `newSyncState` should replace `inState` and `syncMessage` should be sent to\n * the peer if it is not null. If `syncMessage` is null then we are up to date.\n */\nexport function generateSyncMessage(doc, inState) {\n    const state = _state(doc);\n    const syncState = ApiHandler.importSyncState(inState);\n    const message = state.handle.generateSyncMessage(syncState);\n    const outState = ApiHandler.exportSyncState(syncState);\n    return [outState, message];\n}\n/**\n * Update a document and our sync state on receiving a sync message\n *\n * @group sync\n *\n * @param doc     - The doc the sync message is about\n * @param inState - The {@link SyncState} for the peer we are communicating with\n * @param message - The message which was received\n * @param opts    - Any {@link ApplyOption}s, used for passing a\n *                  {@link PatchCallback} which will be informed of any changes\n *                  in `doc` which occur because of the received sync message.\n *\n * @returns An array of `[newDoc, newSyncState, syncMessage | null]` where\n * `newDoc` is the updated state of `doc`, `newSyncState` should replace\n * `inState` and `syncMessage` should be sent to the peer if it is not null. If\n * `syncMessage` is null then we are up to date.\n */\nexport function receiveSyncMessage(doc, inState, message, opts) {\n    const syncState = ApiHandler.importSyncState(inState);\n    if (!opts) {\n        opts = {};\n    }\n    const state = _state(doc);\n    if (state.heads) {\n        throw new RangeError(\"Attempting to change an outdated document.  Use Automerge.clone() if you wish to make a writable copy.\");\n    }\n    if (_is_proxy(doc)) {\n        throw new RangeError(\"Calls to Automerge.change cannot be nested\");\n    }\n    const heads = state.handle.getHeads();\n    state.handle.receiveSyncMessage(syncState, message);\n    const outSyncState = ApiHandler.exportSyncState(syncState);\n    return [\n        progressDocument(doc, \"receiveSyncMessage\", heads, opts.patchCallback || state.patchCallback),\n        outSyncState,\n        null,\n    ];\n}\n/**\n * Check whether the replica represented by `remoteState` has all our changes\n *\n * @param doc - The doc to check whether the remote has changes for\n * @param remoteState - The {@link SyncState} representing the peer we are talking to\n *\n * @group sync\n *\n * @returns true if the remote has all of our changes\n */\nexport function hasOurChanges(doc, remoteState) {\n    const state = _state(doc);\n    const syncState = ApiHandler.importSyncState(remoteState);\n    return state.handle.hasOurChanges(syncState);\n}\n/**\n * Create a new, blank {@link SyncState}\n *\n * When communicating with a peer for the first time use this to generate a new\n * {@link SyncState} for them\n *\n * @group sync\n */\nexport function initSyncState() {\n    return ApiHandler.exportSyncState(ApiHandler.initSyncState());\n}\n/** @hidden */\nexport function encodeChange(change) {\n    return ApiHandler.encodeChange(change);\n}\n/** @hidden */\nexport function decodeChange(data) {\n    return ApiHandler.decodeChange(data);\n}\n/** @hidden */\nexport function encodeSyncMessage(message) {\n    return ApiHandler.encodeSyncMessage(message);\n}\n/** @hidden */\nexport function decodeSyncMessage(message) {\n    return ApiHandler.decodeSyncMessage(message);\n}\n/**\n * Get any changes in `doc` which are not dependencies of `heads`\n */\nexport function getMissingDeps(doc, heads) {\n    const state = _state(doc);\n    return state.handle.getMissingDeps(heads);\n}\n/**\n * Get the hashes of the heads of this document\n */\nexport function getHeads(doc) {\n    const state = _state(doc);\n    return state.heads || state.handle.getHeads();\n}\n/** @hidden */\nexport function dump(doc) {\n    const state = _state(doc);\n    state.handle.dump();\n}\n/** @hidden */\nexport function toJS(doc) {\n    const state = _state(doc);\n    const enabled = state.handle.enableFreeze(false);\n    const result = state.handle.materialize();\n    state.handle.enableFreeze(enabled);\n    return result;\n}\nexport function isAutomerge(doc) {\n    if (typeof doc == \"object\" \u0026\u0026 doc !== null) {\n        return getObjectId(doc) === \"_root\" \u0026\u0026 !!Reflect.get(doc, STATE);\n    }\n    else {\n        return false;\n    }\n}\nfunction isObject(obj) {\n    return typeof obj === \"object\" \u0026\u0026 obj !== null;\n}\nexport function saveSince(doc, heads) {\n    const state = _state(doc);\n    const result = state.handle.saveSince(heads);\n    return result;\n}\n/**\n * Returns true if the document has all of the given heads somewhere in its history\n */\nexport function hasHeads(doc, heads) {\n    const state = _state(doc);\n    for (const hash of heads) {\n        if (!state.handle.getChangeByHash(hash)) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction registerDatatypes(handle, textV2) {\n    handle.registerDatatype(\"counter\", (n) =\u003e new Counter(n), n =\u003e {\n        if (n instanceof Counter) {\n            return n.value;\n        }\n    });\n    if (textV2) {\n        handle.registerDatatype(\"str\", (n) =\u003e {\n            return new RawString(n);\n        }, s =\u003e {\n            if (s instanceof RawString) {\n                return s.val;\n            }\n        });\n    }\n    else {\n        handle.registerDatatype(\"text\", (n) =\u003e new Text(n), t =\u003e {\n            if (t instanceof Text) {\n                return t.join(\"\");\n            }\n        });\n    }\n}\n/**\n * @hidden\n */\nexport function topoHistoryTraversal(doc) {\n    const state = _state(doc);\n    return state.handle.topoHistoryTraversal();\n}\n/**\n * Decode a change hash into the details of this change\n *\n * This should be considered a semi-stable API. We try not to change the\n * encoding in backwards incompatible ways but we won't bump a major version if\n * we do have to change it\n */\nexport function inspectChange(doc, changeHash) {\n    const state = _state(doc);\n    return state.handle.getDecodedChangeByHash(changeHash);\n}\n/**\n * Return some internal statistics about the document\n */\nexport function stats(doc) {\n    const state = _state(doc);\n    return state.handle.stats();\n}\n","import * as A from \"@automerge/automerge/slim/next\";\nimport debug from \"debug\";\nimport { EventEmitter } from \"eventemitter3\";\nimport { assertEvent, assign, createActor, setup, waitFor } from \"xstate\";\nimport { stringifyAutomergeUrl } from \"./AutomergeUrl.js\";\nimport { encode } from \"./helpers/cbor.js\";\nimport { headsAreSame } from \"./helpers/headsAreSame.js\";\nimport { withTimeout } from \"./helpers/withTimeout.js\";\n/**\n * A DocHandle is a wrapper around a single Automerge document that lets us listen for changes and\n * notify the network and storage of new changes.\n *\n * @remarks\n * A `DocHandle` represents a document which is being managed by a {@link Repo}. You shouldn't ever\n * instantiate this yourself. To obtain `DocHandle` use {@link Repo.find} or {@link Repo.create}.\n *\n * To modify the underlying document use either {@link DocHandle.change} or\n * {@link DocHandle.changeAt}. These methods will notify the `Repo` that some change has occured and\n * the `Repo` will save any new changes to the attached {@link StorageAdapter} and send sync\n * messages to connected peers.\n */\nexport class DocHandle extends EventEmitter {\n    documentId;\n    #log;\n    /** The XState actor running our state machine.  */\n    #machine;\n    /** The last known state of our document. */\n    #prevDocState = A.init();\n    /** How long to wait before giving up on a document. (Note that a document will be marked\n     * unavailable much sooner if all known peers respond that they don't have it.) */\n    #timeoutDelay = 60_000;\n    /** A dictionary mapping each peer to the last heads we know they have. */\n    #remoteHeads = {};\n    /** @hidden */\n    constructor(documentId, options = {}) {\n        super();\n        this.documentId = documentId;\n        if (\"timeoutDelay\" in options \u0026\u0026 options.timeoutDelay) {\n            this.#timeoutDelay = options.timeoutDelay;\n        }\n        const doc = A.init();\n        this.#log = debug(`automerge-repo:dochandle:${this.documentId.slice(0, 5)}`);\n        const delay = this.#timeoutDelay;\n        const machine = setup({\n            types: {\n                context: {},\n                events: {},\n            },\n            actions: {\n                /** Update the doc using the given callback and put the modified doc in context */\n                onUpdate: assign(({ context, event }) =\u003e {\n                    const oldDoc = context.doc;\n                    assertEvent(event, UPDATE);\n                    const { callback } = event.payload;\n                    const doc = callback(oldDoc);\n                    return { doc };\n                }),\n                onDelete: assign(() =\u003e {\n                    this.emit(\"delete\", { handle: this });\n                    return { doc: A.init() };\n                }),\n                onUnavailable: () =\u003e {\n                    this.emit(\"unavailable\", { handle: this });\n                },\n            },\n        }).createMachine({\n            /** @xstate-layout N4IgpgJg5mDOIC5QAoC2BDAxgCwJYDswBKAYgFUAFAEQEEAVAUQG0AGAXUVAAcB7WXAC64e+TiAAeiAOwAOAKwA6ACxSAzKqks1ATjlTdAGhABPRAFolAJksKN2y1KtKAbFLla5AX09G0WPISkVAwAMgyMrBxIILz8QiJikggAjCzOijKqLEqqybJyLizaRqYIFpbJtro5Uo7J2o5S3r4YOATECrgQADZgJADCAEoM9MzsYrGCwqLRSeoyCtra8pa5adquySXmDjY5ac7JljLJeepKzSB+bYGdPX0AYgCSAHJUkRN8UwmziM7HCgqyVcUnqcmScmcMm2ZV2yiyzkOx1OalUFx8V1aAQ63R46AgBCgJGGAEUyAwAMp0D7RSbxGagJKHFgKOSWJTJGRSCosCpKaEmRCqbQKU5yXINeTaer6LwY67YogKXH4wkkKgAeX6AH1hjQqABNGncL70xKIJQ5RY5BHOJag6wwpRyEWImQVeT1aWrVSXBXtJUqgn4Ik0ADqNCedG1L3CYY1gwA0saYqbpuaEG4pKLksKpFDgcsCjDhTnxTKpTLdH6sQGFOgAO7oKYhl5gAQNngAJwA1iRY3R40ndSNDSm6enfpm5BkWAVkvy7bpuTCKq7ndZnfVeSwuTX-HWu2AAI4AVzgQhD6q12rILxoADVIyEaAAhMLjtM-RmIE4LVSQi4nLLDIGzOCWwLKA0cgyLBoFWNy+43B0R5nheaqajqepjuMtJfgyEh-FoixqMCoKqOyhzgYKCDOq6UIeuCSxHOoSGKgop74OgABuzbdOgABGvTXlho5GrhJpxJOP4pLulT6KoMhpJY2hzsWNF0QobqMV6LG+pc+A8BAcBiP6gSfFJ36EQgKksksKxrHamwwmY7gLKB85QjBzoAWxdZdL0FnfARST8ooLC7qoTnWBU4pyC5ViVMKBQaHUDQuM4fm3EGhJBWaU7-CysEAUp3LpEpWw0WYRw2LmqzgqciIsCxWUdI2zaXlAbYdt2PZ5dJ1n5jY2iJY1ikOIcMJHCyUWHC62hRZkUVNPKta3Kh56wJ1-VWUyzhFc64JWJCtQNBBzhQW4cHwbsrVKpxPF8YJgV4ZZIWIKkiKiiNSkqZYWjzCWaQ5hFh0AcCuR3QoR74qUknBRmzholpv3OkpRQNNRpTzaKTWKbIWR5FDxm9AIkA7e9skUYCWayLILBZGoLkUSKbIyIdpxHPoyTeN4QA */\n            // You can use the XState extension for VS Code to visualize this machine.\n            // Or, you can see this static visualization (last updated April 2024): https://stately.ai/registry/editor/d7af9b58-c518-44f1-9c36-92a238b04a7a?machineId=91c387e7-0f01-42c9-a21d-293e9bf95bb7\n            initial: \"idle\",\n            context: { documentId, doc },\n            on: {\n                UPDATE: { actions: \"onUpdate\" },\n                DELETE: \".deleted\",\n            },\n            states: {\n                idle: {\n                    on: {\n                        BEGIN: \"loading\",\n                    },\n                },\n                loading: {\n                    on: {\n                        REQUEST: \"requesting\",\n                        DOC_READY: \"ready\",\n                    },\n                    after: { [delay]: \"unavailable\" },\n                },\n                requesting: {\n                    on: {\n                        DOC_UNAVAILABLE: \"unavailable\",\n                        DOC_READY: \"ready\",\n                    },\n                    after: { [delay]: \"unavailable\" },\n                },\n                unavailable: {\n                    entry: \"onUnavailable\",\n                    on: { DOC_READY: \"ready\" },\n                },\n                ready: {},\n                deleted: { entry: \"onDelete\", type: \"final\" },\n            },\n        });\n        // Instantiate the state machine\n        this.#machine = createActor(machine);\n        // Listen for state transitions\n        this.#machine.subscribe(state =\u003e {\n            const before = this.#prevDocState;\n            const after = state.context.doc;\n            this.#log(`→ ${state.value} %o`, after);\n            // if the document has changed, emit a change event\n            this.#checkForChanges(before, after);\n        });\n        // Start the machine, and send a create or find event to get things going\n        this.#machine.start();\n        this.#machine.send({ type: BEGIN });\n    }\n    // PRIVATE\n    /** Returns the current document, regardless of state */\n    get #doc() {\n        return this.#machine?.getSnapshot().context.doc;\n    }\n    /** Returns the docHandle's state (READY, etc.) */\n    get #state() {\n        return this.#machine?.getSnapshot().value;\n    }\n    /** Returns a promise that resolves when the docHandle is in one of the given states */\n    #statePromise(awaitStates) {\n        const awaitStatesArray = Array.isArray(awaitStates)\n            ? awaitStates\n            : [awaitStates];\n        return waitFor(this.#machine, s =\u003e awaitStatesArray.some(state =\u003e s.matches(state)), \n        // use a longer delay here so as not to race with other delays\n        { timeout: this.#timeoutDelay * 2 });\n    }\n    /**\n     * Called after state transitions. If the document has changed, emits a change event. If we just\n     * received the document for the first time, signal that our request has been completed.\n     */\n    #checkForChanges(before, after) {\n        const beforeHeads = A.getHeads(before);\n        const afterHeads = A.getHeads(after);\n        const docChanged = !headsAreSame(afterHeads, beforeHeads);\n        if (docChanged) {\n            this.emit(\"heads-changed\", { handle: this, doc: after });\n            const patches = A.diff(after, beforeHeads, afterHeads);\n            if (patches.length \u003e 0) {\n                this.emit(\"change\", {\n                    handle: this,\n                    doc: after,\n                    patches,\n                    // TODO: pass along the source (load/change/network)\n                    patchInfo: { before, after, source: \"change\" },\n                });\n            }\n            // If we didn't have the document yet, signal that we now do\n            if (!this.isReady())\n                this.#machine.send({ type: DOC_READY });\n        }\n        this.#prevDocState = after;\n    }\n    // PUBLIC\n    /** Our documentId in Automerge URL form.\n     */\n    get url() {\n        return stringifyAutomergeUrl({ documentId: this.documentId });\n    }\n    /**\n     * @returns true if the document is ready for accessing or changes.\n     *\n     * Note that for documents already stored locally this occurs before synchronization with any\n     * peers. We do not currently have an equivalent `whenSynced()`.\n     */\n    isReady = () =\u003e this.inState([\"ready\"]);\n    /**\n     * @returns true if the document has been marked as deleted.\n     *\n     * Deleted documents are removed from local storage and the sync process. It's not currently\n     * possible at runtime to undelete a document.\n     */\n    isDeleted = () =\u003e this.inState([\"deleted\"]);\n    /**\n     * @returns true if the document is currently unavailable.\n     *\n     * This will be the case if the document is not found in storage and no peers have shared it with us.\n     */\n    isUnavailable = () =\u003e this.inState([\"unavailable\"]);\n    /**\n     * @returns true if the handle is in one of the given states.\n     */\n    inState = (states) =\u003e states.some(s =\u003e this.#machine.getSnapshot().matches(s));\n    /** @hidden */\n    get state() {\n        return this.#machine.getSnapshot().value;\n    }\n    /**\n     * @returns a promise that resolves when the document is in one of the given states (if no states\n     * are passed, when the document is ready)\n     *\n     * Use this to block until the document handle has finished loading. The async equivalent to\n     * checking `inState()`.\n     */\n    async whenReady(awaitStates = [\"ready\"]) {\n        await withTimeout(this.#statePromise(awaitStates), this.#timeoutDelay);\n    }\n    /**\n     * @returns the current state of this handle's Automerge document.\n     *\n     * This is the recommended way to access a handle's document. Note that this waits for the handle\n     * to be ready if necessary. If loading (or synchronization) fails, this will never resolve.\n     */\n    async doc(\n    /** states to wait for, such as \"LOADING\". mostly for internal use. */\n    awaitStates = [\"ready\", \"unavailable\"]) {\n        try {\n            // wait for the document to enter one of the desired states\n            await this.#statePromise(awaitStates);\n        }\n        catch (error) {\n            // if we timed out, return undefined\n            return undefined;\n        }\n        // Return the document\n        return !this.isUnavailable() ? this.#doc : undefined;\n    }\n    /**\n     * Synchronously returns the current state of the Automerge document this handle manages, or\n     * undefined. Consider using `await handle.doc()` instead. Check `isReady()`, or use `whenReady()`\n     * if you want to make sure loading is complete first.\n     *\n     * Not to be confused with the SyncState of the document, which describes the state of the\n     * synchronization process.\n     *\n     * Note that `undefined` is not a valid Automerge document, so the return from this function is\n     * unambigous.\n     *\n     * @returns the current document, or undefined if the document is not ready.\n     */\n    docSync() {\n        if (!this.isReady())\n            return undefined;\n        else\n            return this.#doc;\n    }\n    /**\n     * Returns the current \"heads\" of the document, akin to a git commit.\n     * This precisely defines the state of a document.\n     * @returns the current document's heads, or undefined if the document is not ready\n     */\n    heads() {\n        if (!this.isReady()) {\n            return undefined;\n        }\n        return A.getHeads(this.#doc);\n    }\n    /**\n     * Creates a fixed \"view\" of an automerge document at the given point in time represented\n     * by the `heads` passed in. The return value is the same type as docSync() and will return\n     * undefined if the object hasn't finished loading.\n     *\n     * @remarks\n     * A point-in-time in an automerge document is an *array* of heads since there may be\n     * concurrent edits. This API just returns a topologically sorted history of all edits\n     * so every previous entry will be (in some sense) before later ones, but the set of all possible\n     * history views would be quite large under concurrency (every thing in each branch against each other).\n     * There might be a clever way to think about this, but we haven't found it yet, so for now at least\n     * we present a single traversable view which excludes concurrency.\n     * @returns The individual heads for every change in the document.\n     */\n    history() {\n        if (!this.isReady()) {\n            return undefined;\n        }\n        // This just returns all the heads as individual strings.\n        return A.topoHistoryTraversal(this.#doc).map(h =\u003e [h]);\n    }\n    /**\n     * Creates a fixed \"view\" of an automerge document at the given point in time represented\n     * by the `heads` passed in. The return value is the same type as docSync() and will return\n     * undefined if the object hasn't finished loading.\n     *\n     * @remarks\n     * Note that our Typescript types do not consider change over time and the current version\n     * of Automerge doesn't check types at runtime, so if you go back to an old set of heads\n     * that doesn't match the heads here, Typescript will not save you.\n     *\n     * @returns An Automerge.Doc\u003cT\u003e at the point in time.\n     */\n    view(heads) {\n        if (!this.isReady()) {\n            return undefined;\n        }\n        return A.view(this.#doc, heads);\n    }\n    /**\n     * Returns a set of Patch operations that will move a materialized document from one state to another\n     * if applied.\n     *\n     * @remarks\n     * We allow specifying both a from/to heads or just a single comparison point, in which case\n     * the base will be the current document heads.\n     *\n     * @returns Automerge patches that go from one document state to the other. Use view() to get the full state.\n     */\n    diff(first, second) {\n        if (!this.isReady()) {\n            return undefined;\n        }\n        // We allow only one set of heads to be specified, in which case we use the doc's heads\n        const from = second ? first : this.heads() || []; // because we guard above this should always have useful data\n        const to = second ? second : first;\n        return A.diff(this.#doc, from, to);\n    }\n    /**\n     * `metadata(head?)` allows you to look at the metadata for a change\n     * this can be used to build history graphs to find commit messages and edit times.\n     * this interface.\n     *\n     * @remarks\n     * I'm really not convinced this is the right way to surface this information so\n     * I'm leaving this API \"hidden\".\n     *\n     * @hidden\n     */\n    metadata(change) {\n        if (!this.isReady()) {\n            return undefined;\n        }\n        if (!change) {\n            change = this.heads()[0];\n        }\n        // we return undefined instead of null by convention in this API\n        return A.inspectChange(this.#doc, change) || undefined;\n    }\n    /**\n     * `update` is called any time we have a new document state; could be\n     * from a local change, a remote change, or a new document from storage.\n     * Does not cause state changes.\n     * @hidden\n     */\n    update(callback) {\n        this.#machine.send({ type: UPDATE, payload: { callback } });\n    }\n    /**\n     * `doneLoading` is called by the repo after it decides it has all the changes\n     * it's going to get during setup. This might mean it was created locally,\n     * or that it was loaded from storage, or that it was received from a peer.\n     */\n    doneLoading() {\n        this.#machine.send({ type: DOC_READY });\n    }\n    /**\n     * Called by the repo either when a doc handle changes or we receive new remote heads.\n     * @hidden\n     */\n    setRemoteHeads(storageId, heads) {\n        this.#remoteHeads[storageId] = heads;\n        this.emit(\"remote-heads\", { storageId, heads });\n    }\n    /** Returns the heads of the storageId. */\n    getRemoteHeads(storageId) {\n        return this.#remoteHeads[storageId];\n    }\n    /**\n     * All changes to an Automerge document should be made through this method.\n     * Inside the callback, the document should be treated as mutable: all edits will be recorded\n     * using a Proxy and translated into operations as part of a single recorded \"change\".\n     *\n     * Note that assignment via ES6 spread operators will result in *replacing* the object\n     * instead of mutating it which will prevent clean merges. This may be what you want, but\n     * `doc.foo = { ...doc.foo, bar: \"baz\" }` is not equivalent to `doc.foo.bar = \"baz\"`.\n     *\n     * Local changes will be stored (by the StorageSubsystem) and synchronized (by the\n     * DocSynchronizer) to any peers you are sharing it with.\n     *\n     * @param callback - A function that takes the current document and mutates it.\n     *\n     */\n    change(callback, options = {}) {\n        if (!this.isReady()) {\n            throw new Error(`DocHandle#${this.documentId} is in ${this.state} and not ready. Check \\`handle.isReady()\\` before accessing the document.`);\n        }\n        this.#machine.send({\n            type: UPDATE,\n            payload: { callback: doc =\u003e A.change(doc, options, callback) },\n        });\n    }\n    /**\n     * Makes a change as if the document were at `heads`.\n     *\n     * @returns A set of heads representing the concurrent change that was made.\n     */\n    changeAt(heads, callback, options = {}) {\n        if (!this.isReady()) {\n            throw new Error(`DocHandle#${this.documentId} is not ready. Check \\`handle.isReady()\\` before accessing the document.`);\n        }\n        let resultHeads = undefined;\n        this.#machine.send({\n            type: UPDATE,\n            payload: {\n                callback: doc =\u003e {\n                    const result = A.changeAt(doc, heads, options, callback);\n                    resultHeads = result.newHeads || undefined;\n                    return result.newDoc;\n                },\n            },\n        });\n        // the callback above will always run before we get here, so this should always contain the new heads\n        return resultHeads;\n    }\n    /**\n     * Merges another document into this document. Any peers we are sharing changes with will be\n     * notified of the changes resulting from the merge.\n     *\n     * @returns the merged document.\n     *\n     * @throws if either document is not ready or if `otherHandle` is unavailable.\n     */\n    merge(\n    /** the handle of the document to merge into this one */\n    otherHandle) {\n        if (!this.isReady() || !otherHandle.isReady()) {\n            throw new Error(\"Both handles must be ready to merge\");\n        }\n        const mergingDoc = otherHandle.docSync();\n        if (!mergingDoc) {\n            throw new Error(\"The document to be merged in is falsy, aborting.\");\n        }\n        this.update(doc =\u003e {\n            return A.merge(doc, mergingDoc);\n        });\n    }\n    /**\n     * Used in testing to mark this document as unavailable.\n     * @hidden\n     */\n    unavailable() {\n        this.#machine.send({ type: DOC_UNAVAILABLE });\n    }\n    /** Called by the repo when the document is not found in storage.\n     * @hidden\n     * */\n    request() {\n        if (this.#state === \"loading\")\n            this.#machine.send({ type: REQUEST });\n    }\n    /** Called by the repo when the document is deleted. */\n    delete() {\n        this.#machine.send({ type: DELETE });\n    }\n    /**\n     * Sends an arbitrary ephemeral message out to all reachable peers who would receive sync messages\n     * from you. It has no guarantee of delivery, and is not persisted to the underlying automerge doc\n     * in any way. Messages will have a sending PeerId but this is *not* a useful user identifier (a\n     * user could have multiple tabs open and would appear as multiple PeerIds). Every message source\n     * must have a unique PeerId.\n     */\n    broadcast(message) {\n        this.emit(\"ephemeral-message-outbound\", {\n            handle: this,\n            data: encode(message),\n        });\n    }\n    metrics() {\n        return A.stats(this.#doc);\n    }\n}\n// STATE MACHINE TYPES \u0026 CONSTANTS\n// state\n/**\n * Possible internal states for a DocHandle\n */\nexport const HandleState = {\n    /** The handle has been created but not yet loaded or requested */\n    IDLE: \"idle\",\n    /** We are waiting for storage to finish loading */\n    LOADING: \"loading\",\n    /** We are waiting for someone in the network to respond to a sync request */\n    REQUESTING: \"requesting\",\n    /** The document is available */\n    READY: \"ready\",\n    /** The document has been deleted from the repo */\n    DELETED: \"deleted\",\n    /** The document was not available in storage or from any connected peers */\n    UNAVAILABLE: \"unavailable\",\n};\nexport const { IDLE, LOADING, REQUESTING, READY, DELETED, UNAVAILABLE } = HandleState;\nconst BEGIN = \"BEGIN\";\nconst REQUEST = \"REQUEST\";\nconst DOC_READY = \"DOC_READY\";\nconst UPDATE = \"UPDATE\";\nconst DELETE = \"DELETE\";\nconst TIMEOUT = \"TIMEOUT\";\nconst DOC_UNAVAILABLE = \"DOC_UNAVAILABLE\";\n","import EventEmitter from './index.js'\n\nexport { EventEmitter }\nexport default EventEmitter\n","export {\n  Actor,\n  SimulatedClock,\n  SpecialTargets,\n  StateMachine,\n  StateNode,\n  __unsafe_getAllOwnEventDescriptors,\n  and,\n  assertEvent,\n  assign,\n  cancel,\n  createActor,\n  createEmptyActor,\n  createMachine,\n  emit,\n  enqueueActions,\n  forwardTo,\n  fromCallback,\n  fromEventObservable,\n  fromObservable,\n  fromPromise,\n  fromTransition,\n  getInitialSnapshot,\n  getNextSnapshot,\n  getStateNodes,\n  interpret,\n  isMachineSnapshot,\n  log,\n  matchesState,\n  not,\n  or,\n  pathToStateValue,\n  raise,\n  sendParent,\n  sendTo,\n  setup,\n  spawnChild,\n  stateIn,\n  stop,\n  stopChild,\n  toObserver,\n  toPromise,\n  waitFor\n} from \"./xstate.cjs.js\";\n","import * as Uuid from \"uuid\";\nimport bs58check from \"bs58check\";\nexport const urlPrefix = \"automerge:\";\n/** Given an Automerge URL, returns the DocumentId in both base58check-encoded form and binary form */\nexport const parseAutomergeUrl = (url) =\u003e {\n    const regex = new RegExp(`^${urlPrefix}(\\\\w+)$`);\n    const [, docMatch] = url.match(regex) || [];\n    const documentId = docMatch;\n    const binaryDocumentId = documentIdToBinary(documentId);\n    if (!binaryDocumentId)\n        throw new Error(\"Invalid document URL: \" + url);\n    return {\n        /** unencoded DocumentId */\n        binaryDocumentId,\n        /** encoded DocumentId */\n        documentId,\n    };\n};\n/**\n * Given a documentId in either binary or base58check-encoded form, returns an Automerge URL.\n * Throws on invalid input.\n */\nexport const stringifyAutomergeUrl = (arg) =\u003e {\n    const documentId = arg instanceof Uint8Array || typeof arg === \"string\"\n        ? arg\n        : \"documentId\" in arg\n            ? arg.documentId\n            : undefined;\n    const encodedDocumentId = documentId instanceof Uint8Array\n        ? binaryToDocumentId(documentId)\n        : typeof documentId === \"string\"\n            ? documentId\n            : undefined;\n    if (encodedDocumentId === undefined)\n        throw new Error(\"Invalid documentId: \" + documentId);\n    return (urlPrefix + encodedDocumentId);\n};\n/**\n * Given a string, returns true if it is a valid Automerge URL. This function also acts as a type\n * discriminator in Typescript.\n */\nexport const isValidAutomergeUrl = (str) =\u003e {\n    if (typeof str !== \"string\")\n        return false;\n    if (!str || !str.startsWith(urlPrefix))\n        return false;\n    const automergeUrl = str;\n    try {\n        const { documentId } = parseAutomergeUrl(automergeUrl);\n        return isValidDocumentId(documentId);\n    }\n    catch {\n        return false;\n    }\n};\nexport const isValidDocumentId = (str) =\u003e {\n    if (typeof str !== \"string\")\n        return false;\n    // try to decode from base58\n    const binaryDocumentID = documentIdToBinary(str);\n    if (binaryDocumentID === undefined)\n        return false; // invalid base58check encoding\n    // confirm that the document ID is a valid UUID\n    const documentId = Uuid.stringify(binaryDocumentID);\n    return Uuid.validate(documentId);\n};\nexport const isValidUuid = (str) =\u003e typeof str === \"string\" \u0026\u0026 Uuid.validate(str);\n/**\n * Returns a new Automerge URL with a random UUID documentId. Called by Repo.create(), and also used by tests.\n */\nexport const generateAutomergeUrl = () =\u003e {\n    const documentId = Uuid.v4(null, new Uint8Array(16));\n    return stringifyAutomergeUrl({ documentId });\n};\nexport const documentIdToBinary = (docId) =\u003e bs58check.decodeUnsafe(docId);\nexport const binaryToDocumentId = (docId) =\u003e bs58check.encode(docId);\nexport const parseLegacyUUID = (str) =\u003e {\n    if (!Uuid.validate(str))\n        return undefined;\n    const documentId = Uuid.parse(str);\n    return stringifyAutomergeUrl({ documentId });\n};\n/**\n * Given any valid expression of a document ID, returns a DocumentId in base58check-encoded form.\n *\n * Currently supports:\n * - base58check-encoded DocumentId\n * - Automerge URL\n * - legacy UUID\n * - binary DocumentId\n *\n * Throws on invalid input.\n */\nexport const interpretAsDocumentId = (id) =\u003e {\n    // binary\n    if (id instanceof Uint8Array)\n        return binaryToDocumentId(id);\n    // url\n    if (isValidAutomergeUrl(id))\n        return parseAutomergeUrl(id).documentId;\n    // base58check\n    if (isValidDocumentId(id))\n        return id;\n    // legacy UUID\n    if (isValidUuid(id)) {\n        console.warn(\"Future versions will not support UUIDs as document IDs; use Automerge URLs instead.\");\n        const binaryDocumentID = Uuid.parse(id);\n        return binaryToDocumentId(binaryDocumentID);\n    }\n    // none of the above\n    throw new Error(`Invalid AutomergeUrl: '${id}'`);\n};\n","import { Encoder, decode as cborXdecode } from \"cbor-x\";\nexport function encode(obj) {\n    const encoder = new Encoder({ tagUint8Array: false, useRecords: false });\n    return encoder.encode(obj);\n}\nexport function decode(buf) {\n    return cborXdecode(buf);\n}\n","let decoder\ntry {\n\tdecoder = new TextDecoder()\n} catch(error) {}\nlet src\nlet srcEnd\nlet position = 0\nlet alreadySet\nconst EMPTY_ARRAY = []\nconst LEGACY_RECORD_INLINE_ID = 105\nconst RECORD_DEFINITIONS_ID = 0xdffe\nconst RECORD_INLINE_ID = 0xdfff // temporary first-come first-serve tag // proposed tag: 0x7265 // 're'\nconst BUNDLED_STRINGS_ID = 0xdff9\nconst PACKED_TABLE_TAG_ID = 51\nconst PACKED_REFERENCE_TAG_ID = 6\nconst STOP_CODE = {}\nlet maxArraySize = 112810000 // This is the maximum array size in V8. We would potentially detect and set it higher\n// for JSC, but this is pretty large and should be sufficient for most use cases\nlet maxMapSize = 16810000 // JavaScript has a fixed maximum map size of about 16710000, but JS itself enforces this,\n// so we don't need to\n\nlet maxObjectSize = 16710000; // This is the maximum number of keys in a Map. It takes over a minute to create this\n// many keys in an object, so also probably a reasonable choice there.\nlet strings = EMPTY_ARRAY\nlet stringPosition = 0\nlet currentDecoder = {}\nlet currentStructures\nlet srcString\nlet srcStringStart = 0\nlet srcStringEnd = 0\nlet bundledStrings\nlet referenceMap\nlet currentExtensions = []\nlet currentExtensionRanges = []\nlet packedValues\nlet dataView\nlet restoreMapsAsObject\nlet defaultOptions = {\n\tuseRecords: false,\n\tmapsAsObjects: true\n}\nlet sequentialMode = false\nlet inlineObjectReadThreshold = 2;\nvar BlockedFunction // we use search and replace to change the next call to BlockedFunction to avoid CSP issues for\n// no-eval build\ntry {\n\tnew Function('')\n} catch(error) {\n\t// if eval variants are not supported, do not create inline object readers ever\n\tinlineObjectReadThreshold = Infinity\n}\n\n\n\nexport class Decoder {\n\tconstructor(options) {\n\t\tif (options) {\n\t\t\tif ((options.keyMap || options._keyMap) \u0026\u0026 !options.useRecords) {\n\t\t\t\toptions.useRecords = false\n\t\t\t\toptions.mapsAsObjects = true\n\t\t\t}\n\t\t\tif (options.useRecords === false \u0026\u0026 options.mapsAsObjects === undefined)\n\t\t\t\toptions.mapsAsObjects = true\n\t\t\tif (options.getStructures)\n\t\t\t\toptions.getShared = options.getStructures\n\t\t\tif (options.getShared \u0026\u0026 !options.structures)\n\t\t\t\t(options.structures = []).uninitialized = true // this is what we use to denote an uninitialized structures\n\t\t\tif (options.keyMap) {\n\t\t\t\tthis.mapKey = new Map()\n\t\t\t\tfor (let [k,v] of Object.entries(options.keyMap)) this.mapKey.set(v,k)\n\t\t\t}\n\t\t}\n\t\tObject.assign(this, options)\n\t}\n\t/*\n\tdecodeKey(key) {\n\t\treturn this.keyMap\n\t\t\t? Object.keys(this.keyMap)[Object.values(this.keyMap).indexOf(key)] || key\n\t\t\t: key\n\t}\n\t*/\n\tdecodeKey(key) {\n\t\treturn this.keyMap ? this.mapKey.get(key) || key : key\n\t}\n\t\n\tencodeKey(key) {\n\t\treturn this.keyMap \u0026\u0026 this.keyMap.hasOwnProperty(key) ? this.keyMap[key] : key\n\t}\n\n\tencodeKeys(rec) {\n\t\tif (!this._keyMap) return rec\n\t\tlet map = new Map()\n\t\tfor (let [k,v] of Object.entries(rec)) map.set((this._keyMap.hasOwnProperty(k) ? this._keyMap[k] : k), v)\n\t\treturn map\n\t}\n\n\tdecodeKeys(map) {\n\t\tif (!this._keyMap || map.constructor.name != 'Map') return map\n\t\tif (!this._mapKey) {\n\t\t\tthis._mapKey = new Map()\n\t\t\tfor (let [k,v] of Object.entries(this._keyMap)) this._mapKey.set(v,k)\n\t\t}\n\t\tlet res = {}\n\t\t//map.forEach((v,k) =\u003e res[Object.keys(this._keyMap)[Object.values(this._keyMap).indexOf(k)] || k] = v)\n\t\tmap.forEach((v,k) =\u003e res[safeKey(this._mapKey.has(k) ? this._mapKey.get(k) : k)] =  v)\n\t\treturn res\n\t}\n\t\n\tmapDecode(source, end) {\n\t\n\t\tlet res = this.decode(source)\n\t\tif (this._keyMap) { \n\t\t\t//Experiemntal support for Optimised KeyMap  decoding \n\t\t\tswitch (res.constructor.name) {\n\t\t\t\tcase 'Array': return res.map(r =\u003e this.decodeKeys(r))\n\t\t\t\t//case 'Map': return this.decodeKeys(res)\n\t\t\t}\n\t\t}\n\t\treturn res\n\t}\n\n\tdecode(source, end) {\n\t\tif (src) {\n\t\t\t// re-entrant execution, save the state and restore it after we do this decode\n\t\t\treturn saveState(() =\u003e {\n\t\t\t\tclearSource()\n\t\t\t\treturn this ? this.decode(source, end) : Decoder.prototype.decode.call(defaultOptions, source, end)\n\t\t\t})\n\t\t}\n\t\tsrcEnd = end \u003e -1 ? end : source.length\n\t\tposition = 0\n\t\tstringPosition = 0\n\t\tsrcStringEnd = 0\n\t\tsrcString = null\n\t\tstrings = EMPTY_ARRAY\n\t\tbundledStrings = null\n\t\tsrc = source\n\t\t// this provides cached access to the data view for a buffer if it is getting reused, which is a recommend\n\t\t// technique for getting data from a database where it can be copied into an existing buffer instead of creating\n\t\t// new ones\n\t\ttry {\n\t\t\tdataView = source.dataView || (source.dataView = new DataView(source.buffer, source.byteOffset, source.byteLength))\n\t\t} catch(error) {\n\t\t\t// if it doesn't have a buffer, maybe it is the wrong type of object\n\t\t\tsrc = null\n\t\t\tif (source instanceof Uint8Array)\n\t\t\t\tthrow error\n\t\t\tthrow new Error('Source must be a Uint8Array or Buffer but was a ' + ((source \u0026\u0026 typeof source == 'object') ? source.constructor.name : typeof source))\n\t\t}\n\t\tif (this instanceof Decoder) {\n\t\t\tcurrentDecoder = this\n\t\t\tpackedValues = this.sharedValues \u0026\u0026\n\t\t\t\t(this.pack ? new Array(this.maxPrivatePackedValues || 16).concat(this.sharedValues) :\n\t\t\t\tthis.sharedValues)\n\t\t\tif (this.structures) {\n\t\t\t\tcurrentStructures = this.structures\n\t\t\t\treturn checkedRead()\n\t\t\t} else if (!currentStructures || currentStructures.length \u003e 0) {\n\t\t\t\tcurrentStructures = []\n\t\t\t}\n\t\t} else {\n\t\t\tcurrentDecoder = defaultOptions\n\t\t\tif (!currentStructures || currentStructures.length \u003e 0)\n\t\t\t\tcurrentStructures = []\n\t\t\tpackedValues = null\n\t\t}\n\t\treturn checkedRead()\n\t}\n\tdecodeMultiple(source, forEach) {\n\t\tlet values, lastPosition = 0\n\t\ttry {\n\t\t\tlet size = source.length\n\t\t\tsequentialMode = true\n\t\t\tlet value = this ? this.decode(source, size) : defaultDecoder.decode(source, size)\n\t\t\tif (forEach) {\n\t\t\t\tif (forEach(value) === false) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\twhile(position \u003c size) {\n\t\t\t\t\tlastPosition = position\n\t\t\t\t\tif (forEach(checkedRead()) === false) {\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tvalues = [ value ]\n\t\t\t\twhile(position \u003c size) {\n\t\t\t\t\tlastPosition = position\n\t\t\t\t\tvalues.push(checkedRead())\n\t\t\t\t}\n\t\t\t\treturn values\n\t\t\t}\n\t\t} catch(error) {\n\t\t\terror.lastPosition = lastPosition\n\t\t\terror.values = values\n\t\t\tthrow error\n\t\t} finally {\n\t\t\tsequentialMode = false\n\t\t\tclearSource()\n\t\t}\n\t}\n}\nexport function getPosition() {\n\treturn position\n}\nexport function checkedRead() {\n\ttry {\n\t\tlet result = read()\n\t\tif (bundledStrings) {\n\t\t\tif (position \u003e= bundledStrings.postBundlePosition) {\n\t\t\t\tlet error = new Error('Unexpected bundle position');\n\t\t\t\terror.incomplete = true;\n\t\t\t\tthrow error\n\t\t\t}\n\t\t\t// bundled strings to skip past\n\t\t\tposition = bundledStrings.postBundlePosition;\n\t\t\tbundledStrings = null;\n\t\t}\n\n\t\tif (position == srcEnd) {\n\t\t\t// finished reading this source, cleanup references\n\t\t\tcurrentStructures = null\n\t\t\tsrc = null\n\t\t\tif (referenceMap)\n\t\t\t\treferenceMap = null\n\t\t} else if (position \u003e srcEnd) {\n\t\t\t// over read\n\t\t\tlet error = new Error('Unexpected end of CBOR data')\n\t\t\terror.incomplete = true\n\t\t\tthrow error\n\t\t} else if (!sequentialMode) {\n\t\t\tthrow new Error('Data read, but end of buffer not reached')\n\t\t}\n\t\t// else more to read, but we are reading sequentially, so don't clear source yet\n\t\treturn result\n\t} catch(error) {\n\t\tclearSource()\n\t\tif (error instanceof RangeError || error.message.startsWith('Unexpected end of buffer')) {\n\t\t\terror.incomplete = true\n\t\t}\n\t\tthrow error\n\t}\n}\n\nexport function read() {\n\tlet token = src[position++]\n\tlet majorType = token \u003e\u003e 5\n\ttoken = token \u0026 0x1f\n\tif (token \u003e 0x17) {\n\t\tswitch (token) {\n\t\t\tcase 0x18:\n\t\t\t\ttoken = src[position++]\n\t\t\t\tbreak\n\t\t\tcase 0x19:\n\t\t\t\tif (majorType == 7) {\n\t\t\t\t\treturn getFloat16()\n\t\t\t\t}\n\t\t\t\ttoken = dataView.getUint16(position)\n\t\t\t\tposition += 2\n\t\t\t\tbreak\n\t\t\tcase 0x1a:\n\t\t\t\tif (majorType == 7) {\n\t\t\t\t\tlet value = dataView.getFloat32(position)\n\t\t\t\t\tif (currentDecoder.useFloat32 \u003e 2) {\n\t\t\t\t\t\t// this does rounding of numbers that were encoded in 32-bit float to nearest significant decimal digit that could be preserved\n\t\t\t\t\t\tlet multiplier = mult10[((src[position] \u0026 0x7f) \u003c\u003c 1) | (src[position + 1] \u003e\u003e 7)]\n\t\t\t\t\t\tposition += 4\n\t\t\t\t\t\treturn ((multiplier * value + (value \u003e 0 ? 0.5 : -0.5)) \u003e\u003e 0) / multiplier\n\t\t\t\t\t}\n\t\t\t\t\tposition += 4\n\t\t\t\t\treturn value\n\t\t\t\t}\n\t\t\t\ttoken = dataView.getUint32(position)\n\t\t\t\tposition += 4\n\t\t\t\tbreak\n\t\t\tcase 0x1b:\n\t\t\t\tif (majorType == 7) {\n\t\t\t\t\tlet value = dataView.getFloat64(position)\n\t\t\t\t\tposition += 8\n\t\t\t\t\treturn value\n\t\t\t\t}\n\t\t\t\tif (majorType \u003e 1) {\n\t\t\t\t\tif (dataView.getUint32(position) \u003e 0)\n\t\t\t\t\t\tthrow new Error('JavaScript does not support arrays, maps, or strings with length over 4294967295')\n\t\t\t\t\ttoken = dataView.getUint32(position + 4)\n\t\t\t\t} else if (currentDecoder.int64AsNumber) {\n\t\t\t\t\ttoken = dataView.getUint32(position) * 0x100000000\n\t\t\t\t\ttoken += dataView.getUint32(position + 4)\n\t\t\t\t} else\n\t\t\t\t\ttoken = dataView.getBigUint64(position)\n\t\t\t\tposition += 8\n\t\t\t\tbreak\n\t\t\tcase 0x1f: \n\t\t\t\t// indefinite length\n\t\t\t\tswitch(majorType) {\n\t\t\t\t\tcase 2: // byte string\n\t\t\t\t\tcase 3: // text string\n\t\t\t\t\t\tthrow new Error('Indefinite length not supported for byte or text strings')\n\t\t\t\t\tcase 4: // array\n\t\t\t\t\t\tlet array = []\n\t\t\t\t\t\tlet value, i = 0\n\t\t\t\t\t\twhile ((value = read()) != STOP_CODE) {\n\t\t\t\t\t\t\tif (i \u003e= maxArraySize) throw new Error(`Array length exceeds ${maxArraySize}`)\n\t\t\t\t\t\t\tarray[i++] = value\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn majorType == 4 ? array : majorType == 3 ? array.join('') : Buffer.concat(array)\n\t\t\t\t\tcase 5: // map\n\t\t\t\t\t\tlet key\n\t\t\t\t\t\tif (currentDecoder.mapsAsObjects) {\n\t\t\t\t\t\t\tlet object = {}\n\t\t\t\t\t\t\tlet i = 0;\n\t\t\t\t\t\t\tif (currentDecoder.keyMap) {\n\t\t\t\t\t\t\t\twhile((key = read()) != STOP_CODE) {\n\t\t\t\t\t\t\t\t\tif (i++ \u003e= maxMapSize) throw new Error(`Property count exceeds ${maxMapSize}`)\n\t\t\t\t\t\t\t\t\tobject[safeKey(currentDecoder.decodeKey(key))] = read()\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\twhile ((key = read()) != STOP_CODE) {\n\t\t\t\t\t\t\t\t\tif (i++ \u003e= maxMapSize) throw new Error(`Property count exceeds ${maxMapSize}`)\n\t\t\t\t\t\t\t\t\tobject[safeKey(key)] = read()\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn object\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (restoreMapsAsObject) {\n\t\t\t\t\t\t\t\tcurrentDecoder.mapsAsObjects = true\n\t\t\t\t\t\t\t\trestoreMapsAsObject = false\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tlet map = new Map()\n\t\t\t\t\t\t\tif (currentDecoder.keyMap) {\n\t\t\t\t\t\t\t\tlet i = 0;\n\t\t\t\t\t\t\t\twhile((key = read()) != STOP_CODE) {\n\t\t\t\t\t\t\t\t\tif (i++ \u003e= maxMapSize) {\n\t\t\t\t\t\t\t\t\t\tthrow new Error(`Map size exceeds ${maxMapSize}`);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tmap.set(currentDecoder.decodeKey(key), read())\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tlet i = 0;\n\t\t\t\t\t\t\t\twhile ((key = read()) != STOP_CODE) {\n\t\t\t\t\t\t\t\t\tif (i++ \u003e= maxMapSize) {\n\t\t\t\t\t\t\t\t\t\tthrow new Error(`Map size exceeds ${maxMapSize}`);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tmap.set(key, read())\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn map\n\t\t\t\t\t\t}\n\t\t\t\t\tcase 7:\n\t\t\t\t\t\treturn STOP_CODE\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow new Error('Invalid major type for indefinite length ' + majorType)\n\t\t\t\t}\n\t\t\tdefault:\n\t\t\t\tthrow new Error('Unknown token ' + token)\n\t\t}\n\t}\n\tswitch (majorType) {\n\t\tcase 0: // positive int\n\t\t\treturn token\n\t\tcase 1: // negative int\n\t\t\treturn ~token\n\t\tcase 2: // buffer\n\t\t\treturn readBin(token)\n\t\tcase 3: // string\n\t\t\tif (srcStringEnd \u003e= position) {\n\t\t\t\treturn srcString.slice(position - srcStringStart, (position += token) - srcStringStart)\n\t\t\t}\n\t\t\tif (srcStringEnd == 0 \u0026\u0026 srcEnd \u003c 140 \u0026\u0026 token \u003c 32) {\n\t\t\t\t// for small blocks, avoiding the overhead of the extract call is helpful\n\t\t\t\tlet string = token \u003c 16 ? shortStringInJS(token) : longStringInJS(token)\n\t\t\t\tif (string != null)\n\t\t\t\t\treturn string\n\t\t\t}\n\t\t\treturn readFixedString(token)\n\t\tcase 4: // array\n\t\t\tif (token \u003e= maxArraySize) throw new Error(`Array length exceeds ${maxArraySize}`)\n\t\t\tlet array = new Array(token)\n\t\t  //if (currentDecoder.keyMap) for (let i = 0; i \u003c token; i++) array[i] = currentDecoder.decodeKey(read())\t\n\t\t\t//else \n\t\t\tfor (let i = 0; i \u003c token; i++) array[i] = read()\n\t\t\treturn array\n\t\tcase 5: // map\n\t\t\tif (token \u003e= maxMapSize) throw new Error(`Map size exceeds ${maxArraySize}`)\n\t\t\tif (currentDecoder.mapsAsObjects) {\n\t\t\t\tlet object = {}\n\t\t\t\tif (currentDecoder.keyMap) for (let i = 0; i \u003c token; i++) object[safeKey(currentDecoder.decodeKey(read()))] = read()\n\t\t\t\telse for (let i = 0; i \u003c token; i++) object[safeKey(read())] = read()\n\t\t\t\treturn object\n\t\t\t} else {\n\t\t\t\tif (restoreMapsAsObject) {\n\t\t\t\t\tcurrentDecoder.mapsAsObjects = true\n\t\t\t\t\trestoreMapsAsObject = false\n\t\t\t\t}\n\t\t\t\tlet map = new Map()\n\t\t\t\tif (currentDecoder.keyMap) for (let i = 0; i \u003c token; i++) map.set(currentDecoder.decodeKey(read()),read())\n\t\t\t\telse for (let i = 0; i \u003c token; i++) map.set(read(), read())\n\t\t\t\treturn map\n\t\t\t}\n\t\tcase 6: // extension\n\t\t\tif (token \u003e= BUNDLED_STRINGS_ID) {\n\t\t\t\tlet structure = currentStructures[token \u0026 0x1fff] // check record structures first\n\t\t\t\t// At some point we may provide an option for dynamic tag assignment with a range like token \u003e= 8 \u0026\u0026 (token \u003c 16 || (token \u003e 0x80 \u0026\u0026 token \u003c 0xc0) || (token \u003e 0x130 \u0026\u0026 token \u003c 0x4000))\n\t\t\t\tif (structure) {\n\t\t\t\t\tif (!structure.read) structure.read = createStructureReader(structure)\n\t\t\t\t\treturn structure.read()\n\t\t\t\t}\n\t\t\t\tif (token \u003c 0x10000) {\n\t\t\t\t\tif (token == RECORD_INLINE_ID) { // we do a special check for this so that we can keep the\n\t\t\t\t\t\t// currentExtensions as densely stored array (v8 stores arrays densely under about 3000 elements)\n\t\t\t\t\t\tlet length = readJustLength()\n\t\t\t\t\t\tlet id = read()\n\t\t\t\t\t\tlet structure = read()\n\t\t\t\t\t\trecordDefinition(id, structure)\n\t\t\t\t\t\tlet object = {}\n\t\t\t\t\t\tif (currentDecoder.keyMap) for (let i = 2; i \u003c length; i++) {\n\t\t\t\t\t\t\tlet key = currentDecoder.decodeKey(structure[i - 2])\n\t\t\t\t\t\t\tobject[safeKey(key)] = read()\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse for (let i = 2; i \u003c length; i++) {\n\t\t\t\t\t\t\tlet key = structure[i - 2]\n\t\t\t\t\t\t\tobject[safeKey(key)] = read()\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn object\n\t\t\t\t\t}\n\t\t\t\t\telse if (token == RECORD_DEFINITIONS_ID) {\n\t\t\t\t\t\tlet length = readJustLength()\n\t\t\t\t\t\tlet id = read()\n\t\t\t\t\t\tfor (let i = 2; i \u003c length; i++) {\n\t\t\t\t\t\t\trecordDefinition(id++, read())\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn read()\n\t\t\t\t\t} else if (token == BUNDLED_STRINGS_ID) {\n\t\t\t\t\t\treturn readBundleExt()\n\t\t\t\t\t}\n\t\t\t\t\tif (currentDecoder.getShared) {\n\t\t\t\t\t\tloadShared()\n\t\t\t\t\t\tstructure = currentStructures[token \u0026 0x1fff]\n\t\t\t\t\t\tif (structure) {\n\t\t\t\t\t\t\tif (!structure.read)\n\t\t\t\t\t\t\t\tstructure.read = createStructureReader(structure)\n\t\t\t\t\t\t\treturn structure.read()\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet extension = currentExtensions[token]\n\t\t\tif (extension) {\n\t\t\t\tif (extension.handlesRead)\n\t\t\t\t\treturn extension(read)\n\t\t\t\telse\n\t\t\t\t\treturn extension(read())\n\t\t\t} else {\n\t\t\t\tlet input = read()\n\t\t\t\tfor (let i = 0; i \u003c currentExtensionRanges.length; i++) {\n\t\t\t\t\tlet value = currentExtensionRanges[i](token, input)\n\t\t\t\t\tif (value !== undefined)\n\t\t\t\t\t\treturn value\n\t\t\t\t}\n\t\t\t\treturn new Tag(input, token)\n\t\t\t}\n\t\tcase 7: // fixed value\n\t\t\tswitch (token) {\n\t\t\t\tcase 0x14: return false\n\t\t\t\tcase 0x15: return true\n\t\t\t\tcase 0x16: return null\n\t\t\t\tcase 0x17: return; // undefined\n\t\t\t\tcase 0x1f:\n\t\t\t\tdefault:\n\t\t\t\t\tlet packedValue = (packedValues || getPackedValues())[token]\n\t\t\t\t\tif (packedValue !== undefined)\n\t\t\t\t\t\treturn packedValue\n\t\t\t\t\tthrow new Error('Unknown token ' + token)\n\t\t\t}\n\t\tdefault: // negative int\n\t\t\tif (isNaN(token)) {\n\t\t\t\tlet error = new Error('Unexpected end of CBOR data')\n\t\t\t\terror.incomplete = true\n\t\t\t\tthrow error\n\t\t\t}\n\t\t\tthrow new Error('Unknown CBOR token ' + token)\n\t}\n}\nconst validName = /^[a-zA-Z_$][a-zA-Z\\d_$]*$/\nfunction createStructureReader(structure) {\n\tif (!structure) throw new Error('Structure is required in record definition');\n\tfunction readObject() {\n\t\t// get the array size from the header\n\t\tlet length = src[position++]\n\t\t//let majorType = token \u003e\u003e 5\n\t\tlength = length \u0026 0x1f\n\t\tif (length \u003e 0x17) {\n\t\t\tswitch (length) {\n\t\t\t\tcase 0x18:\n\t\t\t\t\tlength = src[position++]\n\t\t\t\t\tbreak\n\t\t\t\tcase 0x19:\n\t\t\t\t\tlength = dataView.getUint16(position)\n\t\t\t\t\tposition += 2\n\t\t\t\t\tbreak\n\t\t\t\tcase 0x1a:\n\t\t\t\t\tlength = dataView.getUint32(position)\n\t\t\t\t\tposition += 4\n\t\t\t\t\tbreak\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error('Expected array header, but got ' + src[position - 1])\n\t\t\t}\n\t\t}\n\t\t// This initial function is quick to instantiate, but runs slower. After several iterations pay the cost to build the faster function\n\t\tlet compiledReader = this.compiledReader // first look to see if we have the fast compiled function\n\t\twhile(compiledReader) {\n\t\t\t// we have a fast compiled object literal reader\n\t\t\tif (compiledReader.propertyCount === length)\n\t\t\t\treturn compiledReader(read) // with the right length, so we use it\n\t\t\tcompiledReader = compiledReader.next // see if there is another reader with the right length\n\t\t}\n\t\tif (this.slowReads++ \u003e= inlineObjectReadThreshold) { // create a fast compiled reader\n\t\t\tlet array = this.length == length ? this : this.slice(0, length)\n\t\t\tcompiledReader = currentDecoder.keyMap \n\t\t\t? new Function('r', 'return {' + array.map(k =\u003e currentDecoder.decodeKey(k)).map(k =\u003e validName.test(k) ? safeKey(k) + ':r()' : ('[' + JSON.stringify(k) + ']:r()')).join(',') + '}')\n\t\t\t: new Function('r', 'return {' + array.map(key =\u003e validName.test(key) ? safeKey(key) + ':r()' : ('[' + JSON.stringify(key) + ']:r()')).join(',') + '}')\n\t\t\tif (this.compiledReader)\n\t\t\t\tcompiledReader.next = this.compiledReader // if there is an existing one, we store multiple readers as a linked list because it is usually pretty rare to have multiple readers (of different length) for the same structure\n\t\t\tcompiledReader.propertyCount = length\n\t\t\tthis.compiledReader = compiledReader\n\t\t\treturn compiledReader(read)\n\t\t}\n\t\tlet object = {}\n\t\tif (currentDecoder.keyMap) for (let i = 0; i \u003c length; i++) object[safeKey(currentDecoder.decodeKey(this[i]))] = read()\n\t\telse for (let i = 0; i \u003c length; i++) {\n\t\t\tobject[safeKey(this[i])] = read();\n\t\t}\n\t\treturn object\n\t}\n\tstructure.slowReads = 0\n\treturn readObject\n}\n\nfunction safeKey(key) {\n\t// protect against prototype pollution\n\tif (typeof key === 'string') return key === '__proto__' ? '__proto_' : key\n\tif (typeof key === 'number' || typeof key === 'boolean' || typeof key === 'bigint') return key.toString();\n\tif (key == null) return key + '';\n\t// protect against expensive (DoS) string conversions\n\tthrow new Error('Invalid property name type ' + typeof key);\n}\n\nlet readFixedString = readStringJS\nlet readString8 = readStringJS\nlet readString16 = readStringJS\nlet readString32 = readStringJS\n\nexport let isNativeAccelerationEnabled = false\nexport function setExtractor(extractStrings) {\n\tisNativeAccelerationEnabled = true\n\treadFixedString = readString(1)\n\treadString8 = readString(2)\n\treadString16 = readString(3)\n\treadString32 = readString(5)\n\tfunction readString(headerLength) {\n\t\treturn function readString(length) {\n\t\t\tlet string = strings[stringPosition++]\n\t\t\tif (string == null) {\n\t\t\t\tif (bundledStrings)\n\t\t\t\t\treturn readStringJS(length)\n\t\t\t\tlet extraction = extractStrings(position, srcEnd, length, src)\n\t\t\t\tif (typeof extraction == 'string') {\n\t\t\t\t\tstring = extraction\n\t\t\t\t\tstrings = EMPTY_ARRAY\n\t\t\t\t} else {\n\t\t\t\t\tstrings = extraction\n\t\t\t\t\tstringPosition = 1\n\t\t\t\t\tsrcStringEnd = 1 // even if a utf-8 string was decoded, must indicate we are in the midst of extracted strings and can't skip strings\n\t\t\t\t\tstring = strings[0]\n\t\t\t\t\tif (string === undefined)\n\t\t\t\t\t\tthrow new Error('Unexpected end of buffer')\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet srcStringLength = string.length\n\t\t\tif (srcStringLength \u003c= length) {\n\t\t\t\tposition += length\n\t\t\t\treturn string\n\t\t\t}\n\t\t\tsrcString = string\n\t\t\tsrcStringStart = position\n\t\t\tsrcStringEnd = position + srcStringLength\n\t\t\tposition += length\n\t\t\treturn string.slice(0, length) // we know we just want the beginning\n\t\t}\n\t}\n}\nfunction readStringJS(length) {\n\tlet result\n\tif (length \u003c 16) {\n\t\tif (result = shortStringInJS(length))\n\t\t\treturn result\n\t}\n\tif (length \u003e 64 \u0026\u0026 decoder)\n\t\treturn decoder.decode(src.subarray(position, position += length))\n\tconst end = position + length\n\tconst units = []\n\tresult = ''\n\twhile (position \u003c end) {\n\t\tconst byte1 = src[position++]\n\t\tif ((byte1 \u0026 0x80) === 0) {\n\t\t\t// 1 byte\n\t\t\tunits.push(byte1)\n\t\t} else if ((byte1 \u0026 0xe0) === 0xc0) {\n\t\t\t// 2 bytes\n\t\t\tconst byte2 = src[position++] \u0026 0x3f\n\t\t\tunits.push(((byte1 \u0026 0x1f) \u003c\u003c 6) | byte2)\n\t\t} else if ((byte1 \u0026 0xf0) === 0xe0) {\n\t\t\t// 3 bytes\n\t\t\tconst byte2 = src[position++] \u0026 0x3f\n\t\t\tconst byte3 = src[position++] \u0026 0x3f\n\t\t\tunits.push(((byte1 \u0026 0x1f) \u003c\u003c 12) | (byte2 \u003c\u003c 6) | byte3)\n\t\t} else if ((byte1 \u0026 0xf8) === 0xf0) {\n\t\t\t// 4 bytes\n\t\t\tconst byte2 = src[position++] \u0026 0x3f\n\t\t\tconst byte3 = src[position++] \u0026 0x3f\n\t\t\tconst byte4 = src[position++] \u0026 0x3f\n\t\t\tlet unit = ((byte1 \u0026 0x07) \u003c\u003c 0x12) | (byte2 \u003c\u003c 0x0c) | (byte3 \u003c\u003c 0x06) | byte4\n\t\t\tif (unit \u003e 0xffff) {\n\t\t\t\tunit -= 0x10000\n\t\t\t\tunits.push(((unit \u003e\u003e\u003e 10) \u0026 0x3ff) | 0xd800)\n\t\t\t\tunit = 0xdc00 | (unit \u0026 0x3ff)\n\t\t\t}\n\t\t\tunits.push(unit)\n\t\t} else {\n\t\t\tunits.push(byte1)\n\t\t}\n\n\t\tif (units.length \u003e= 0x1000) {\n\t\t\tresult += fromCharCode.apply(String, units)\n\t\t\tunits.length = 0\n\t\t}\n\t}\n\n\tif (units.length \u003e 0) {\n\t\tresult += fromCharCode.apply(String, units)\n\t}\n\n\treturn result\n}\nlet fromCharCode = String.fromCharCode\nfunction longStringInJS(length) {\n\tlet start = position\n\tlet bytes = new Array(length)\n\tfor (let i = 0; i \u003c length; i++) {\n\t\tconst byte = src[position++];\n\t\tif ((byte \u0026 0x80) \u003e 0) {\n\t\t\tposition = start\n    \t\t\treturn\n    \t\t}\n    \t\tbytes[i] = byte\n    \t}\n    \treturn fromCharCode.apply(String, bytes)\n}\nfunction shortStringInJS(length) {\n\tif (length \u003c 4) {\n\t\tif (length \u003c 2) {\n\t\t\tif (length === 0)\n\t\t\t\treturn ''\n\t\t\telse {\n\t\t\t\tlet a = src[position++]\n\t\t\t\tif ((a \u0026 0x80) \u003e 1) {\n\t\t\t\t\tposition -= 1\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\treturn fromCharCode(a)\n\t\t\t}\n\t\t} else {\n\t\t\tlet a = src[position++]\n\t\t\tlet b = src[position++]\n\t\t\tif ((a \u0026 0x80) \u003e 0 || (b \u0026 0x80) \u003e 0) {\n\t\t\t\tposition -= 2\n\t\t\t\treturn\n\t\t\t}\n\t\t\tif (length \u003c 3)\n\t\t\t\treturn fromCharCode(a, b)\n\t\t\tlet c = src[position++]\n\t\t\tif ((c \u0026 0x80) \u003e 0) {\n\t\t\t\tposition -= 3\n\t\t\t\treturn\n\t\t\t}\n\t\t\treturn fromCharCode(a, b, c)\n\t\t}\n\t} else {\n\t\tlet a = src[position++]\n\t\tlet b = src[position++]\n\t\tlet c = src[position++]\n\t\tlet d = src[position++]\n\t\tif ((a \u0026 0x80) \u003e 0 || (b \u0026 0x80) \u003e 0 || (c \u0026 0x80) \u003e 0 || (d \u0026 0x80) \u003e 0) {\n\t\t\tposition -= 4\n\t\t\treturn\n\t\t}\n\t\tif (length \u003c 6) {\n\t\t\tif (length === 4)\n\t\t\t\treturn fromCharCode(a, b, c, d)\n\t\t\telse {\n\t\t\t\tlet e = src[position++]\n\t\t\t\tif ((e \u0026 0x80) \u003e 0) {\n\t\t\t\t\tposition -= 5\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\treturn fromCharCode(a, b, c, d, e)\n\t\t\t}\n\t\t} else if (length \u003c 8) {\n\t\t\tlet e = src[position++]\n\t\t\tlet f = src[position++]\n\t\t\tif ((e \u0026 0x80) \u003e 0 || (f \u0026 0x80) \u003e 0) {\n\t\t\t\tposition -= 6\n\t\t\t\treturn\n\t\t\t}\n\t\t\tif (length \u003c 7)\n\t\t\t\treturn fromCharCode(a, b, c, d, e, f)\n\t\t\tlet g = src[position++]\n\t\t\tif ((g \u0026 0x80) \u003e 0) {\n\t\t\t\tposition -= 7\n\t\t\t\treturn\n\t\t\t}\n\t\t\treturn fromCharCode(a, b, c, d, e, f, g)\n\t\t} else {\n\t\t\tlet e = src[position++]\n\t\t\tlet f = src[position++]\n\t\t\tlet g = src[position++]\n\t\t\tlet h = src[position++]\n\t\t\tif ((e \u0026 0x80) \u003e 0 || (f \u0026 0x80) \u003e 0 || (g \u0026 0x80) \u003e 0 || (h \u0026 0x80) \u003e 0) {\n\t\t\t\tposition -= 8\n\t\t\t\treturn\n\t\t\t}\n\t\t\tif (length \u003c 10) {\n\t\t\t\tif (length === 8)\n\t\t\t\t\treturn fromCharCode(a, b, c, d, e, f, g, h)\n\t\t\t\telse {\n\t\t\t\t\tlet i = src[position++]\n\t\t\t\t\tif ((i \u0026 0x80) \u003e 0) {\n\t\t\t\t\t\tposition -= 9\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\t\t\t\t\treturn fromCharCode(a, b, c, d, e, f, g, h, i)\n\t\t\t\t}\n\t\t\t} else if (length \u003c 12) {\n\t\t\t\tlet i = src[position++]\n\t\t\t\tlet j = src[position++]\n\t\t\t\tif ((i \u0026 0x80) \u003e 0 || (j \u0026 0x80) \u003e 0) {\n\t\t\t\t\tposition -= 10\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tif (length \u003c 11)\n\t\t\t\t\treturn fromCharCode(a, b, c, d, e, f, g, h, i, j)\n\t\t\t\tlet k = src[position++]\n\t\t\t\tif ((k \u0026 0x80) \u003e 0) {\n\t\t\t\t\tposition -= 11\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\treturn fromCharCode(a, b, c, d, e, f, g, h, i, j, k)\n\t\t\t} else {\n\t\t\t\tlet i = src[position++]\n\t\t\t\tlet j = src[position++]\n\t\t\t\tlet k = src[position++]\n\t\t\t\tlet l = src[position++]\n\t\t\t\tif ((i \u0026 0x80) \u003e 0 || (j \u0026 0x80) \u003e 0 || (k \u0026 0x80) \u003e 0 || (l \u0026 0x80) \u003e 0) {\n\t\t\t\t\tposition -= 12\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tif (length \u003c 14) {\n\t\t\t\t\tif (length === 12)\n\t\t\t\t\t\treturn fromCharCode(a, b, c, d, e, f, g, h, i, j, k, l)\n\t\t\t\t\telse {\n\t\t\t\t\t\tlet m = src[position++]\n\t\t\t\t\t\tif ((m \u0026 0x80) \u003e 0) {\n\t\t\t\t\t\t\tposition -= 13\n\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn fromCharCode(a, b, c, d, e, f, g, h, i, j, k, l, m)\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tlet m = src[position++]\n\t\t\t\t\tlet n = src[position++]\n\t\t\t\t\tif ((m \u0026 0x80) \u003e 0 || (n \u0026 0x80) \u003e 0) {\n\t\t\t\t\t\tposition -= 14\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\t\t\t\t\tif (length \u003c 15)\n\t\t\t\t\t\treturn fromCharCode(a, b, c, d, e, f, g, h, i, j, k, l, m, n)\n\t\t\t\t\tlet o = src[position++]\n\t\t\t\t\tif ((o \u0026 0x80) \u003e 0) {\n\t\t\t\t\t\tposition -= 15\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\t\t\t\t\treturn fromCharCode(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction readBin(length) {\n\treturn currentDecoder.copyBuffers ?\n\t\t// specifically use the copying slice (not the node one)\n\t\tUint8Array.prototype.slice.call(src, position, position += length) :\n\t\tsrc.subarray(position, position += length)\n}\nfunction readExt(length) {\n\tlet type = src[position++]\n\tif (currentExtensions[type]) {\n\t\treturn currentExtensions[type](src.subarray(position, position += length))\n\t}\n\telse\n\t\tthrow new Error('Unknown extension type ' + type)\n}\nlet f32Array = new Float32Array(1)\nlet u8Array = new Uint8Array(f32Array.buffer, 0, 4)\nfunction getFloat16() {\n\tlet byte0 = src[position++]\n\tlet byte1 = src[position++]\n\tlet exponent = (byte0 \u0026 0x7f) \u003e\u003e 2;\n\tif (exponent === 0x1f) { // specials\n\t\tif (byte1 || (byte0 \u0026 3))\n\t\t\treturn NaN;\n\t\treturn (byte0 \u0026 0x80) ? -Infinity : Infinity;\n\t}\n\tif (exponent === 0) { // sub-normals\n\t\t// significand with 10 fractional bits and divided by 2^14\n\t\tlet abs = (((byte0 \u0026 3) \u003c\u003c 8) | byte1) / (1 \u003c\u003c 24)\n\t\treturn (byte0 \u0026 0x80) ? -abs : abs\n\t}\n\n\tu8Array[3] = (byte0 \u0026 0x80) | // sign bit\n\t\t((exponent \u003e\u003e 1) + 56) // 4 of 5 of the exponent bits, re-offset-ed\n\tu8Array[2] = ((byte0 \u0026 7) \u003c\u003c 5) | // last exponent bit and first two mantissa bits\n\t\t(byte1 \u003e\u003e 3) // next 5 bits of mantissa\n\tu8Array[1] = byte1 \u003c\u003c 5; // last three bits of mantissa\n\tu8Array[0] = 0;\n\treturn f32Array[0];\n}\n\nlet keyCache = new Array(4096)\nfunction readKey() {\n\tlet length = src[position++]\n\tif (length \u003e= 0x60 \u0026\u0026 length \u003c 0x78) {\n\t\t// fixstr, potentially use key cache\n\t\tlength = length - 0x60\n\t\tif (srcStringEnd \u003e= position) // if it has been extracted, must use it (and faster anyway)\n\t\t\treturn srcString.slice(position - srcStringStart, (position += length) - srcStringStart)\n\t\telse if (!(srcStringEnd == 0 \u0026\u0026 srcEnd \u003c 180))\n\t\t\treturn readFixedString(length)\n\t} else { // not cacheable, go back and do a standard read\n\t\tposition--\n\t\treturn read()\n\t}\n\tlet key = ((length \u003c\u003c 5) ^ (length \u003e 1 ? dataView.getUint16(position) : length \u003e 0 ? src[position] : 0)) \u0026 0xfff\n\tlet entry = keyCache[key]\n\tlet checkPosition = position\n\tlet end = position + length - 3\n\tlet chunk\n\tlet i = 0\n\tif (entry \u0026\u0026 entry.bytes == length) {\n\t\twhile (checkPosition \u003c end) {\n\t\t\tchunk = dataView.getUint32(checkPosition)\n\t\t\tif (chunk != entry[i++]) {\n\t\t\t\tcheckPosition = 0x70000000\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tcheckPosition += 4\n\t\t}\n\t\tend += 3\n\t\twhile (checkPosition \u003c end) {\n\t\t\tchunk = src[checkPosition++]\n\t\t\tif (chunk != entry[i++]) {\n\t\t\t\tcheckPosition = 0x70000000\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\tif (checkPosition === end) {\n\t\t\tposition = checkPosition\n\t\t\treturn entry.string\n\t\t}\n\t\tend -= 3\n\t\tcheckPosition = position\n\t}\n\tentry = []\n\tkeyCache[key] = entry\n\tentry.bytes = length\n\twhile (checkPosition \u003c end) {\n\t\tchunk = dataView.getUint32(checkPosition)\n\t\tentry.push(chunk)\n\t\tcheckPosition += 4\n\t}\n\tend += 3\n\twhile (checkPosition \u003c end) {\n\t\tchunk = src[checkPosition++]\n\t\tentry.push(chunk)\n\t}\n\t// for small blocks, avoiding the overhead of the extract call is helpful\n\tlet string = length \u003c 16 ? shortStringInJS(length) : longStringInJS(length)\n\tif (string != null)\n\t\treturn entry.string = string\n\treturn entry.string = readFixedString(length)\n}\n\nexport class Tag {\n\tconstructor(value, tag) {\n\t\tthis.value = value\n\t\tthis.tag = tag\n\t}\n}\n\ncurrentExtensions[0] = (dateString) =\u003e {\n\t// string date extension\n\treturn new Date(dateString)\n}\n\ncurrentExtensions[1] = (epochSec) =\u003e {\n\t// numeric date extension\n\treturn new Date(Math.round(epochSec * 1000))\n}\n\ncurrentExtensions[2] = (buffer) =\u003e {\n\t// bigint extension\n\tlet value = BigInt(0)\n\tfor (let i = 0, l = buffer.byteLength; i \u003c l; i++) {\n\t\tvalue = BigInt(buffer[i]) + (value \u003c\u003c BigInt(8))\n\t}\n\treturn value\n}\n\ncurrentExtensions[3] = (buffer) =\u003e {\n\t// negative bigint extension\n\treturn BigInt(-1) - currentExtensions[2](buffer)\n}\ncurrentExtensions[4] = (fraction) =\u003e {\n\t// best to reparse to maintain accuracy\n\treturn +(fraction[1] + 'e' + fraction[0])\n}\n\ncurrentExtensions[5] = (fraction) =\u003e {\n\t// probably not sufficiently accurate\n\treturn fraction[1] * Math.exp(fraction[0] * Math.log(2))\n}\n\n// the registration of the record definition extension\nconst recordDefinition = (id, structure) =\u003e {\n\tid = id - 0xe000\n\tlet existingStructure = currentStructures[id]\n\tif (existingStructure \u0026\u0026 existingStructure.isShared) {\n\t\t(currentStructures.restoreStructures || (currentStructures.restoreStructures = []))[id] = existingStructure\n\t}\n\tcurrentStructures[id] = structure\n\n\tstructure.read = createStructureReader(structure)\n}\ncurrentExtensions[LEGACY_RECORD_INLINE_ID] = (data) =\u003e {\n\tlet length = data.length\n\tlet structure = data[1]\n\trecordDefinition(data[0], structure)\n\tlet object = {}\n\tfor (let i = 2; i \u003c length; i++) {\n\t\tlet key = structure[i - 2]\n\t\tobject[safeKey(key)] = data[i]\n\t}\n\treturn object\n}\ncurrentExtensions[14] = (value) =\u003e {\n\tif (bundledStrings)\n\t\treturn bundledStrings[0].slice(bundledStrings.position0, bundledStrings.position0 += value)\n\treturn new Tag(value, 14)\n}\ncurrentExtensions[15] = (value) =\u003e {\n\tif (bundledStrings)\n\t\treturn bundledStrings[1].slice(bundledStrings.position1, bundledStrings.position1 += value)\n\treturn new Tag(value, 15)\n}\nlet glbl = { Error, RegExp }\ncurrentExtensions[27] = (data) =\u003e { // http://cbor.schmorp.de/generic-object\n\treturn (glbl[data[0]] || Error)(data[1], data[2])\n}\nconst packedTable = (read) =\u003e {\n\tif (src[position++] != 0x84) {\n\t\tlet error = new Error('Packed values structure must be followed by a 4 element array')\n\t\tif (src.length \u003c position)\n\t\t\terror.incomplete = true\n\t\tthrow error\n\t}\n\tlet newPackedValues = read() // packed values\n\tif (!newPackedValues || !newPackedValues.length) {\n\t\tlet error = new Error('Packed values structure must be followed by a 4 element array')\n\t\terror.incomplete = true\n\t\tthrow error\n\t}\n\tpackedValues = packedValues ? newPackedValues.concat(packedValues.slice(newPackedValues.length)) : newPackedValues\n\tpackedValues.prefixes = read()\n\tpackedValues.suffixes = read()\n\treturn read() // read the rump\n}\npackedTable.handlesRead = true\ncurrentExtensions[51] = packedTable\n\ncurrentExtensions[PACKED_REFERENCE_TAG_ID] = (data) =\u003e { // packed reference\n\tif (!packedValues) {\n\t\tif (currentDecoder.getShared)\n\t\t\tloadShared()\n\t\telse\n\t\t\treturn new Tag(data, PACKED_REFERENCE_TAG_ID)\n\t}\n\tif (typeof data == 'number')\n\t\treturn packedValues[16 + (data \u003e= 0 ? 2 * data : (-2 * data - 1))]\n\tlet error = new Error('No support for non-integer packed references yet')\n\tif (data === undefined)\n\t\terror.incomplete = true\n\tthrow error\n}\n\n// The following code is an incomplete implementation of http://cbor.schmorp.de/stringref\n// the real thing would need to implemennt more logic to populate the stringRefs table and\n// maintain a stack of stringRef \"namespaces\".\n//\n// currentExtensions[25] = (id) =\u003e {\n// \treturn stringRefs[id]\n// }\n// currentExtensions[256] = (read) =\u003e {\n// \tstringRefs = []\n// \ttry {\n// \t\treturn read()\n// \t} finally {\n// \t\tstringRefs = null\n// \t}\n// }\n// currentExtensions[256].handlesRead = true\n\ncurrentExtensions[28] = (read) =\u003e { \n\t// shareable http://cbor.schmorp.de/value-sharing (for structured clones)\n\tif (!referenceMap) {\n\t\treferenceMap = new Map()\n\t\treferenceMap.id = 0\n\t}\n\tlet id = referenceMap.id++\n\tlet startingPosition = position\n\tlet token = src[position]\n\tlet target\n\t// TODO: handle Maps, Sets, and other types that can cycle; this is complicated, because you potentially need to read\n\t// ahead past references to record structure definitions\n\tif ((token \u003e\u003e 5) == 4)\n\t\ttarget = []\n\telse\n\t\ttarget = {}\n\n\tlet refEntry = { target } // a placeholder object\n\treferenceMap.set(id, refEntry)\n\tlet targetProperties = read() // read the next value as the target object to id\n\tif (refEntry.used) {// there is a cycle, so we have to assign properties to original target\n\t\tif (Object.getPrototypeOf(target) !== Object.getPrototypeOf(targetProperties)) {\n\t\t\t// this means that the returned target does not match the targetProperties, so we need rerun the read to\n\t\t\t// have the correctly create instance be assigned as a reference, then we do the copy the properties back to the\n\t\t\t// target\n\t\t\t// reset the position so that the read can be repeated\n\t\t\tposition = startingPosition\n\t\t\t// the returned instance is our new target for references\n\t\t\ttarget = targetProperties\n\t\t\treferenceMap.set(id, { target })\n\t\t\ttargetProperties = read()\n\t\t}\n\t\treturn Object.assign(target, targetProperties)\n\t}\n\trefEntry.target = targetProperties // the placeholder wasn't used, replace with the deserialized one\n\treturn targetProperties // no cycle, can just use the returned read object\n}\ncurrentExtensions[28].handlesRead = true\n\ncurrentExtensions[29] = (id) =\u003e {\n\t// sharedref http://cbor.schmorp.de/value-sharing (for structured clones)\n\tlet refEntry = referenceMap.get(id)\n\trefEntry.used = true\n\treturn refEntry.target\n}\n\ncurrentExtensions[258] = (array) =\u003e new Set(array); // https://github.com/input-output-hk/cbor-sets-spec/blob/master/CBOR_SETS.md\n(currentExtensions[259] = (read) =\u003e {\n\t// https://github.com/shanewholloway/js-cbor-codec/blob/master/docs/CBOR-259-spec\n\t// for decoding as a standard Map\n\tif (currentDecoder.mapsAsObjects) {\n\t\tcurrentDecoder.mapsAsObjects = false\n\t\trestoreMapsAsObject = true\n\t}\n\treturn read()\n}).handlesRead = true\nfunction combine(a, b) {\n\tif (typeof a === 'string')\n\t\treturn a + b\n\tif (a instanceof Array)\n\t\treturn a.concat(b)\n\treturn Object.assign({}, a, b)\n}\nfunction getPackedValues() {\n\tif (!packedValues) {\n\t\tif (currentDecoder.getShared)\n\t\t\tloadShared()\n\t\telse\n\t\t\tthrow new Error('No packed values available')\n\t}\n\treturn packedValues\n}\nconst SHARED_DATA_TAG_ID = 0x53687264 // ascii 'Shrd'\ncurrentExtensionRanges.push((tag, input) =\u003e {\n\tif (tag \u003e= 225 \u0026\u0026 tag \u003c= 255)\n\t\treturn combine(getPackedValues().prefixes[tag - 224], input)\n\tif (tag \u003e= 28704 \u0026\u0026 tag \u003c= 32767)\n\t\treturn combine(getPackedValues().prefixes[tag - 28672], input)\n\tif (tag \u003e= 1879052288 \u0026\u0026 tag \u003c= 2147483647)\n\t\treturn combine(getPackedValues().prefixes[tag - 1879048192], input)\n\tif (tag \u003e= 216 \u0026\u0026 tag \u003c= 223)\n\t\treturn combine(input, getPackedValues().suffixes[tag - 216])\n\tif (tag \u003e= 27647 \u0026\u0026 tag \u003c= 28671)\n\t\treturn combine(input, getPackedValues().suffixes[tag - 27639])\n\tif (tag \u003e= 1811940352 \u0026\u0026 tag \u003c= 1879048191)\n\t\treturn combine(input, getPackedValues().suffixes[tag - 1811939328])\n\tif (tag == SHARED_DATA_TAG_ID) {// we do a special check for this so that we can keep the currentExtensions as densely stored array (v8 stores arrays densely under about 3000 elements)\n\t\treturn {\n\t\t\tpackedValues: packedValues,\n\t\t\tstructures: currentStructures.slice(0),\n\t\t\tversion: input,\n\t\t}\n\t}\n\tif (tag == 55799) // self-descriptive CBOR tag, just return input value\n\t\treturn input\n})\n\nconst isLittleEndianMachine = new Uint8Array(new Uint16Array([1]).buffer)[0] == 1\nexport const typedArrays = [Uint8Array, Uint8ClampedArray, Uint16Array, Uint32Array,\n\ttypeof BigUint64Array == 'undefined' ? { name:'BigUint64Array' } : BigUint64Array, Int8Array, Int16Array, Int32Array,\n\ttypeof BigInt64Array == 'undefined' ? { name:'BigInt64Array' } : BigInt64Array, Float32Array, Float64Array]\nconst typedArrayTags = [64, 68, 69, 70, 71, 72, 77, 78, 79, 85, 86]\nfor (let i = 0; i \u003c typedArrays.length; i++) {\n\tregisterTypedArray(typedArrays[i], typedArrayTags[i])\n}\nfunction registerTypedArray(TypedArray, tag) {\n\tlet dvMethod = 'get' + TypedArray.name.slice(0, -5)\n\tlet bytesPerElement;\n\tif (typeof TypedArray === 'function')\n\t\tbytesPerElement = TypedArray.BYTES_PER_ELEMENT;\n\telse\n\t\tTypedArray = null;\n\tfor (let littleEndian = 0; littleEndian \u003c 2; littleEndian++) {\n\t\tif (!littleEndian \u0026\u0026 bytesPerElement == 1)\n\t\t\tcontinue\n\t\tlet sizeShift = bytesPerElement == 2 ? 1 : bytesPerElement == 4 ? 2 : bytesPerElement == 8 ? 3 : 0\n\t\tcurrentExtensions[littleEndian ? tag : (tag - 4)] = (bytesPerElement == 1 || littleEndian == isLittleEndianMachine) ? (buffer) =\u003e {\n\t\t\tif (!TypedArray)\n\t\t\t\tthrow new Error('Could not find typed array for code ' + tag)\n\t\t\tif (!currentDecoder.copyBuffers) {\n\t\t\t\t// try provide a direct view, but will only work if we are byte-aligned\n\t\t\t\tif (bytesPerElement === 1 ||\n\t\t\t\t\tbytesPerElement === 2 \u0026\u0026 !(buffer.byteOffset \u0026 1) ||\n\t\t\t\t\tbytesPerElement === 4 \u0026\u0026 !(buffer.byteOffset \u0026 3) ||\n\t\t\t\t\tbytesPerElement === 8 \u0026\u0026 !(buffer.byteOffset \u0026 7))\n\t\t\t\t\treturn new TypedArray(buffer.buffer, buffer.byteOffset, buffer.byteLength \u003e\u003e sizeShift);\n\t\t\t}\n\t\t\t// we have to slice/copy here to get a new ArrayBuffer, if we are not word/byte aligned\n\t\t\treturn new TypedArray(Uint8Array.prototype.slice.call(buffer, 0).buffer)\n\t\t} : buffer =\u003e {\n\t\t\tif (!TypedArray)\n\t\t\t\tthrow new Error('Could not find typed array for code ' + tag)\n\t\t\tlet dv = new DataView(buffer.buffer, buffer.byteOffset, buffer.byteLength)\n\t\t\tlet elements = buffer.length \u003e\u003e sizeShift\n\t\t\tlet ta = new TypedArray(elements)\n\t\t\tlet method = dv[dvMethod]\n\t\t\tfor (let i = 0; i \u003c elements; i++) {\n\t\t\t\tta[i] = method.call(dv, i \u003c\u003c sizeShift, littleEndian)\n\t\t\t}\n\t\t\treturn ta\n\t\t}\n\t}\n}\n\nfunction readBundleExt() {\n\tlet length = readJustLength()\n\tlet bundlePosition = position + read()\n\tfor (let i = 2; i \u003c length; i++) {\n\t\t// skip past bundles that were already read\n\t\tlet bundleLength = readJustLength() // this will increment position, so must add to position afterwards\n\t\tposition += bundleLength\n\t}\n\tlet dataPosition = position\n\tposition = bundlePosition\n\tbundledStrings = [readStringJS(readJustLength()), readStringJS(readJustLength())]\n\tbundledStrings.position0 = 0\n\tbundledStrings.position1 = 0\n\tbundledStrings.postBundlePosition = position\n\tposition = dataPosition\n\treturn read()\n}\n\nfunction readJustLength() {\n\tlet token = src[position++] \u0026 0x1f\n\tif (token \u003e 0x17) {\n\t\tswitch (token) {\n\t\t\tcase 0x18:\n\t\t\t\ttoken = src[position++]\n\t\t\t\tbreak\n\t\t\tcase 0x19:\n\t\t\t\ttoken = dataView.getUint16(position)\n\t\t\t\tposition += 2\n\t\t\t\tbreak\n\t\t\tcase 0x1a:\n\t\t\t\ttoken = dataView.getUint32(position)\n\t\t\t\tposition += 4\n\t\t\t\tbreak\n\t\t}\n\t}\n\treturn token\n}\n\nfunction loadShared() {\n\tif (currentDecoder.getShared) {\n\t\tlet sharedData = saveState(() =\u003e {\n\t\t\t// save the state in case getShared modifies our buffer\n\t\t\tsrc = null\n\t\t\treturn currentDecoder.getShared()\n\t\t}) || {}\n\t\tlet updatedStructures = sharedData.structures || []\n\t\tcurrentDecoder.sharedVersion = sharedData.version\n\t\tpackedValues = currentDecoder.sharedValues = sharedData.packedValues\n\t\tif (currentStructures === true)\n\t\t\tcurrentDecoder.structures = currentStructures = updatedStructures\n\t\telse\n\t\t\tcurrentStructures.splice.apply(currentStructures, [0, updatedStructures.length].concat(updatedStructures))\n\t}\n}\n\nfunction saveState(callback) {\n\tlet savedSrcEnd = srcEnd\n\tlet savedPosition = position\n\tlet savedStringPosition = stringPosition\n\tlet savedSrcStringStart = srcStringStart\n\tlet savedSrcStringEnd = srcStringEnd\n\tlet savedSrcString = srcString\n\tlet savedStrings = strings\n\tlet savedReferenceMap = referenceMap\n\tlet savedBundledStrings = bundledStrings\n\n\t// TODO: We may need to revisit this if we do more external calls to user code (since it could be slow)\n\tlet savedSrc = new Uint8Array(src.slice(0, srcEnd)) // we copy the data in case it changes while external data is processed\n\tlet savedStructures = currentStructures\n\tlet savedDecoder = currentDecoder\n\tlet savedSequentialMode = sequentialMode\n\tlet value = callback()\n\tsrcEnd = savedSrcEnd\n\tposition = savedPosition\n\tstringPosition = savedStringPosition\n\tsrcStringStart = savedSrcStringStart\n\tsrcStringEnd = savedSrcStringEnd\n\tsrcString = savedSrcString\n\tstrings = savedStrings\n\treferenceMap = savedReferenceMap\n\tbundledStrings = savedBundledStrings\n\tsrc = savedSrc\n\tsequentialMode = savedSequentialMode\n\tcurrentStructures = savedStructures\n\tcurrentDecoder = savedDecoder\n\tdataView = new DataView(src.buffer, src.byteOffset, src.byteLength)\n\treturn value\n}\nexport function clearSource() {\n\tsrc = null\n\treferenceMap = null\n\tcurrentStructures = null\n}\n\nexport function addExtension(extension) {\n\tcurrentExtensions[extension.tag] = extension.decode\n}\n\nexport function setSizeLimits(limits) {\n\tif (limits.maxMapSize) maxMapSize = limits.maxMapSize;\n\tif (limits.maxArraySize) maxArraySize = limits.maxArraySize;\n\tif (limits.maxObjectSize) maxObjectSize = limits.maxObjectSize;\n}\n\nexport const mult10 = new Array(147) // this is a table matching binary exponents to the multiplier to determine significant digit rounding\nfor (let i = 0; i \u003c 256; i++) {\n\tmult10[i] = +('1e' + Math.floor(45.15 - i * 0.30103))\n}\nlet defaultDecoder = new Decoder({ useRecords: false })\nexport const decode = defaultDecoder.decode\nexport const decodeMultiple = defaultDecoder.decodeMultiple\nexport const FLOAT32_OPTIONS = {\n\tNEVER: 0,\n\tALWAYS: 1,\n\tDECIMAL_ROUND: 3,\n\tDECIMAL_FIT: 4\n}\nexport function roundFloat32(float32Number) {\n\tf32Array[0] = float32Number\n\tlet multiplier = mult10[((u8Array[3] \u0026 0x7f) \u003c\u003c 1) | (u8Array[2] \u003e\u003e 7)]\n\treturn ((multiplier * float32Number + (float32Number \u003e 0 ? 0.5 : -0.5)) \u003e\u003e 0) / multiplier\n}\n","import { Decoder, mult10, Tag, typedArrays, addExtension as decodeAddExtension } from './decode.js'\nlet textEncoder\ntry {\n\ttextEncoder = new TextEncoder()\n} catch (error) {}\nlet extensions, extensionClasses\nconst Buffer = typeof globalThis === 'object' \u0026\u0026 globalThis.Buffer;\nconst hasNodeBuffer = typeof Buffer !== 'undefined'\nconst ByteArrayAllocate = hasNodeBuffer ? Buffer.allocUnsafeSlow : Uint8Array\nconst ByteArray = hasNodeBuffer ? Buffer : Uint8Array\nconst MAX_STRUCTURES = 0x100\nconst MAX_BUFFER_SIZE = hasNodeBuffer ? 0x100000000 : 0x7fd00000\nlet serializationId = 1\nlet throwOnIterable\nlet target\nlet targetView\nlet position = 0\nlet safeEnd\nlet bundledStrings = null\nconst MAX_BUNDLE_SIZE = 0xf000\nconst hasNonLatin = /[\\u0080-\\uFFFF]/\nconst RECORD_SYMBOL = Symbol('record-id')\nexport class Encoder extends Decoder {\n\tconstructor(options) {\n\t\tsuper(options)\n\t\tthis.offset = 0\n\t\tlet typeBuffer\n\t\tlet start\n\t\tlet sharedStructures\n\t\tlet hasSharedUpdate\n\t\tlet structures\n\t\tlet referenceMap\n\t\toptions = options || {}\n\t\tlet encodeUtf8 = ByteArray.prototype.utf8Write ? function(string, position, maxBytes) {\n\t\t\treturn target.utf8Write(string, position, maxBytes)\n\t\t} : (textEncoder \u0026\u0026 textEncoder.encodeInto) ?\n\t\t\tfunction(string, position) {\n\t\t\t\treturn textEncoder.encodeInto(string, target.subarray(position)).written\n\t\t\t} : false\n\n\t\tlet encoder = this\n\t\tlet hasSharedStructures = options.structures || options.saveStructures\n\t\tlet maxSharedStructures = options.maxSharedStructures\n\t\tif (maxSharedStructures == null)\n\t\t\tmaxSharedStructures = hasSharedStructures ? 128 : 0\n\t\tif (maxSharedStructures \u003e 8190)\n\t\t\tthrow new Error('Maximum maxSharedStructure is 8190')\n\t\tlet isSequential = options.sequential\n\t\tif (isSequential) {\n\t\t\tmaxSharedStructures = 0\n\t\t}\n\t\tif (!this.structures)\n\t\t\tthis.structures = []\n\t\tif (this.saveStructures)\n\t\t\tthis.saveShared = this.saveStructures\n\t\tlet samplingPackedValues, packedObjectMap, sharedValues = options.sharedValues\n\t\tlet sharedPackedObjectMap\n\t\tif (sharedValues) {\n\t\t\tsharedPackedObjectMap = Object.create(null)\n\t\t\tfor (let i = 0, l = sharedValues.length; i \u003c l; i++) {\n\t\t\t\tsharedPackedObjectMap[sharedValues[i]] = i\n\t\t\t}\n\t\t}\n\t\tlet recordIdsToRemove = []\n\t\tlet transitionsCount = 0\n\t\tlet serializationsSinceTransitionRebuild = 0\n\t\t\n\t\tthis.mapEncode = function(value, encodeOptions) {\n\t\t\t// Experimental support for premapping keys using _keyMap instad of keyMap - not optiimised yet)\n\t\t\tif (this._keyMap \u0026\u0026 !this._mapped) {\n\t\t\t\t//console.log('encoding ', value)\n\t\t\t\tswitch (value.constructor.name) {\n\t\t\t\t\tcase 'Array': \n\t\t\t\t\t\tvalue = value.map(r =\u003e this.encodeKeys(r))\n\t\t\t\t\t\tbreak\n\t\t\t\t\t//case 'Map': \n\t\t\t\t\t//\tvalue = this.encodeKeys(value)\n\t\t\t\t\t//\tbreak\n\t\t\t\t}\n\t\t\t\t//this._mapped = true\n\t\t\t}\n\t\t\treturn this.encode(value, encodeOptions)\n\t\t}\n\t\t\n\t\tthis.encode = function(value, encodeOptions)\t{\n\t\t\tif (!target) {\n\t\t\t\ttarget = new ByteArrayAllocate(8192)\n\t\t\t\ttargetView = new DataView(target.buffer, 0, 8192)\n\t\t\t\tposition = 0\n\t\t\t}\n\t\t\tsafeEnd = target.length - 10\n\t\t\tif (safeEnd - position \u003c 0x800) {\n\t\t\t\t// don't start too close to the end, \n\t\t\t\ttarget = new ByteArrayAllocate(target.length)\n\t\t\t\ttargetView = new DataView(target.buffer, 0, target.length)\n\t\t\t\tsafeEnd = target.length - 10\n\t\t\t\tposition = 0\n\t\t\t} else if (encodeOptions === REUSE_BUFFER_MODE)\n\t\t\t\tposition = (position + 7) \u0026 0x7ffffff8 // Word align to make any future copying of this buffer faster\n\t\t\tstart = position\n\t\t\tif (encoder.useSelfDescribedHeader) {\n\t\t\t\ttargetView.setUint32(position, 0xd9d9f700) // tag two byte, then self-descriptive tag\n\t\t\t\tposition += 3\n\t\t\t}\n\t\t\treferenceMap = encoder.structuredClone ? new Map() : null\n\t\t\tif (encoder.bundleStrings \u0026\u0026 typeof value !== 'string') {\n\t\t\t\tbundledStrings = []\n\t\t\t\tbundledStrings.size = Infinity // force a new bundle start on first string\n\t\t\t} else\n\t\t\t\tbundledStrings = null\n\n\t\t\tsharedStructures = encoder.structures\n\t\t\tif (sharedStructures) {\n\t\t\t\tif (sharedStructures.uninitialized) {\n\t\t\t\t\tlet sharedData = encoder.getShared() || {}\n\t\t\t\t\tencoder.structures = sharedStructures = sharedData.structures || []\n\t\t\t\t\tencoder.sharedVersion = sharedData.version\n\t\t\t\t\tlet sharedValues = encoder.sharedValues = sharedData.packedValues\n\t\t\t\t\tif (sharedValues) {\n\t\t\t\t\t\tsharedPackedObjectMap = {}\n\t\t\t\t\t\tfor (let i = 0, l = sharedValues.length; i \u003c l; i++)\n\t\t\t\t\t\t\tsharedPackedObjectMap[sharedValues[i]] = i\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tlet sharedStructuresLength = sharedStructures.length\n\t\t\t\tif (sharedStructuresLength \u003e maxSharedStructures \u0026\u0026 !isSequential)\n\t\t\t\t\tsharedStructuresLength = maxSharedStructures\n\t\t\t\tif (!sharedStructures.transitions) {\n\t\t\t\t\t// rebuild our structure transitions\n\t\t\t\t\tsharedStructures.transitions = Object.create(null)\n\t\t\t\t\tfor (let i = 0; i \u003c sharedStructuresLength; i++) {\n\t\t\t\t\t\tlet keys = sharedStructures[i]\n\t\t\t\t\t\t//console.log('shared struct keys:', keys)\n\t\t\t\t\t\tif (!keys)\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\tlet nextTransition, transition = sharedStructures.transitions\n\t\t\t\t\t\tfor (let j = 0, l = keys.length; j \u003c l; j++) {\n\t\t\t\t\t\t\tif (transition[RECORD_SYMBOL] === undefined)\n\t\t\t\t\t\t\t\ttransition[RECORD_SYMBOL] = i\n\t\t\t\t\t\t\tlet key = keys[j]\n\t\t\t\t\t\t\tnextTransition = transition[key]\n\t\t\t\t\t\t\tif (!nextTransition) {\n\t\t\t\t\t\t\t\tnextTransition = transition[key] = Object.create(null)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttransition = nextTransition\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttransition[RECORD_SYMBOL] = i | 0x100000\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!isSequential)\n\t\t\t\t\tsharedStructures.nextId = sharedStructuresLength\n\t\t\t}\n\t\t\tif (hasSharedUpdate)\n\t\t\t\thasSharedUpdate = false\n\t\t\tstructures = sharedStructures || []\n\t\t\tpackedObjectMap = sharedPackedObjectMap\n\t\t\tif (options.pack) {\n\t\t\t\tlet packedValues = new Map()\n\t\t\t\tpackedValues.values = []\n\t\t\t\tpackedValues.encoder = encoder\n\t\t\t\tpackedValues.maxValues = options.maxPrivatePackedValues || (sharedPackedObjectMap ? 16 : Infinity)\n\t\t\t\tpackedValues.objectMap = sharedPackedObjectMap || false\n\t\t\t\tpackedValues.samplingPackedValues = samplingPackedValues\n\t\t\t\tfindRepetitiveStrings(value, packedValues)\n\t\t\t\tif (packedValues.values.length \u003e 0) {\n\t\t\t\t\ttarget[position++] = 0xd8 // one-byte tag\n\t\t\t\t\ttarget[position++] = 51 // tag 51 for packed shared structures https://www.potaroo.net/ietf/ids/draft-ietf-cbor-packed-03.txt\n\t\t\t\t\twriteArrayHeader(4)\n\t\t\t\t\tlet valuesArray = packedValues.values\n\t\t\t\t\tencode(valuesArray)\n\t\t\t\t\twriteArrayHeader(0) // prefixes\n\t\t\t\t\twriteArrayHeader(0) // suffixes\n\t\t\t\t\tpackedObjectMap = Object.create(sharedPackedObjectMap || null)\n\t\t\t\t\tfor (let i = 0, l = valuesArray.length; i \u003c l; i++) {\n\t\t\t\t\t\tpackedObjectMap[valuesArray[i]] = i\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthrowOnIterable = encodeOptions \u0026 THROW_ON_ITERABLE;\n\t\t\ttry {\n\t\t\t\tif (throwOnIterable)\n\t\t\t\t\treturn;\n\t\t\t\tencode(value)\n\t\t\t\tif (bundledStrings) {\n\t\t\t\t\twriteBundles(start, encode)\n\t\t\t\t}\n\t\t\t\tencoder.offset = position // update the offset so next serialization doesn't write over our buffer, but can continue writing to same buffer sequentially\n\t\t\t\tif (referenceMap \u0026\u0026 referenceMap.idsToInsert) {\n\t\t\t\t\tposition += referenceMap.idsToInsert.length * 2\n\t\t\t\t\tif (position \u003e safeEnd)\n\t\t\t\t\t\tmakeRoom(position)\n\t\t\t\t\tencoder.offset = position\n\t\t\t\t\tlet serialized = insertIds(target.subarray(start, position), referenceMap.idsToInsert)\n\t\t\t\t\treferenceMap = null\n\t\t\t\t\treturn serialized\n\t\t\t\t}\n\t\t\t\tif (encodeOptions \u0026 REUSE_BUFFER_MODE) {\n\t\t\t\t\ttarget.start = start\n\t\t\t\t\ttarget.end = position\n\t\t\t\t\treturn target\n\t\t\t\t}\n\t\t\t\treturn target.subarray(start, position) // position can change if we call encode again in saveShared, so we get the buffer now\n\t\t\t} finally {\n\t\t\t\tif (sharedStructures) {\n\t\t\t\t\tif (serializationsSinceTransitionRebuild \u003c 10)\n\t\t\t\t\t\tserializationsSinceTransitionRebuild++\n\t\t\t\t\tif (sharedStructures.length \u003e maxSharedStructures)\n\t\t\t\t\t\tsharedStructures.length = maxSharedStructures\n\t\t\t\t\tif (transitionsCount \u003e 10000) {\n\t\t\t\t\t\t// force a rebuild occasionally after a lot of transitions so it can get cleaned up\n\t\t\t\t\t\tsharedStructures.transitions = null\n\t\t\t\t\t\tserializationsSinceTransitionRebuild = 0\n\t\t\t\t\t\ttransitionsCount = 0\n\t\t\t\t\t\tif (recordIdsToRemove.length \u003e 0)\n\t\t\t\t\t\t\trecordIdsToRemove = []\n\t\t\t\t\t} else if (recordIdsToRemove.length \u003e 0 \u0026\u0026 !isSequential) {\n\t\t\t\t\t\tfor (let i = 0, l = recordIdsToRemove.length; i \u003c l; i++) {\n\t\t\t\t\t\t\trecordIdsToRemove[i][RECORD_SYMBOL] = undefined\n\t\t\t\t\t\t}\n\t\t\t\t\t\trecordIdsToRemove = []\n\t\t\t\t\t\t//sharedStructures.nextId = maxSharedStructures\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (hasSharedUpdate \u0026\u0026 encoder.saveShared) {\n\t\t\t\t\tif (encoder.structures.length \u003e maxSharedStructures) {\n\t\t\t\t\t\tencoder.structures = encoder.structures.slice(0, maxSharedStructures)\n\t\t\t\t\t}\n\t\t\t\t\t// we can't rely on start/end with REUSE_BUFFER_MODE since they will (probably) change when we save\n\t\t\t\t\tlet returnBuffer = target.subarray(start, position)\n\t\t\t\t\tif (encoder.updateSharedData() === false)\n\t\t\t\t\t\treturn encoder.encode(value) // re-encode if it fails\n\t\t\t\t\treturn returnBuffer\n\t\t\t\t}\n\t\t\t\tif (encodeOptions \u0026 RESET_BUFFER_MODE)\n\t\t\t\t\tposition = start\n\t\t\t}\n\t\t}\n\t\tthis.findCommonStringsToPack = () =\u003e {\n\t\t\tsamplingPackedValues = new Map()\n\t\t\tif (!sharedPackedObjectMap)\n\t\t\t\tsharedPackedObjectMap = Object.create(null)\n\t\t\treturn (options) =\u003e {\n\t\t\t\tlet threshold = options \u0026\u0026 options.threshold || 4\n\t\t\t\tlet position = this.pack ? options.maxPrivatePackedValues || 16 : 0\n\t\t\t\tif (!sharedValues)\n\t\t\t\t\tsharedValues = this.sharedValues = []\n\t\t\t\tfor (let [ key, status ] of samplingPackedValues) {\n\t\t\t\t\tif (status.count \u003e threshold) {\n\t\t\t\t\t\tsharedPackedObjectMap[key] = position++\n\t\t\t\t\t\tsharedValues.push(key)\n\t\t\t\t\t\thasSharedUpdate = true\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\twhile (this.saveShared \u0026\u0026 this.updateSharedData() === false) {}\n\t\t\t\tsamplingPackedValues = null\n\t\t\t}\n\t\t}\n\t\tconst encode = (value) =\u003e {\n\t\t\tif (position \u003e safeEnd)\n\t\t\t\ttarget = makeRoom(position)\n\n\t\t\tvar type = typeof value\n\t\t\tvar length\n\t\t\tif (type === 'string') {\n\t\t\t\tif (packedObjectMap) {\n\t\t\t\t\tlet packedPosition = packedObjectMap[value]\n\t\t\t\t\tif (packedPosition \u003e= 0) {\n\t\t\t\t\t\tif (packedPosition \u003c 16)\n\t\t\t\t\t\t\ttarget[position++] = packedPosition + 0xe0 // simple values, defined in https://www.potaroo.net/ietf/ids/draft-ietf-cbor-packed-03.txt\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\ttarget[position++] = 0xc6 // tag 6 defined in https://www.potaroo.net/ietf/ids/draft-ietf-cbor-packed-03.txt\n\t\t\t\t\t\t\tif (packedPosition \u0026 1)\n\t\t\t\t\t\t\t\tencode((15 - packedPosition) \u003e\u003e 1)\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tencode((packedPosition - 16) \u003e\u003e 1)\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn\n/*\t\t\t\t\t\t} else if (packedStatus.serializationId != serializationId) {\n\t\t\t\t\t\t\tpackedStatus.serializationId = serializationId\n\t\t\t\t\t\t\tpackedStatus.count = 1\n\t\t\t\t\t\t\tif (options.sharedPack) {\n\t\t\t\t\t\t\t\tlet sharedCount = packedStatus.sharedCount = (packedStatus.sharedCount || 0) + 1\n\t\t\t\t\t\t\t\tif (shareCount \u003e (options.sharedPack.threshold || 5)) {\n\t\t\t\t\t\t\t\t\tlet sharedPosition = packedStatus.position = packedStatus.nextSharedPosition\n\t\t\t\t\t\t\t\t\thasSharedUpdate = true\n\t\t\t\t\t\t\t\t\tif (sharedPosition \u003c 16)\n\t\t\t\t\t\t\t\t\t\ttarget[position++] = sharedPosition + 0xc0\n\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} // else any in-doc incrementation?*/\n\t\t\t\t\t} else if (samplingPackedValues \u0026\u0026 !options.pack) {\n\t\t\t\t\t\tlet status = samplingPackedValues.get(value)\n\t\t\t\t\t\tif (status)\n\t\t\t\t\t\t\tstatus.count++\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tsamplingPackedValues.set(value, {\n\t\t\t\t\t\t\t\tcount: 1,\n\t\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tlet strLength = value.length\n\t\t\t\tif (bundledStrings \u0026\u0026 strLength \u003e= 4 \u0026\u0026 strLength \u003c 0x400) {\n\t\t\t\t\tif ((bundledStrings.size += strLength) \u003e MAX_BUNDLE_SIZE) {\n\t\t\t\t\t\tlet extStart\n\t\t\t\t\t\tlet maxBytes = (bundledStrings[0] ? bundledStrings[0].length * 3 + bundledStrings[1].length : 0) + 10\n\t\t\t\t\t\tif (position + maxBytes \u003e safeEnd)\n\t\t\t\t\t\t\ttarget = makeRoom(position + maxBytes)\n\t\t\t\t\t\ttarget[position++] = 0xd9 // tag 16-bit\n\t\t\t\t\t\ttarget[position++] = 0xdf // tag 0xdff9\n\t\t\t\t\t\ttarget[position++] = 0xf9\n\t\t\t\t\t\t// TODO: If we only have one bundle with any string data, only write one string bundle\n\t\t\t\t\t\ttarget[position++] = bundledStrings.position ? 0x84 : 0x82 // array of 4 or 2 elements depending on if we write bundles\n\t\t\t\t\t\ttarget[position++] = 0x1a // 32-bit unsigned int\n\t\t\t\t\t\textStart = position - start\n\t\t\t\t\t\tposition += 4 // reserve for writing bundle reference\n\t\t\t\t\t\tif (bundledStrings.position) {\n\t\t\t\t\t\t\twriteBundles(start, encode) // write the last bundles\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbundledStrings = ['', ''] // create new ones\n\t\t\t\t\t\tbundledStrings.size = 0\n\t\t\t\t\t\tbundledStrings.position = extStart\n\t\t\t\t\t}\n\t\t\t\t\tlet twoByte = hasNonLatin.test(value)\n\t\t\t\t\tbundledStrings[twoByte ? 0 : 1] += value\n\t\t\t\t\ttarget[position++] = twoByte ? 0xce : 0xcf\n\t\t\t\t\tencode(strLength);\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tlet headerSize\n\t\t\t\t// first we estimate the header size, so we can write to the correct location\n\t\t\t\tif (strLength \u003c 0x20) {\n\t\t\t\t\theaderSize = 1\n\t\t\t\t} else if (strLength \u003c 0x100) {\n\t\t\t\t\theaderSize = 2\n\t\t\t\t} else if (strLength \u003c 0x10000) {\n\t\t\t\t\theaderSize = 3\n\t\t\t\t} else {\n\t\t\t\t\theaderSize = 5\n\t\t\t\t}\n\t\t\t\tlet maxBytes = strLength * 3\n\t\t\t\tif (position + maxBytes \u003e safeEnd)\n\t\t\t\t\ttarget = makeRoom(position + maxBytes)\n\n\t\t\t\tif (strLength \u003c 0x40 || !encodeUtf8) {\n\t\t\t\t\tlet i, c1, c2, strPosition = position + headerSize\n\t\t\t\t\tfor (i = 0; i \u003c strLength; i++) {\n\t\t\t\t\t\tc1 = value.charCodeAt(i)\n\t\t\t\t\t\tif (c1 \u003c 0x80) {\n\t\t\t\t\t\t\ttarget[strPosition++] = c1\n\t\t\t\t\t\t} else if (c1 \u003c 0x800) {\n\t\t\t\t\t\t\ttarget[strPosition++] = c1 \u003e\u003e 6 | 0xc0\n\t\t\t\t\t\t\ttarget[strPosition++] = c1 \u0026 0x3f | 0x80\n\t\t\t\t\t\t} else if (\n\t\t\t\t\t\t\t(c1 \u0026 0xfc00) === 0xd800 \u0026\u0026\n\t\t\t\t\t\t\t((c2 = value.charCodeAt(i + 1)) \u0026 0xfc00) === 0xdc00\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tc1 = 0x10000 + ((c1 \u0026 0x03ff) \u003c\u003c 10) + (c2 \u0026 0x03ff)\n\t\t\t\t\t\t\ti++\n\t\t\t\t\t\t\ttarget[strPosition++] = c1 \u003e\u003e 18 | 0xf0\n\t\t\t\t\t\t\ttarget[strPosition++] = c1 \u003e\u003e 12 \u0026 0x3f | 0x80\n\t\t\t\t\t\t\ttarget[strPosition++] = c1 \u003e\u003e 6 \u0026 0x3f | 0x80\n\t\t\t\t\t\t\ttarget[strPosition++] = c1 \u0026 0x3f | 0x80\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttarget[strPosition++] = c1 \u003e\u003e 12 | 0xe0\n\t\t\t\t\t\t\ttarget[strPosition++] = c1 \u003e\u003e 6 \u0026 0x3f | 0x80\n\t\t\t\t\t\t\ttarget[strPosition++] = c1 \u0026 0x3f | 0x80\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tlength = strPosition - position - headerSize\n\t\t\t\t} else {\n\t\t\t\t\tlength = encodeUtf8(value, position + headerSize, maxBytes)\n\t\t\t\t}\n\n\t\t\t\tif (length \u003c 0x18) {\n\t\t\t\t\ttarget[position++] = 0x60 | length\n\t\t\t\t} else if (length \u003c 0x100) {\n\t\t\t\t\tif (headerSize \u003c 2) {\n\t\t\t\t\t\ttarget.copyWithin(position + 2, position + 1, position + 1 + length)\n\t\t\t\t\t}\n\t\t\t\t\ttarget[position++] = 0x78\n\t\t\t\t\ttarget[position++] = length\n\t\t\t\t} else if (length \u003c 0x10000) {\n\t\t\t\t\tif (headerSize \u003c 3) {\n\t\t\t\t\t\ttarget.copyWithin(position + 3, position + 2, position + 2 + length)\n\t\t\t\t\t}\n\t\t\t\t\ttarget[position++] = 0x79\n\t\t\t\t\ttarget[position++] = length \u003e\u003e 8\n\t\t\t\t\ttarget[position++] = length \u0026 0xff\n\t\t\t\t} else {\n\t\t\t\t\tif (headerSize \u003c 5) {\n\t\t\t\t\t\ttarget.copyWithin(position + 5, position + 3, position + 3 + length)\n\t\t\t\t\t}\n\t\t\t\t\ttarget[position++] = 0x7a\n\t\t\t\t\ttargetView.setUint32(position, length)\n\t\t\t\t\tposition += 4\n\t\t\t\t}\n\t\t\t\tposition += length\n\t\t\t} else if (type === 'number') {\n\t\t\t\tif (!this.alwaysUseFloat \u0026\u0026 value \u003e\u003e\u003e 0 === value) {// positive integer, 32-bit or less\n\t\t\t\t\t// positive uint\n\t\t\t\t\tif (value \u003c 0x18) {\n\t\t\t\t\t\ttarget[position++] = value\n\t\t\t\t\t} else if (value \u003c 0x100) {\n\t\t\t\t\t\ttarget[position++] = 0x18\n\t\t\t\t\t\ttarget[position++] = value\n\t\t\t\t\t} else if (value \u003c 0x10000) {\n\t\t\t\t\t\ttarget[position++] = 0x19\n\t\t\t\t\t\ttarget[position++] = value \u003e\u003e 8\n\t\t\t\t\t\ttarget[position++] = value \u0026 0xff\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttarget[position++] = 0x1a\n\t\t\t\t\t\ttargetView.setUint32(position, value)\n\t\t\t\t\t\tposition += 4\n\t\t\t\t\t}\n\t\t\t\t} else if (!this.alwaysUseFloat \u0026\u0026 value \u003e\u003e 0 === value) { // negative integer\n\t\t\t\t\tif (value \u003e= -0x18) {\n\t\t\t\t\t\ttarget[position++] = 0x1f - value\n\t\t\t\t\t} else if (value \u003e= -0x100) {\n\t\t\t\t\t\ttarget[position++] = 0x38\n\t\t\t\t\t\ttarget[position++] = ~value\n\t\t\t\t\t} else if (value \u003e= -0x10000) {\n\t\t\t\t\t\ttarget[position++] = 0x39\n\t\t\t\t\t\ttargetView.setUint16(position, ~value)\n\t\t\t\t\t\tposition += 2\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttarget[position++] = 0x3a\n\t\t\t\t\t\ttargetView.setUint32(position, ~value)\n\t\t\t\t\t\tposition += 4\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tlet useFloat32\n\t\t\t\t\tif ((useFloat32 = this.useFloat32) \u003e 0 \u0026\u0026 value \u003c 0x100000000 \u0026\u0026 value \u003e= -0x80000000) {\n\t\t\t\t\t\ttarget[position++] = 0xfa\n\t\t\t\t\t\ttargetView.setFloat32(position, value)\n\t\t\t\t\t\tlet xShifted\n\t\t\t\t\t\tif (useFloat32 \u003c 4 ||\n\t\t\t\t\t\t\t\t// this checks for rounding of numbers that were encoded in 32-bit float to nearest significant decimal digit that could be preserved\n\t\t\t\t\t\t\t\t((xShifted = value * mult10[((target[position] \u0026 0x7f) \u003c\u003c 1) | (target[position + 1] \u003e\u003e 7)]) \u003e\u003e 0) === xShifted) {\n\t\t\t\t\t\t\tposition += 4\n\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t} else\n\t\t\t\t\t\t\tposition-- // move back into position for writing a double\n\t\t\t\t\t}\n\t\t\t\t\ttarget[position++] = 0xfb\n\t\t\t\t\ttargetView.setFloat64(position, value)\n\t\t\t\t\tposition += 8\n\t\t\t\t}\n\t\t\t} else if (type === 'object') {\n\t\t\t\tif (!value)\n\t\t\t\t\ttarget[position++] = 0xf6\n\t\t\t\telse {\n\t\t\t\t\tif (referenceMap) {\n\t\t\t\t\t\tlet referee = referenceMap.get(value)\n\t\t\t\t\t\tif (referee) {\n\t\t\t\t\t\t\ttarget[position++] = 0xd8\n\t\t\t\t\t\t\ttarget[position++] = 29 // http://cbor.schmorp.de/value-sharing\n\t\t\t\t\t\t\ttarget[position++] = 0x19 // 16-bit uint\n\t\t\t\t\t\t\tif (!referee.references) {\n\t\t\t\t\t\t\t\tlet idsToInsert = referenceMap.idsToInsert || (referenceMap.idsToInsert = [])\n\t\t\t\t\t\t\t\treferee.references = []\n\t\t\t\t\t\t\t\tidsToInsert.push(referee)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treferee.references.push(position - start)\n\t\t\t\t\t\t\tposition += 2 // TODO: also support 32-bit\n\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t} else \n\t\t\t\t\t\t\treferenceMap.set(value, { offset: position - start })\n\t\t\t\t\t}\n\t\t\t\t\tlet constructor = value.constructor\n\t\t\t\t\tif (constructor === Object) {\n\t\t\t\t\t\twriteObject(value)\n\t\t\t\t\t} else if (constructor === Array) {\n\t\t\t\t\t\tlength = value.length\n\t\t\t\t\t\tif (length \u003c 0x18) {\n\t\t\t\t\t\t\ttarget[position++] = 0x80 | length\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\twriteArrayHeader(length)\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfor (let i = 0; i \u003c length; i++) {\n\t\t\t\t\t\t\tencode(value[i])\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (constructor === Map) {\n\t\t\t\t\t\tif (this.mapsAsObjects ? this.useTag259ForMaps !== false : this.useTag259ForMaps) {\n\t\t\t\t\t\t\t// use Tag 259 (https://github.com/shanewholloway/js-cbor-codec/blob/master/docs/CBOR-259-spec--explicit-maps.md) for maps if the user wants it that way\n\t\t\t\t\t\t\ttarget[position++] = 0xd9\n\t\t\t\t\t\t\ttarget[position++] = 1\n\t\t\t\t\t\t\ttarget[position++] = 3\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlength = value.size\n\t\t\t\t\t\tif (length \u003c 0x18) {\n\t\t\t\t\t\t\ttarget[position++] = 0xa0 | length\n\t\t\t\t\t\t} else if (length \u003c 0x100) {\n\t\t\t\t\t\t\ttarget[position++] = 0xb8\n\t\t\t\t\t\t\ttarget[position++] = length\n\t\t\t\t\t\t} else if (length \u003c 0x10000) {\n\t\t\t\t\t\t\ttarget[position++] = 0xb9\n\t\t\t\t\t\t\ttarget[position++] = length \u003e\u003e 8\n\t\t\t\t\t\t\ttarget[position++] = length \u0026 0xff\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttarget[position++] = 0xba\n\t\t\t\t\t\t\ttargetView.setUint32(position, length)\n\t\t\t\t\t\t\tposition += 4\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (encoder.keyMap) { \n\t\t\t\t\t\t\tfor (let [ key, entryValue ] of value) {\n\t\t\t\t\t\t\t\tencode(encoder.encodeKey(key))\n\t\t\t\t\t\t\t\tencode(entryValue)\n\t\t\t\t\t\t\t} \n\t\t\t\t\t\t} else { \n\t\t\t\t\t\t\tfor (let [ key, entryValue ] of value) {\n\t\t\t\t\t\t\t\tencode(key) \n\t\t\t\t\t\t\t\tencode(entryValue)\n\t\t\t\t\t\t\t} \t\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfor (let i = 0, l = extensions.length; i \u003c l; i++) {\n\t\t\t\t\t\t\tlet extensionClass = extensionClasses[i]\n\t\t\t\t\t\t\tif (value instanceof extensionClass) {\n\t\t\t\t\t\t\t\tlet extension = extensions[i]\n\t\t\t\t\t\t\t\tlet tag = extension.tag\n\t\t\t\t\t\t\t\tif (tag == undefined)\n\t\t\t\t\t\t\t\t\ttag = extension.getTag \u0026\u0026 extension.getTag.call(this, value)\n\t\t\t\t\t\t\t\tif (tag \u003c 0x18) {\n\t\t\t\t\t\t\t\t\ttarget[position++] = 0xc0 | tag\n\t\t\t\t\t\t\t\t} else if (tag \u003c 0x100) {\n\t\t\t\t\t\t\t\t\ttarget[position++] = 0xd8\n\t\t\t\t\t\t\t\t\ttarget[position++] = tag\n\t\t\t\t\t\t\t\t} else if (tag \u003c 0x10000) {\n\t\t\t\t\t\t\t\t\ttarget[position++] = 0xd9\n\t\t\t\t\t\t\t\t\ttarget[position++] = tag \u003e\u003e 8\n\t\t\t\t\t\t\t\t\ttarget[position++] = tag \u0026 0xff\n\t\t\t\t\t\t\t\t} else if (tag \u003e -1) {\n\t\t\t\t\t\t\t\t\ttarget[position++] = 0xda\n\t\t\t\t\t\t\t\t\ttargetView.setUint32(position, tag)\n\t\t\t\t\t\t\t\t\tposition += 4\n\t\t\t\t\t\t\t\t} // else undefined, don't write tag\n\t\t\t\t\t\t\t\textension.encode.call(this, value, encode, makeRoom)\n\t\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (value[Symbol.iterator]) {\n\t\t\t\t\t\t\tif (throwOnIterable) {\n\t\t\t\t\t\t\t\tlet error = new Error('Iterable should be serialized as iterator')\n\t\t\t\t\t\t\t\terror.iteratorNotHandled = true;\n\t\t\t\t\t\t\t\tthrow error;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttarget[position++] = 0x9f // indefinite length array\n\t\t\t\t\t\t\tfor (let entry of value) {\n\t\t\t\t\t\t\t\tencode(entry)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttarget[position++] = 0xff // stop-code\n\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (value[Symbol.asyncIterator] || isBlob(value)) {\n\t\t\t\t\t\t\tlet error = new Error('Iterable/blob should be serialized as iterator')\n\t\t\t\t\t\t\terror.iteratorNotHandled = true;\n\t\t\t\t\t\t\tthrow error;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (this.useToJSON \u0026\u0026 value.toJSON) {\n\t\t\t\t\t\t\tconst json = value.toJSON()\n\t\t\t\t\t\t\t// if for some reason value.toJSON returns itself it'll loop forever\n\t\t\t\t\t\t\tif (json !== value)\n\t\t\t\t\t\t\t\treturn encode(json)\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// no extension found, write as a plain object\n\t\t\t\t\t\twriteObject(value)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (type === 'boolean') {\n\t\t\t\ttarget[position++] = value ? 0xf5 : 0xf4\n\t\t\t} else if (type === 'bigint') {\n\t\t\t\tif (value \u003c (BigInt(1)\u003c\u003cBigInt(64)) \u0026\u0026 value \u003e= 0) {\n\t\t\t\t\t// use an unsigned int as long as it fits\n\t\t\t\t\ttarget[position++] = 0x1b\n\t\t\t\t\ttargetView.setBigUint64(position, value)\n\t\t\t\t} else if (value \u003e -(BigInt(1)\u003c\u003cBigInt(64)) \u0026\u0026 value \u003c 0) {\n\t\t\t\t\t// if we can fit an unsigned int, use that\n\t\t\t\t\ttarget[position++] = 0x3b\n\t\t\t\t\ttargetView.setBigUint64(position, -value - BigInt(1))\n\t\t\t\t} else {\n\t\t\t\t\t// overflow\n\t\t\t\t\tif (this.largeBigIntToFloat) {\n\t\t\t\t\t\ttarget[position++] = 0xfb\n\t\t\t\t\t\ttargetView.setFloat64(position, Number(value))\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (value \u003e= BigInt(0))\n\t\t\t\t\t\t\ttarget[position++] = 0xc2 // tag 2\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\ttarget[position++] = 0xc3 // tag 2\n\t\t\t\t\t\t\tvalue = BigInt(-1) - value;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet bytes = [];\n\t\t\t\t\t\twhile (value) {\n\t\t\t\t\t\t\tbytes.push(Number(value \u0026 BigInt(0xff)));\n\t\t\t\t\t\t\tvalue \u003e\u003e= BigInt(8);\n\t\t\t\t\t\t}\n\t\t\t\t\t\twriteBuffer(new Uint8Array(bytes.reverse()), makeRoom);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tposition += 8\n\t\t\t} else if (type === 'undefined') {\n\t\t\t\ttarget[position++] = 0xf7\n\t\t\t} else {\n\t\t\t\tthrow new Error('Unknown type: ' + type)\n\t\t\t}\n\t\t}\n\n\t\tconst writeObject = this.useRecords === false ? this.variableMapSize ? (object) =\u003e {\n\t\t\t// this method is slightly slower, but generates \"preferred serialization\" (optimally small for smaller objects)\n\t\t\tlet keys = Object.keys(object)\n\t\t\tlet vals = Object.values(object)\n\t\t\tlet length = keys.length\n\t\t\tif (length \u003c 0x18) {\n\t\t\t\ttarget[position++] = 0xa0 | length\n\t\t\t} else if (length \u003c 0x100) {\n\t\t\t\ttarget[position++] = 0xb8\n\t\t\t\ttarget[position++] = length\n\t\t\t} else if (length \u003c 0x10000) {\n\t\t\t\ttarget[position++] = 0xb9\n\t\t\t\ttarget[position++] = length \u003e\u003e 8\n\t\t\t\ttarget[position++] = length \u0026 0xff\n\t\t\t} else {\n\t\t\t\ttarget[position++] = 0xba\n\t\t\t\ttargetView.setUint32(position, length)\n\t\t\t\tposition += 4\n\t\t\t}\n\t\t\tlet key\n\t\t\tif (encoder.keyMap) { \n\t\t\t\tfor (let i = 0; i \u003c length; i++) {\n\t\t\t\t\tencode(encoder.encodeKey(keys[i]))\n\t\t\t\t\tencode(vals[i])\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (let i = 0; i \u003c length; i++) {\n\t\t\t\t\tencode(keys[i])\n\t\t\t\t\tencode(vals[i])\n\t\t\t\t}\n\t\t\t}\n\t\t} :\n\t\t(object) =\u003e {\n\t\t\ttarget[position++] = 0xb9 // always use map 16, so we can preallocate and set the length afterwards\n\t\t\tlet objectOffset = position - start\n\t\t\tposition += 2\n\t\t\tlet size = 0\n\t\t\tif (encoder.keyMap) {\n\t\t\t\tfor (let key in object) if (typeof object.hasOwnProperty !== 'function' || object.hasOwnProperty(key)) {\n\t\t\t\t\tencode(encoder.encodeKey(key))\n\t\t\t\t\tencode(object[key])\n\t\t\t\t\tsize++\n\t\t\t\t}\n\t\t\t} else { \n\t\t\t\tfor (let key in object) if (typeof object.hasOwnProperty !== 'function' || object.hasOwnProperty(key)) {\n\t\t\t\t\t\tencode(key)\n\t\t\t\t\t\tencode(object[key])\n\t\t\t\t\tsize++\n\t\t\t\t}\n\t\t\t}\n\t\t\ttarget[objectOffset++ + start] = size \u003e\u003e 8\n\t\t\ttarget[objectOffset + start] = size \u0026 0xff\n\t\t} :\n\t\t(object, skipValues) =\u003e {\n\t\t\tlet nextTransition, transition = structures.transitions || (structures.transitions = Object.create(null))\n\t\t\tlet newTransitions = 0\n\t\t\tlet length = 0\n\t\t\tlet parentRecordId\n\t\t\tlet keys\n\t\t\tif (this.keyMap) {\n\t\t\t\tkeys = Object.keys(object).map(k =\u003e this.encodeKey(k))\n\t\t\t\tlength = keys.length\n\t\t\t\tfor (let i = 0; i \u003c length; i++) {\n\t\t\t\t\tlet key = keys[i]\n\t\t\t\t\tnextTransition = transition[key]\n\t\t\t\t\tif (!nextTransition) {\n\t\t\t\t\t\tnextTransition = transition[key] = Object.create(null)\n\t\t\t\t\t\tnewTransitions++\n\t\t\t\t\t}\n\t\t\t\t\ttransition = nextTransition\n\t\t\t\t}\t\t\t\t\n\t\t\t} else {\n\t\t\t\tfor (let key in object) if (typeof object.hasOwnProperty !== 'function' || object.hasOwnProperty(key)) {\n\t\t\t\t\tnextTransition = transition[key]\n\t\t\t\t\tif (!nextTransition) {\n\t\t\t\t\t\tif (transition[RECORD_SYMBOL] \u0026 0x100000) {// this indicates it is a brancheable/extendable terminal node, so we will use this record id and extend it\n\t\t\t\t\t\t\tparentRecordId = transition[RECORD_SYMBOL] \u0026 0xffff\n\t\t\t\t\t\t}\n\t\t\t\t\t\tnextTransition = transition[key] = Object.create(null)\n\t\t\t\t\t\tnewTransitions++\n\t\t\t\t\t}\n\t\t\t\t\ttransition = nextTransition\n\t\t\t\t\tlength++\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet recordId = transition[RECORD_SYMBOL]\n\t\t\tif (recordId !== undefined) {\n\t\t\t\trecordId \u0026= 0xffff\n\t\t\t\ttarget[position++] = 0xd9\n\t\t\t\ttarget[position++] = (recordId \u003e\u003e 8) | 0xe0\n\t\t\t\ttarget[position++] = recordId \u0026 0xff\n\t\t\t} else {\n\t\t\t\tif (!keys)\n\t\t\t\t\tkeys = transition.__keys__ || (transition.__keys__ = Object.keys(object))\n\t\t\t\tif (parentRecordId === undefined) {\n\t\t\t\t\trecordId = structures.nextId++\n\t\t\t\t\tif (!recordId) {\n\t\t\t\t\t\trecordId = 0\n\t\t\t\t\t\tstructures.nextId = 1\n\t\t\t\t\t}\n\t\t\t\t\tif (recordId \u003e= MAX_STRUCTURES) {// cycle back around\n\t\t\t\t\t\tstructures.nextId = (recordId = maxSharedStructures) + 1\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\trecordId = parentRecordId\n\t\t\t\t}\n\t\t\t\tstructures[recordId] = keys\n\t\t\t\tif (recordId \u003c maxSharedStructures) {\n\t\t\t\t\ttarget[position++] = 0xd9\n\t\t\t\t\ttarget[position++] = (recordId \u003e\u003e 8) | 0xe0\n\t\t\t\t\ttarget[position++] = recordId \u0026 0xff\n\t\t\t\t\ttransition = structures.transitions\n\t\t\t\t\tfor (let i = 0; i \u003c length; i++) {\n\t\t\t\t\t\tif (transition[RECORD_SYMBOL] === undefined || (transition[RECORD_SYMBOL] \u0026 0x100000))\n\t\t\t\t\t\t\ttransition[RECORD_SYMBOL] = recordId\n\t\t\t\t\t\ttransition = transition[keys[i]]\n\t\t\t\t\t}\n\t\t\t\t\ttransition[RECORD_SYMBOL] = recordId | 0x100000 // indicates it is a extendable terminal\n\t\t\t\t\thasSharedUpdate = true\n\t\t\t\t} else {\n\t\t\t\t\ttransition[RECORD_SYMBOL] = recordId\n\t\t\t\t\ttargetView.setUint32(position, 0xd9dfff00) // tag two byte, then record definition id\n\t\t\t\t\tposition += 3\n\t\t\t\t\tif (newTransitions)\n\t\t\t\t\t\ttransitionsCount += serializationsSinceTransitionRebuild * newTransitions\n\t\t\t\t\t// record the removal of the id, we can maintain our shared structure\n\t\t\t\t\tif (recordIdsToRemove.length \u003e= MAX_STRUCTURES - maxSharedStructures)\n\t\t\t\t\t\trecordIdsToRemove.shift()[RECORD_SYMBOL] = undefined // we are cycling back through, and have to remove old ones\n\t\t\t\t\trecordIdsToRemove.push(transition)\n\t\t\t\t\twriteArrayHeader(length + 2)\n\t\t\t\t\tencode(0xe000 + recordId)\n\t\t\t\t\tencode(keys)\n\t\t\t\t\tif (skipValues) return; // special exit for iterator\n\t\t\t\t\tfor (let key in object)\n\t\t\t\t\t\tif (typeof object.hasOwnProperty !== 'function' || object.hasOwnProperty(key))\n\t\t\t\t\t\t\tencode(object[key])\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (length \u003c 0x18) { // write the array header\n\t\t\t\ttarget[position++] = 0x80 | length\n\t\t\t} else {\n\t\t\t\twriteArrayHeader(length)\n\t\t\t}\n\t\t\tif (skipValues) return; // special exit for iterator\n\t\t\tfor (let key in object)\n\t\t\t\tif (typeof object.hasOwnProperty !== 'function' || object.hasOwnProperty(key))\n\t\t\t\t\tencode(object[key])\n\t\t}\n\t\tconst makeRoom = (end) =\u003e {\n\t\t\tlet newSize\n\t\t\tif (end \u003e 0x1000000) {\n\t\t\t\t// special handling for really large buffers\n\t\t\t\tif ((end - start) \u003e MAX_BUFFER_SIZE)\n\t\t\t\t\tthrow new Error('Encoded buffer would be larger than maximum buffer size')\n\t\t\t\tnewSize = Math.min(MAX_BUFFER_SIZE,\n\t\t\t\t\tMath.round(Math.max((end - start) * (end \u003e 0x4000000 ? 1.25 : 2), 0x400000) / 0x1000) * 0x1000)\n\t\t\t} else // faster handling for smaller buffers\n\t\t\t\tnewSize = ((Math.max((end - start) \u003c\u003c 2, target.length - 1) \u003e\u003e 12) + 1) \u003c\u003c 12\n\t\t\tlet newBuffer = new ByteArrayAllocate(newSize)\n\t\t\ttargetView = new DataView(newBuffer.buffer, 0, newSize)\n\t\t\tif (target.copy)\n\t\t\t\ttarget.copy(newBuffer, 0, start, end)\n\t\t\telse\n\t\t\t\tnewBuffer.set(target.slice(start, end))\n\t\t\tposition -= start\n\t\t\tstart = 0\n\t\t\tsafeEnd = newBuffer.length - 10\n\t\t\treturn target = newBuffer\n\t\t}\n\t\tlet chunkThreshold = 100;\n\t\tlet continuedChunkThreshold = 1000;\n\t\tthis.encodeAsIterable = function(value, options) {\n\t\t\treturn startEncoding(value, options, encodeObjectAsIterable);\n\t\t}\n\t\tthis.encodeAsAsyncIterable = function(value, options) {\n\t\t\treturn startEncoding(value, options, encodeObjectAsAsyncIterable);\n\t\t}\n\n\t\tfunction* encodeObjectAsIterable(object, iterateProperties, finalIterable) {\n\t\t\tlet constructor = object.constructor;\n\t\t\tif (constructor === Object) {\n\t\t\t\tlet useRecords = encoder.useRecords !== false;\n\t\t\t\tif (useRecords)\n\t\t\t\t\twriteObject(object, true); // write the record identifier\n\t\t\t\telse\n\t\t\t\t\twriteEntityLength(Object.keys(object).length, 0xa0);\n\t\t\t\tfor (let key in object) {\n\t\t\t\t\tlet value = object[key];\n\t\t\t\t\tif (!useRecords) encode(key);\n\t\t\t\t\tif (value \u0026\u0026 typeof value === 'object') {\n\t\t\t\t\t\tif (iterateProperties[key])\n\t\t\t\t\t\t\tyield* encodeObjectAsIterable(value, iterateProperties[key]);\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tyield* tryEncode(value, iterateProperties, key);\n\t\t\t\t\t} else encode(value);\n\t\t\t\t}\n\t\t\t} else if (constructor === Array) {\n\t\t\t\tlet length = object.length;\n\t\t\t\twriteArrayHeader(length);\n\t\t\t\tfor (let i = 0; i \u003c length; i++) {\n\t\t\t\t\tlet value = object[i];\n\t\t\t\t\tif (value \u0026\u0026 (typeof value === 'object' || position - start \u003e chunkThreshold)) {\n\t\t\t\t\t\tif (iterateProperties.element)\n\t\t\t\t\t\t\tyield* encodeObjectAsIterable(value, iterateProperties.element);\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tyield* tryEncode(value, iterateProperties, 'element');\n\t\t\t\t\t} else encode(value);\n\t\t\t\t}\n\t\t\t} else if (object[Symbol.iterator] \u0026\u0026 !object.buffer) { // iterator, but exclude typed arrays\n\t\t\t\ttarget[position++] = 0x9f; // start indefinite array\n\t\t\t\tfor (let value of object) {\n\t\t\t\t\tif (value \u0026\u0026 (typeof value === 'object' || position - start \u003e chunkThreshold)) {\n\t\t\t\t\t\tif (iterateProperties.element)\n\t\t\t\t\t\t\tyield* encodeObjectAsIterable(value, iterateProperties.element);\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tyield* tryEncode(value, iterateProperties, 'element');\n\t\t\t\t\t} else encode(value);\n\t\t\t\t}\n\t\t\t\ttarget[position++] = 0xff; // stop byte\n\t\t\t} else if (isBlob(object)){\n\t\t\t\twriteEntityLength(object.size, 0x40); // encode as binary data\n\t\t\t\tyield target.subarray(start, position);\n\t\t\t\tyield object; // directly return blobs, they have to be encoded asynchronously\n\t\t\t\trestartEncoding();\n\t\t\t} else if (object[Symbol.asyncIterator]) {\n\t\t\t\ttarget[position++] = 0x9f; // start indefinite array\n\t\t\t\tyield target.subarray(start, position);\n\t\t\t\tyield object; // directly return async iterators, they have to be encoded asynchronously\n\t\t\t\trestartEncoding();\n\t\t\t\ttarget[position++] = 0xff; // stop byte\n\t\t\t} else {\n\t\t\t\tencode(object);\n\t\t\t}\n\t\t\tif (finalIterable \u0026\u0026 position \u003e start) yield target.subarray(start, position);\n\t\t\telse if (position - start \u003e chunkThreshold) {\n\t\t\t\tyield target.subarray(start, position);\n\t\t\t\trestartEncoding();\n\t\t\t}\n\t\t}\n\t\tfunction* tryEncode(value, iterateProperties, key) {\n\t\t\tlet restart = position - start;\n\t\t\ttry {\n\t\t\t\tencode(value);\n\t\t\t\tif (position - start \u003e chunkThreshold) {\n\t\t\t\t\tyield target.subarray(start, position);\n\t\t\t\t\trestartEncoding();\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tif (error.iteratorNotHandled) {\n\t\t\t\t\titerateProperties[key] = {};\n\t\t\t\t\tposition = start + restart; // restart our position so we don't have partial data from last encode\n\t\t\t\t\tyield* encodeObjectAsIterable.call(this, value, iterateProperties[key]);\n\t\t\t\t} else throw error;\n\t\t\t}\n\t\t}\n\t\tfunction restartEncoding() {\n\t\t\tchunkThreshold = continuedChunkThreshold;\n\t\t\tencoder.encode(null, THROW_ON_ITERABLE); // restart encoding\n\t\t}\n\t\tfunction startEncoding(value, options, encodeIterable) {\n\t\t\tif (options \u0026\u0026 options.chunkThreshold) // explicitly specified chunk sizes\n\t\t\t\tchunkThreshold = continuedChunkThreshold = options.chunkThreshold;\n\t\t\telse // we start with a smaller threshold to get initial bytes sent quickly\n\t\t\t\tchunkThreshold = 100;\n\t\t\tif (value \u0026\u0026 typeof value === 'object') {\n\t\t\t\tencoder.encode(null, THROW_ON_ITERABLE); // start encoding\n\t\t\t\treturn encodeIterable(value, encoder.iterateProperties || (encoder.iterateProperties = {}), true);\n\t\t\t}\n\t\t\treturn [encoder.encode(value)];\n\t\t}\n\n\t\tasync function* encodeObjectAsAsyncIterable(value, iterateProperties) {\n\t\t\tfor (let encodedValue of encodeObjectAsIterable(value, iterateProperties, true)) {\n\t\t\t\tlet constructor = encodedValue.constructor;\n\t\t\t\tif (constructor === ByteArray || constructor === Uint8Array)\n\t\t\t\t\tyield encodedValue;\n\t\t\t\telse if (isBlob(encodedValue)) {\n\t\t\t\t\tlet reader = encodedValue.stream().getReader();\n\t\t\t\t\tlet next;\n\t\t\t\t\twhile (!(next = await reader.read()).done) {\n\t\t\t\t\t\tyield next.value;\n\t\t\t\t\t}\n\t\t\t\t} else if (encodedValue[Symbol.asyncIterator]) {\n\t\t\t\t\tfor await (let asyncValue of encodedValue) {\n\t\t\t\t\t\trestartEncoding();\n\t\t\t\t\t\tif (asyncValue)\n\t\t\t\t\t\t\tyield* encodeObjectAsAsyncIterable(asyncValue, iterateProperties.async || (iterateProperties.async = {}));\n\t\t\t\t\t\telse yield encoder.encode(asyncValue);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tyield encodedValue;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tuseBuffer(buffer) {\n\t\t// this means we are finished using our own buffer and we can write over it safely\n\t\ttarget = buffer\n\t\ttargetView = new DataView(target.buffer, target.byteOffset, target.byteLength)\n\t\tposition = 0\n\t}\n\tclearSharedData() {\n\t\tif (this.structures)\n\t\t\tthis.structures = []\n\t\tif (this.sharedValues)\n\t\t\tthis.sharedValues = undefined\n\t}\n\tupdateSharedData() {\n\t\tlet lastVersion = this.sharedVersion || 0\n\t\tthis.sharedVersion = lastVersion + 1\n\t\tlet structuresCopy = this.structures.slice(0)\n\t\tlet sharedData = new SharedData(structuresCopy, this.sharedValues, this.sharedVersion)\n\t\tlet saveResults = this.saveShared(sharedData,\n\t\t\t\texistingShared =\u003e (existingShared \u0026\u0026 existingShared.version || 0) == lastVersion)\n\t\tif (saveResults === false) {\n\t\t\t// get updated structures and try again if the update failed\n\t\t\tsharedData = this.getShared() || {}\n\t\t\tthis.structures = sharedData.structures || []\n\t\t\tthis.sharedValues = sharedData.packedValues\n\t\t\tthis.sharedVersion = sharedData.version\n\t\t\tthis.structures.nextId = this.structures.length\n\t\t} else {\n\t\t\t// restore structures\n\t\t\tstructuresCopy.forEach((structure, i) =\u003e this.structures[i] = structure)\n\t\t}\n\t\t// saveShared may fail to write and reload, or may have reloaded to check compatibility and overwrite saved data, either way load the correct shared data\n\t\treturn saveResults\n\t}\n}\nfunction writeEntityLength(length, majorValue) {\n\tif (length \u003c 0x18)\n\t\ttarget[position++] = majorValue | length\n\telse if (length \u003c 0x100) {\n\t\ttarget[position++] = majorValue | 0x18\n\t\ttarget[position++] = length\n\t} else if (length \u003c 0x10000) {\n\t\ttarget[position++] = majorValue | 0x19\n\t\ttarget[position++] = length \u003e\u003e 8\n\t\ttarget[position++] = length \u0026 0xff\n\t} else {\n\t\ttarget[position++] = majorValue | 0x1a\n\t\ttargetView.setUint32(position, length)\n\t\tposition += 4\n\t}\n\n}\nclass SharedData {\n\tconstructor(structures, values, version) {\n\t\tthis.structures = structures\n\t\tthis.packedValues = values\n\t\tthis.version = version\n\t}\n}\n\nfunction writeArrayHeader(length) {\n\tif (length \u003c 0x18)\n\t\ttarget[position++] = 0x80 | length\n\telse if (length \u003c 0x100) {\n\t\ttarget[position++] = 0x98\n\t\ttarget[position++] = length\n\t} else if (length \u003c 0x10000) {\n\t\ttarget[position++] = 0x99\n\t\ttarget[position++] = length \u003e\u003e 8\n\t\ttarget[position++] = length \u0026 0xff\n\t} else {\n\t\ttarget[position++] = 0x9a\n\t\ttargetView.setUint32(position, length)\n\t\tposition += 4\n\t}\n}\n\nconst BlobConstructor = typeof Blob === 'undefined' ? function(){} : Blob;\nfunction isBlob(object) {\n\tif (object instanceof BlobConstructor)\n\t\treturn true;\n\tlet tag = object[Symbol.toStringTag];\n\treturn tag === 'Blob' || tag === 'File';\n}\nfunction findRepetitiveStrings(value, packedValues) {\n\tswitch(typeof value) {\n\t\tcase 'string':\n\t\t\tif (value.length \u003e 3) {\n\t\t\t\tif (packedValues.objectMap[value] \u003e -1 || packedValues.values.length \u003e= packedValues.maxValues)\n\t\t\t\t\treturn\n\t\t\t\tlet packedStatus = packedValues.get(value)\n\t\t\t\tif (packedStatus) {\n\t\t\t\t\tif (++packedStatus.count == 2) {\n\t\t\t\t\t\tpackedValues.values.push(value)\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tpackedValues.set(value, {\n\t\t\t\t\t\tcount: 1,\n\t\t\t\t\t})\n\t\t\t\t\tif (packedValues.samplingPackedValues) {\n\t\t\t\t\t\tlet status = packedValues.samplingPackedValues.get(value)\n\t\t\t\t\t\tif (status)\n\t\t\t\t\t\t\tstatus.count++\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tpackedValues.samplingPackedValues.set(value, {\n\t\t\t\t\t\t\t\tcount: 1,\n\t\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak\n\t\tcase 'object':\n\t\t\tif (value) {\n\t\t\t\tif (value instanceof Array) {\n\t\t\t\t\tfor (let i = 0, l = value.length; i \u003c l; i++) {\n\t\t\t\t\t\tfindRepetitiveStrings(value[i], packedValues)\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\t\t\t\t\tlet includeKeys = !packedValues.encoder.useRecords\n\t\t\t\t\tfor (var key in value) {\n\t\t\t\t\t\tif (value.hasOwnProperty(key)) {\n\t\t\t\t\t\t\tif (includeKeys)\n\t\t\t\t\t\t\t\tfindRepetitiveStrings(key, packedValues)\n\t\t\t\t\t\t\tfindRepetitiveStrings(value[key], packedValues)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak\n\t\tcase 'function': console.log(value)\n\t}\n}\nconst isLittleEndianMachine = new Uint8Array(new Uint16Array([1]).buffer)[0] == 1\nextensionClasses = [ Date, Set, Error, RegExp, Tag, ArrayBuffer,\n\tUint8Array, Uint8ClampedArray, Uint16Array, Uint32Array,\n\ttypeof BigUint64Array == 'undefined' ? function() {} : BigUint64Array, Int8Array, Int16Array, Int32Array,\n\ttypeof BigInt64Array == 'undefined' ? function() {} : BigInt64Array,\n\tFloat32Array, Float64Array, SharedData ]\n\n//Object.getPrototypeOf(Uint8Array.prototype).constructor /*TypedArray*/\nextensions = [{ // Date\n\ttag: 1,\n\tencode(date, encode) {\n\t\tlet seconds = date.getTime() / 1000\n\t\tif ((this.useTimestamp32 || date.getMilliseconds() === 0) \u0026\u0026 seconds \u003e= 0 \u0026\u0026 seconds \u003c 0x100000000) {\n\t\t\t// Timestamp 32\n\t\t\ttarget[position++] = 0x1a\n\t\t\ttargetView.setUint32(position, seconds)\n\t\t\tposition += 4\n\t\t} else {\n\t\t\t// Timestamp float64\n\t\t\ttarget[position++] = 0xfb\n\t\t\ttargetView.setFloat64(position, seconds)\n\t\t\tposition += 8\n\t\t}\n\t}\n}, { // Set\n\ttag: 258, // https://github.com/input-output-hk/cbor-sets-spec/blob/master/CBOR_SETS.md\n\tencode(set, encode) {\n\t\tlet array = Array.from(set)\n\t\tencode(array)\n\t}\n}, { // Error\n\ttag: 27, // http://cbor.schmorp.de/generic-object\n\tencode(error, encode) {\n\t\tencode([ error.name, error.message ])\n\t}\n}, { // RegExp\n\ttag: 27, // http://cbor.schmorp.de/generic-object\n\tencode(regex, encode) {\n\t\tencode([ 'RegExp', regex.source, regex.flags ])\n\t}\n}, { // Tag\n\tgetTag(tag) {\n\t\treturn tag.tag\n\t},\n\tencode(tag, encode) {\n\t\tencode(tag.value)\n\t}\n}, { // ArrayBuffer\n\tencode(arrayBuffer, encode, makeRoom) {\n\t\twriteBuffer(arrayBuffer, makeRoom)\n\t}\n}, { // Uint8Array\n\tgetTag(typedArray) {\n\t\tif (typedArray.constructor === Uint8Array) {\n\t\t\tif (this.tagUint8Array || hasNodeBuffer \u0026\u0026 this.tagUint8Array !== false)\n\t\t\t\treturn 64;\n\t\t} // else no tag\n\t},\n\tencode(typedArray, encode, makeRoom) {\n\t\twriteBuffer(typedArray, makeRoom)\n\t}\n},\n\ttypedArrayEncoder(68, 1),\n\ttypedArrayEncoder(69, 2),\n\ttypedArrayEncoder(70, 4),\n\ttypedArrayEncoder(71, 8),\n\ttypedArrayEncoder(72, 1),\n\ttypedArrayEncoder(77, 2),\n\ttypedArrayEncoder(78, 4),\n\ttypedArrayEncoder(79, 8),\n\ttypedArrayEncoder(85, 4),\n\ttypedArrayEncoder(86, 8),\n{\n\tencode(sharedData, encode) { // write SharedData\n\t\tlet packedValues = sharedData.packedValues || []\n\t\tlet sharedStructures = sharedData.structures || []\n\t\tif (packedValues.values.length \u003e 0) {\n\t\t\ttarget[position++] = 0xd8 // one-byte tag\n\t\t\ttarget[position++] = 51 // tag 51 for packed shared structures https://www.potaroo.net/ietf/ids/draft-ietf-cbor-packed-03.txt\n\t\t\twriteArrayHeader(4)\n\t\t\tlet valuesArray = packedValues.values\n\t\t\tencode(valuesArray)\n\t\t\twriteArrayHeader(0) // prefixes\n\t\t\twriteArrayHeader(0) // suffixes\n\t\t\tpackedObjectMap = Object.create(sharedPackedObjectMap || null)\n\t\t\tfor (let i = 0, l = valuesArray.length; i \u003c l; i++) {\n\t\t\t\tpackedObjectMap[valuesArray[i]] = i\n\t\t\t}\n\t\t}\n\t\tif (sharedStructures) {\n\t\t\ttargetView.setUint32(position, 0xd9dffe00)\n\t\t\tposition += 3\n\t\t\tlet definitions = sharedStructures.slice(0)\n\t\t\tdefinitions.unshift(0xe000)\n\t\t\tdefinitions.push(new Tag(sharedData.version, 0x53687264))\n\t\t\tencode(definitions)\n\t\t} else\n\t\t\tencode(new Tag(sharedData.version, 0x53687264))\n\t\t}\n\t}]\nfunction typedArrayEncoder(tag, size) {\n\tif (!isLittleEndianMachine \u0026\u0026 size \u003e 1)\n\t\ttag -= 4 // the big endian equivalents are 4 less\n\treturn {\n\t\ttag: tag,\n\t\tencode: function writeExtBuffer(typedArray, encode) {\n\t\t\tlet length = typedArray.byteLength\n\t\t\tlet offset = typedArray.byteOffset || 0\n\t\t\tlet buffer = typedArray.buffer || typedArray\n\t\t\tencode(hasNodeBuffer ? Buffer.from(buffer, offset, length) :\n\t\t\t\tnew Uint8Array(buffer, offset, length))\n\t\t}\n\t}\n}\nfunction writeBuffer(buffer, makeRoom) {\n\tlet length = buffer.byteLength\n\tif (length \u003c 0x18) {\n\t\ttarget[position++] = 0x40 + length\n\t} else if (length \u003c 0x100) {\n\t\ttarget[position++] = 0x58\n\t\ttarget[position++] = length\n\t} else if (length \u003c 0x10000) {\n\t\ttarget[position++] = 0x59\n\t\ttarget[position++] = length \u003e\u003e 8\n\t\ttarget[position++] = length \u0026 0xff\n\t} else {\n\t\ttarget[position++] = 0x5a\n\t\ttargetView.setUint32(position, length)\n\t\tposition += 4\n\t}\n\tif (position + length \u003e= target.length) {\n\t\tmakeRoom(position + length)\n\t}\n\t// if it is already a typed array (has an ArrayBuffer), use that, but if it is an ArrayBuffer itself,\n\t// must wrap it to set it.\n\ttarget.set(buffer.buffer ? buffer : new Uint8Array(buffer), position)\n\tposition += length\n}\n\nfunction insertIds(serialized, idsToInsert) {\n\t// insert the ids that need to be referenced for structured clones\n\tlet nextId\n\tlet distanceToMove = idsToInsert.length * 2\n\tlet lastEnd = serialized.length - distanceToMove\n\tidsToInsert.sort((a, b) =\u003e a.offset \u003e b.offset ? 1 : -1)\n\tfor (let id = 0; id \u003c idsToInsert.length; id++) {\n\t\tlet referee = idsToInsert[id]\n\t\treferee.id = id\n\t\tfor (let position of referee.references) {\n\t\t\tserialized[position++] = id \u003e\u003e 8\n\t\t\tserialized[position] = id \u0026 0xff\n\t\t}\n\t}\n\twhile (nextId = idsToInsert.pop()) {\n\t\tlet offset = nextId.offset\n\t\tserialized.copyWithin(offset + distanceToMove, offset, lastEnd)\n\t\tdistanceToMove -= 2\n\t\tlet position = offset + distanceToMove\n\t\tserialized[position++] = 0xd8\n\t\tserialized[position++] = 28 // http://cbor.schmorp.de/value-sharing\n\t\tlastEnd = offset\n\t}\n\treturn serialized\n}\nfunction writeBundles(start, encode) {\n\ttargetView.setUint32(bundledStrings.position + start, position - bundledStrings.position - start + 1) // the offset to bundle\n\tlet writeStrings = bundledStrings\n\tbundledStrings = null\n\tencode(writeStrings[0])\n\tencode(writeStrings[1])\n}\n\nexport function addExtension(extension) {\n\tif (extension.Class) {\n\t\tif (!extension.encode)\n\t\t\tthrow new Error('Extension has no encode function')\n\t\textensionClasses.unshift(extension.Class)\n\t\textensions.unshift(extension)\n\t}\n\tdecodeAddExtension(extension)\n}\nlet defaultEncoder = new Encoder({ useRecords: false })\nexport const encode = defaultEncoder.encode\nexport const encodeAsIterable = defaultEncoder.encodeAsIterable\nexport const encodeAsAsyncIterable = defaultEncoder.encodeAsAsyncIterable\nexport { FLOAT32_OPTIONS } from './decode.js'\nimport { FLOAT32_OPTIONS } from './decode.js'\nexport const { NEVER, ALWAYS, DECIMAL_ROUND, DECIMAL_FIT } = FLOAT32_OPTIONS\nexport const REUSE_BUFFER_MODE = 512\nexport const RESET_BUFFER_MODE = 1024\nexport const THROW_ON_ITERABLE = 2048\n\n\n","export const arraysAreEqual = (a, b) =\u003e a.length === b.length \u0026\u0026 a.every((element, index) =\u003e element === b[index]);\n","import { arraysAreEqual } from \"./arraysAreEqual.js\";\nexport const headsAreSame = (a, b) =\u003e {\n    return arraysAreEqual(a, b);\n};\n","/* c8 ignore start */\n/**\n * If `promise` is resolved before `t` ms elapse, the timeout is cleared and the result of the\n * promise is returned. If the timeout ends first, a `TimeoutError` is thrown.\n */\nexport const withTimeout = async (promise, t) =\u003e {\n    let timeoutId;\n    const timeoutPromise = new Promise((_, reject) =\u003e {\n        timeoutId = setTimeout(() =\u003e reject(new TimeoutError(`withTimeout: timed out after ${t}ms`)), t);\n    });\n    try {\n        return await Promise.race([promise, timeoutPromise]);\n    }\n    finally {\n        clearTimeout(timeoutId);\n    }\n};\nexport class TimeoutError extends Error {\n    constructor(message) {\n        super(message);\n        this.name = \"TimeoutError\";\n    }\n}\n/* c8 ignore end */\n","export * from \"../stable.js\";\nimport * as next_1 from \"../next_slim.js\";\nexport { next_1 as next };\n","import { next as Automerge } from \"@automerge/automerge/slim\";\nimport debug from \"debug\";\nimport { EventEmitter } from \"eventemitter3\";\nimport { generateAutomergeUrl, interpretAsDocumentId, parseAutomergeUrl, } from \"./AutomergeUrl.js\";\nimport { DocHandle } from \"./DocHandle.js\";\nimport { RemoteHeadsSubscriptions } from \"./RemoteHeadsSubscriptions.js\";\nimport { headsAreSame } from \"./helpers/headsAreSame.js\";\nimport { throttle } from \"./helpers/throttle.js\";\nimport { NetworkSubsystem } from \"./network/NetworkSubsystem.js\";\nimport { StorageSubsystem } from \"./storage/StorageSubsystem.js\";\nimport { CollectionSynchronizer } from \"./synchronizer/CollectionSynchronizer.js\";\nfunction randomPeerId() {\n    return (\"peer-\" + Math.random().toString(36).slice(4));\n}\n/** A Repo is a collection of documents with networking, syncing, and storage capabilities. */\n/** The `Repo` is the main entry point of this library\n *\n * @remarks\n * To construct a `Repo` you will need an {@link StorageAdapter} and one or\n * more {@link NetworkAdapter}s. Once you have a `Repo` you can use it to\n * obtain {@link DocHandle}s.\n */\nexport class Repo extends EventEmitter {\n    #log;\n    /** @hidden */\n    networkSubsystem;\n    /** @hidden */\n    storageSubsystem;\n    /** The debounce rate is adjustable on the repo. */\n    /** @hidden */\n    saveDebounceRate = 100;\n    #handleCache = {};\n    /** @hidden */\n    synchronizer;\n    /** By default, we share generously with all peers. */\n    /** @hidden */\n    sharePolicy = async () =\u003e true;\n    /** maps peer id to to persistence information (storageId, isEphemeral), access by collection synchronizer  */\n    /** @hidden */\n    peerMetadataByPeerId = {};\n    #remoteHeadsSubscriptions = new RemoteHeadsSubscriptions();\n    #remoteHeadsGossipingEnabled = false;\n    constructor({ storage, network = [], peerId = randomPeerId(), sharePolicy, isEphemeral = storage === undefined, enableRemoteHeadsGossiping = false, } = {}) {\n        super();\n        this.#remoteHeadsGossipingEnabled = enableRemoteHeadsGossiping;\n        this.#log = debug(`automerge-repo:repo`);\n        this.sharePolicy = sharePolicy ?? this.sharePolicy;\n        this.on(\"delete-document\", ({ documentId }) =\u003e {\n            // TODO Pass the delete on to the network\n            // synchronizer.removeDocument(documentId)\n            if (storageSubsystem) {\n                storageSubsystem.removeDoc(documentId).catch(err =\u003e {\n                    this.#log(\"error deleting document\", { documentId, err });\n                });\n            }\n        });\n        // SYNCHRONIZER\n        // The synchronizer uses the network subsystem to keep documents in sync with peers.\n        this.synchronizer = new CollectionSynchronizer(this);\n        // When the synchronizer emits messages, send them to peers\n        this.synchronizer.on(\"message\", message =\u003e {\n            this.#log(`sending ${message.type} message to ${message.targetId}`);\n            networkSubsystem.send(message);\n        });\n        if (this.#remoteHeadsGossipingEnabled) {\n            this.synchronizer.on(\"open-doc\", ({ peerId, documentId }) =\u003e {\n                this.#remoteHeadsSubscriptions.subscribePeerToDoc(peerId, documentId);\n            });\n        }\n        // STORAGE\n        // The storage subsystem has access to some form of persistence, and deals with save and loading documents.\n        const storageSubsystem = storage ? new StorageSubsystem(storage) : undefined;\n        this.storageSubsystem = storageSubsystem;\n        // NETWORK\n        // The network subsystem deals with sending and receiving messages to and from peers.\n        const myPeerMetadata = (async () =\u003e ({\n            storageId: await storageSubsystem?.id(),\n            isEphemeral,\n        }))();\n        const networkSubsystem = new NetworkSubsystem(network, peerId, myPeerMetadata);\n        this.networkSubsystem = networkSubsystem;\n        // When we get a new peer, register it with the synchronizer\n        networkSubsystem.on(\"peer\", async ({ peerId, peerMetadata }) =\u003e {\n            this.#log(\"peer connected\", { peerId });\n            if (peerMetadata) {\n                this.peerMetadataByPeerId[peerId] = { ...peerMetadata };\n            }\n            this.sharePolicy(peerId)\n                .then(shouldShare =\u003e {\n                if (shouldShare \u0026\u0026 this.#remoteHeadsGossipingEnabled) {\n                    this.#remoteHeadsSubscriptions.addGenerousPeer(peerId);\n                }\n            })\n                .catch(err =\u003e {\n                console.log(\"error in share policy\", { err });\n            });\n            this.synchronizer.addPeer(peerId);\n        });\n        // When a peer disconnects, remove it from the synchronizer\n        networkSubsystem.on(\"peer-disconnected\", ({ peerId }) =\u003e {\n            this.synchronizer.removePeer(peerId);\n            this.#remoteHeadsSubscriptions.removePeer(peerId);\n        });\n        // Handle incoming messages\n        networkSubsystem.on(\"message\", async (msg) =\u003e {\n            this.#receiveMessage(msg);\n        });\n        this.synchronizer.on(\"sync-state\", message =\u003e {\n            this.#saveSyncState(message);\n            const handle = this.#handleCache[message.documentId];\n            const { storageId } = this.peerMetadataByPeerId[message.peerId] || {};\n            if (!storageId) {\n                return;\n            }\n            const heads = handle.getRemoteHeads(storageId);\n            const haveHeadsChanged = message.syncState.theirHeads \u0026\u0026\n                (!heads || !headsAreSame(heads, message.syncState.theirHeads));\n            if (haveHeadsChanged \u0026\u0026 message.syncState.theirHeads) {\n                handle.setRemoteHeads(storageId, message.syncState.theirHeads);\n                if (storageId \u0026\u0026 this.#remoteHeadsGossipingEnabled) {\n                    this.#remoteHeadsSubscriptions.handleImmediateRemoteHeadsChanged(message.documentId, storageId, message.syncState.theirHeads);\n                }\n            }\n        });\n        if (this.#remoteHeadsGossipingEnabled) {\n            this.#remoteHeadsSubscriptions.on(\"notify-remote-heads\", message =\u003e {\n                this.networkSubsystem.send({\n                    type: \"remote-heads-changed\",\n                    targetId: message.targetId,\n                    documentId: message.documentId,\n                    newHeads: {\n                        [message.storageId]: {\n                            heads: message.heads,\n                            timestamp: message.timestamp,\n                        },\n                    },\n                });\n            });\n            this.#remoteHeadsSubscriptions.on(\"change-remote-subs\", message =\u003e {\n                this.#log(\"change-remote-subs\", message);\n                for (const peer of message.peers) {\n                    this.networkSubsystem.send({\n                        type: \"remote-subscription-change\",\n                        targetId: peer,\n                        add: message.add,\n                        remove: message.remove,\n                    });\n                }\n            });\n            this.#remoteHeadsSubscriptions.on(\"remote-heads-changed\", message =\u003e {\n                const handle = this.#handleCache[message.documentId];\n                handle.setRemoteHeads(message.storageId, message.remoteHeads);\n            });\n        }\n    }\n    // The `document` event is fired by the DocCollection any time we create a new document or look\n    // up a document by ID. We listen for it in order to wire up storage and network synchronization.\n    #registerHandleWithSubsystems(handle) {\n        const { storageSubsystem } = this;\n        if (storageSubsystem) {\n            // Save when the document changes, but no more often than saveDebounceRate.\n            const saveFn = ({ handle, doc }) =\u003e {\n                void storageSubsystem.saveDoc(handle.documentId, doc);\n            };\n            handle.on(\"heads-changed\", throttle(saveFn, this.saveDebounceRate));\n        }\n        handle.on(\"unavailable\", () =\u003e {\n            this.#log(\"document unavailable\", { documentId: handle.documentId });\n            this.emit(\"unavailable-document\", {\n                documentId: handle.documentId,\n            });\n        });\n        // Register the document with the synchronizer. This advertises our interest in the document.\n        this.synchronizer.addDocument(handle.documentId);\n        // Preserve the old event in case anyone was using it.\n        this.emit(\"document\", { handle });\n    }\n    #receiveMessage(message) {\n        switch (message.type) {\n            case \"remote-subscription-change\":\n                if (this.#remoteHeadsGossipingEnabled) {\n                    this.#remoteHeadsSubscriptions.handleControlMessage(message);\n                }\n                break;\n            case \"remote-heads-changed\":\n                if (this.#remoteHeadsGossipingEnabled) {\n                    this.#remoteHeadsSubscriptions.handleRemoteHeads(message);\n                }\n                break;\n            case \"sync\":\n            case \"request\":\n            case \"ephemeral\":\n            case \"doc-unavailable\":\n                this.synchronizer.receiveMessage(message).catch(err =\u003e {\n                    console.log(\"error receiving message\", { err });\n                });\n        }\n    }\n    #throttledSaveSyncStateHandlers = {};\n    /** saves sync state throttled per storage id, if a peer doesn't have a storage id it's sync state is not persisted */\n    #saveSyncState(payload) {\n        if (!this.storageSubsystem) {\n            return;\n        }\n        const { storageId, isEphemeral } = this.peerMetadataByPeerId[payload.peerId] || {};\n        if (!storageId || isEphemeral) {\n            return;\n        }\n        let handler = this.#throttledSaveSyncStateHandlers[storageId];\n        if (!handler) {\n            handler = this.#throttledSaveSyncStateHandlers[storageId] = throttle(({ documentId, syncState }) =\u003e {\n                void this.storageSubsystem.saveSyncState(documentId, storageId, syncState);\n            }, this.saveDebounceRate);\n        }\n        handler(payload);\n    }\n    /** Returns an existing handle if we have it; creates one otherwise. */\n    #getHandle({ documentId, }) {\n        // If we have the handle cached, return it\n        if (this.#handleCache[documentId])\n            return this.#handleCache[documentId];\n        // If not, create a new handle, cache it, and return it\n        if (!documentId)\n            throw new Error(`Invalid documentId ${documentId}`);\n        const handle = new DocHandle(documentId);\n        this.#handleCache[documentId] = handle;\n        return handle;\n    }\n    /** Returns all the handles we have cached. */\n    get handles() {\n        return this.#handleCache;\n    }\n    /** Returns a list of all connected peer ids */\n    get peers() {\n        return this.synchronizer.peers;\n    }\n    getStorageIdOfPeer(peerId) {\n        return this.peerMetadataByPeerId[peerId]?.storageId;\n    }\n    /**\n     * Creates a new document and returns a handle to it. The initial value of the document is an\n     * empty object `{}` unless an initial value is provided. Its documentId is generated by the\n     * system. we emit a `document` event to advertise interest in the document.\n     */\n    create(initialValue) {\n        // Generate a new UUID and store it in the buffer\n        const { documentId } = parseAutomergeUrl(generateAutomergeUrl());\n        const handle = this.#getHandle({\n            documentId,\n        });\n        this.#registerHandleWithSubsystems(handle);\n        handle.update(() =\u003e {\n            let nextDoc;\n            if (initialValue) {\n                nextDoc = Automerge.from(initialValue);\n            }\n            else {\n                nextDoc = Automerge.emptyChange(Automerge.init());\n            }\n            return nextDoc;\n        });\n        handle.doneLoading();\n        return handle;\n    }\n    /** Create a new DocHandle by cloning the history of an existing DocHandle.\n     *\n     * @param clonedHandle - The handle to clone\n     *\n     * @remarks This is a wrapper around the `clone` function in the Automerge library.\n     * The new `DocHandle` will have a new URL but will share history with the original,\n     * which means that changes made to the cloned handle can be sensibly merged back\n     * into the original.\n     *\n     * Any peers this `Repo` is connected to for whom `sharePolicy` returns `true` will\n     * be notified of the newly created DocHandle.\n     *\n     * @throws if the cloned handle is not yet ready or if\n     * `clonedHandle.docSync()` returns `undefined` (i.e. the handle is unavailable).\n     */\n    clone(clonedHandle) {\n        if (!clonedHandle.isReady()) {\n            throw new Error(`Cloned handle is not yet in ready state.\n        (Try await handle.whenReady() first.)`);\n        }\n        const sourceDoc = clonedHandle.docSync();\n        if (!sourceDoc) {\n            throw new Error(\"Cloned handle doesn't have a document.\");\n        }\n        const handle = this.create();\n        handle.update(() =\u003e {\n            // we replace the document with the new cloned one\n            return Automerge.clone(sourceDoc);\n        });\n        return handle;\n    }\n    /**\n     * Retrieves a document by id. It gets data from the local system, but also emits a `document`\n     * event to advertise interest in the document.\n     */\n    find(\n    /** The url or documentId of the handle to retrieve */\n    id) {\n        const documentId = interpretAsDocumentId(id);\n        // If we have the handle cached, return it\n        if (this.#handleCache[documentId]) {\n            if (this.#handleCache[documentId].isUnavailable()) {\n                // this ensures that the event fires after the handle has been returned\n                setTimeout(() =\u003e {\n                    this.#handleCache[documentId].emit(\"unavailable\", {\n                        handle: this.#handleCache[documentId],\n                    });\n                });\n            }\n            return this.#handleCache[documentId];\n        }\n        // If we don't already have the handle, make an empty one and try loading it\n        const handle = this.#getHandle({\n            documentId,\n        });\n        // Loading \u0026 network is going to be asynchronous no matter what,\n        // but we want to return the handle immediately.\n        const attemptLoad = this.storageSubsystem\n            ? this.storageSubsystem.loadDoc(handle.documentId)\n            : Promise.resolve(null);\n        attemptLoad\n            .then(async (loadedDoc) =\u003e {\n            if (loadedDoc) {\n                // uhhhh, sorry if you're reading this because we were lying to the type system\n                handle.update(() =\u003e loadedDoc);\n                handle.doneLoading();\n            }\n            else {\n                // we want to wait for the network subsystem to be ready before\n                // we request the document. this prevents entering unavailable during initialization.\n                await this.networkSubsystem.whenReady();\n                handle.request();\n            }\n            this.#registerHandleWithSubsystems(handle);\n        })\n            .catch(err =\u003e {\n            this.#log(\"error waiting for network\", { err });\n        });\n        return handle;\n    }\n    delete(\n    /** The url or documentId of the handle to delete */\n    id) {\n        const documentId = interpretAsDocumentId(id);\n        const handle = this.#getHandle({ documentId });\n        handle.delete();\n        delete this.#handleCache[documentId];\n        this.emit(\"delete-document\", { documentId });\n    }\n    /**\n     * Exports a document to a binary format.\n     * @param id - The url or documentId of the handle to export\n     *\n     * @returns Promise\u003cUint8Array | undefined\u003e - A Promise containing the binary document,\n     * or undefined if the document is unavailable.\n     */\n    async export(id) {\n        const documentId = interpretAsDocumentId(id);\n        const handle = this.#getHandle({ documentId });\n        const doc = await handle.doc();\n        if (!doc)\n            return undefined;\n        return Automerge.save(doc);\n    }\n    /**\n     * Imports document binary into the repo.\n     * @param binary - The binary to import\n     */\n    import(binary) {\n        const doc = Automerge.load(binary);\n        const handle = this.create();\n        handle.update(() =\u003e {\n            return Automerge.clone(doc);\n        });\n        return handle;\n    }\n    subscribeToRemotes = (remotes) =\u003e {\n        if (this.#remoteHeadsGossipingEnabled) {\n            this.#log(\"subscribeToRemotes\", { remotes });\n            this.#remoteHeadsSubscriptions.subscribeToRemotes(remotes);\n        }\n        else {\n            this.#log(\"WARN: subscribeToRemotes called but remote heads gossiping is not enabled\");\n        }\n    };\n    storageId = async () =\u003e {\n        if (!this.storageSubsystem) {\n            return undefined;\n        }\n        else {\n            return this.storageSubsystem.id();\n        }\n    };\n    /**\n     * Writes Documents to a disk.\n     * @hidden this API is experimental and may change.\n     * @param documents - if provided, only writes the specified documents.\n     * @returns Promise\u003cvoid\u003e\n     */\n    async flush(documents) {\n        if (!this.storageSubsystem) {\n            return;\n        }\n        const handles = documents\n            ? documents.map(id =\u003e this.#handleCache[id])\n            : Object.values(this.#handleCache);\n        await Promise.all(handles.map(async (handle) =\u003e {\n            const doc = handle.docSync();\n            if (!doc) {\n                return;\n            }\n            return this.storageSubsystem.saveDoc(handle.documentId, doc);\n        }));\n    }\n    shutdown() {\n        this.networkSubsystem.adapters.forEach(adapter =\u003e {\n            adapter.disconnect();\n        });\n        return this.flush();\n    }\n    metrics() {\n        return { documents: this.synchronizer.metrics() };\n    }\n}\n","import { EventEmitter } from \"eventemitter3\";\nimport debug from \"debug\";\nexport class RemoteHeadsSubscriptions extends EventEmitter {\n    // Storage IDs we have received remote heads from\n    #knownHeads = new Map();\n    // Storage IDs we have subscribed to via Repo.subscribeToRemoteHeads\n    #ourSubscriptions = new Set();\n    // Storage IDs other peers have subscribed to by sending us a control message\n    #theirSubscriptions = new Map();\n    // Peers we will always share remote heads with even if they are not subscribed\n    #generousPeers = new Set();\n    // Documents each peer has open, we need this information so we only send remote heads of documents that the peer knows\n    #subscribedDocsByPeer = new Map();\n    #log = debug(\"automerge-repo:remote-heads-subscriptions\");\n    subscribeToRemotes(remotes) {\n        this.#log(\"subscribeToRemotes\", remotes);\n        const remotesToAdd = [];\n        for (const remote of remotes) {\n            if (!this.#ourSubscriptions.has(remote)) {\n                this.#ourSubscriptions.add(remote);\n                remotesToAdd.push(remote);\n            }\n        }\n        if (remotesToAdd.length \u003e 0) {\n            this.emit(\"change-remote-subs\", {\n                add: remotesToAdd,\n                peers: Array.from(this.#generousPeers),\n            });\n        }\n    }\n    unsubscribeFromRemotes(remotes) {\n        this.#log(\"subscribeToRemotes\", remotes);\n        const remotesToRemove = [];\n        for (const remote of remotes) {\n            if (this.#ourSubscriptions.has(remote)) {\n                this.#ourSubscriptions.delete(remote);\n                if (!this.#theirSubscriptions.has(remote)) {\n                    remotesToRemove.push(remote);\n                }\n            }\n        }\n        if (remotesToRemove.length \u003e 0) {\n            this.emit(\"change-remote-subs\", {\n                remove: remotesToRemove,\n                peers: Array.from(this.#generousPeers),\n            });\n        }\n    }\n    handleControlMessage(control) {\n        const remotesToAdd = [];\n        const remotesToRemove = [];\n        const addedRemotesWeKnow = [];\n        this.#log(\"handleControlMessage\", control);\n        if (control.add) {\n            for (const remote of control.add) {\n                let theirSubs = this.#theirSubscriptions.get(remote);\n                if (this.#ourSubscriptions.has(remote) || theirSubs) {\n                    addedRemotesWeKnow.push(remote);\n                }\n                if (!theirSubs) {\n                    theirSubs = new Set();\n                    this.#theirSubscriptions.set(remote, theirSubs);\n                    if (!this.#ourSubscriptions.has(remote)) {\n                        remotesToAdd.push(remote);\n                    }\n                }\n                theirSubs.add(control.senderId);\n            }\n        }\n        if (control.remove) {\n            for (const remote of control.remove) {\n                const theirSubs = this.#theirSubscriptions.get(remote);\n                if (theirSubs) {\n                    theirSubs.delete(control.senderId);\n                    // if no one is subscribed anymore remove remote\n                    if (theirSubs.size == 0 \u0026\u0026 !this.#ourSubscriptions.has(remote)) {\n                        remotesToRemove.push(remote);\n                    }\n                }\n            }\n        }\n        if (remotesToAdd.length \u003e 0 || remotesToRemove.length \u003e 0) {\n            this.emit(\"change-remote-subs\", {\n                peers: Array.from(this.#generousPeers),\n                add: remotesToAdd,\n                remove: remotesToRemove,\n            });\n        }\n        // send all our stored heads of documents the peer knows for the remotes they've added\n        for (const remote of addedRemotesWeKnow) {\n            const subscribedDocs = this.#subscribedDocsByPeer.get(control.senderId);\n            if (subscribedDocs) {\n                for (const documentId of subscribedDocs) {\n                    const knownHeads = this.#knownHeads.get(documentId);\n                    if (!knownHeads) {\n                        continue;\n                    }\n                    const lastHeads = knownHeads.get(remote);\n                    if (lastHeads) {\n                        this.emit(\"notify-remote-heads\", {\n                            targetId: control.senderId,\n                            documentId,\n                            heads: lastHeads.heads,\n                            timestamp: lastHeads.timestamp,\n                            storageId: remote,\n                        });\n                    }\n                }\n            }\n        }\n    }\n    /** A peer we are not directly connected to has changed their heads */\n    handleRemoteHeads(msg) {\n        this.#log(\"handleRemoteHeads\", msg);\n        const changedHeads = this.#changedHeads(msg);\n        // Emit a remote-heads-changed event to update local dochandles\n        for (const event of changedHeads) {\n            if (this.#ourSubscriptions.has(event.storageId)) {\n                this.emit(\"remote-heads-changed\", event);\n            }\n        }\n        // Notify generous peers of these changes regardless of if they are subscribed to us\n        for (const event of changedHeads) {\n            for (const peer of this.#generousPeers) {\n                // don't emit event to sender if sender is a generous peer\n                if (peer === msg.senderId) {\n                    continue;\n                }\n                this.emit(\"notify-remote-heads\", {\n                    targetId: peer,\n                    documentId: event.documentId,\n                    heads: event.remoteHeads,\n                    timestamp: event.timestamp,\n                    storageId: event.storageId,\n                });\n            }\n        }\n        // Notify subscribers of these changes\n        for (const event of changedHeads) {\n            const theirSubs = this.#theirSubscriptions.get(event.storageId);\n            if (theirSubs) {\n                for (const peerId of theirSubs) {\n                    if (this.#isPeerSubscribedToDoc(peerId, event.documentId)) {\n                        this.emit(\"notify-remote-heads\", {\n                            targetId: peerId,\n                            documentId: event.documentId,\n                            heads: event.remoteHeads,\n                            timestamp: event.timestamp,\n                            storageId: event.storageId,\n                        });\n                    }\n                }\n            }\n        }\n    }\n    /** A peer we are directly connected to has updated their heads */\n    handleImmediateRemoteHeadsChanged(documentId, storageId, heads) {\n        this.#log(\"handleLocalHeadsChanged\", documentId, storageId, heads);\n        const remote = this.#knownHeads.get(documentId);\n        const timestamp = Date.now();\n        if (!remote) {\n            this.#knownHeads.set(documentId, new Map([[storageId, { heads, timestamp }]]));\n        }\n        else {\n            const docRemote = remote.get(storageId);\n            if (!docRemote || docRemote.timestamp \u003c Date.now()) {\n                remote.set(storageId, { heads, timestamp: Date.now() });\n            }\n        }\n        const theirSubs = this.#theirSubscriptions.get(storageId);\n        if (theirSubs) {\n            for (const peerId of theirSubs) {\n                if (this.#isPeerSubscribedToDoc(peerId, documentId)) {\n                    this.emit(\"notify-remote-heads\", {\n                        targetId: peerId,\n                        documentId: documentId,\n                        heads: heads,\n                        timestamp: timestamp,\n                        storageId: storageId,\n                    });\n                }\n            }\n        }\n    }\n    addGenerousPeer(peerId) {\n        this.#log(\"addGenerousPeer\", peerId);\n        this.#generousPeers.add(peerId);\n        if (this.#ourSubscriptions.size \u003e 0) {\n            this.emit(\"change-remote-subs\", {\n                add: Array.from(this.#ourSubscriptions),\n                peers: [peerId],\n            });\n        }\n        for (const [documentId, remote] of this.#knownHeads) {\n            for (const [storageId, { heads, timestamp }] of remote) {\n                this.emit(\"notify-remote-heads\", {\n                    targetId: peerId,\n                    documentId: documentId,\n                    heads: heads,\n                    timestamp: timestamp,\n                    storageId: storageId,\n                });\n            }\n        }\n    }\n    removePeer(peerId) {\n        this.#log(\"removePeer\", peerId);\n        const remotesToRemove = [];\n        this.#generousPeers.delete(peerId);\n        this.#subscribedDocsByPeer.delete(peerId);\n        for (const [storageId, peerIds] of this.#theirSubscriptions) {\n            if (peerIds.has(peerId)) {\n                peerIds.delete(peerId);\n                if (peerIds.size == 0) {\n                    remotesToRemove.push(storageId);\n                    this.#theirSubscriptions.delete(storageId);\n                }\n            }\n        }\n        if (remotesToRemove.length \u003e 0) {\n            this.emit(\"change-remote-subs\", {\n                remove: remotesToRemove,\n                peers: Array.from(this.#generousPeers),\n            });\n        }\n    }\n    subscribePeerToDoc(peerId, documentId) {\n        let subscribedDocs = this.#subscribedDocsByPeer.get(peerId);\n        if (!subscribedDocs) {\n            subscribedDocs = new Set();\n            this.#subscribedDocsByPeer.set(peerId, subscribedDocs);\n        }\n        subscribedDocs.add(documentId);\n        const remoteHeads = this.#knownHeads.get(documentId);\n        if (remoteHeads) {\n            for (const [storageId, lastHeads] of remoteHeads) {\n                const subscribedPeers = this.#theirSubscriptions.get(storageId);\n                if (subscribedPeers \u0026\u0026 subscribedPeers.has(peerId)) {\n                    this.emit(\"notify-remote-heads\", {\n                        targetId: peerId,\n                        documentId,\n                        heads: lastHeads.heads,\n                        timestamp: lastHeads.timestamp,\n                        storageId,\n                    });\n                }\n            }\n        }\n    }\n    #isPeerSubscribedToDoc(peerId, documentId) {\n        const subscribedDocs = this.#subscribedDocsByPeer.get(peerId);\n        return subscribedDocs \u0026\u0026 subscribedDocs.has(documentId);\n    }\n    /** Returns the (document, storageId) pairs which have changed after processing msg */\n    #changedHeads(msg) {\n        const changedHeads = [];\n        const { documentId, newHeads } = msg;\n        for (const [storageId, { heads, timestamp }] of Object.entries(newHeads)) {\n            if (!this.#ourSubscriptions.has(storageId) \u0026\u0026\n                !this.#theirSubscriptions.has(storageId)) {\n                continue;\n            }\n            let remote = this.#knownHeads.get(documentId);\n            if (!remote) {\n                remote = new Map();\n                this.#knownHeads.set(documentId, remote);\n            }\n            const docRemote = remote.get(storageId);\n            if (docRemote \u0026\u0026 docRemote.timestamp \u003e= timestamp) {\n                continue;\n            }\n            else {\n                remote.set(storageId, { timestamp, heads });\n                changedHeads.push({\n                    documentId,\n                    storageId: storageId,\n                    remoteHeads: heads,\n                    timestamp,\n                });\n            }\n        }\n        return changedHeads;\n    }\n}\n","/** Throttle\n * Returns a function with a built in throttle timer that runs after `delay` ms.\n *\n * This function differs from a conventional `throttle` in that it ensures the final\n * call will also execute and delays sending the first one until `delay` ms to allow\n * additional work to accumulate.\n *\n * Here's a diagram:\n *\n * calls +----++++++-----++----\n * dlay  ^--v ^--v^--v   ^--v\n * execs ---+----+---+------+--\n *\n * The goal in this design is to create batches of changes without flooding\n * communication or storage systems while still feeling responsive.\n * (By default we communicate at 10hz / every 100ms.)\n *\n * Note that the args go inside the parameter and you should be careful not to\n * recreate the function on each usage. (In React, see useMemo().)\n *\n *\n * Example usage:\n * const callback = throttle((ev) =\u003e { doSomethingExpensiveOrOccasional() }, 100)\n * target.addEventListener('frequent-event', callback);\n *\n */\nexport const throttle = (fn, delay) =\u003e {\n    let lastCall = Date.now();\n    let wait;\n    let timeout;\n    return function (...args) {\n        wait = lastCall + delay - Date.now();\n        clearTimeout(timeout);\n        timeout = setTimeout(() =\u003e {\n            fn(...args);\n            lastCall = Date.now();\n        }, wait);\n    };\n};\n","import debug from \"debug\";\nimport { EventEmitter } from \"eventemitter3\";\nimport { isEphemeralMessage, isRepoMessage, } from \"./messages.js\";\nconst getEphemeralMessageSource = (message) =\u003e `${message.senderId}:${message.sessionId}`;\nexport class NetworkSubsystem extends EventEmitter {\n    peerId;\n    peerMetadata;\n    #log;\n    #adaptersByPeer = {};\n    #count = 0;\n    #sessionId = Math.random().toString(36).slice(2);\n    #ephemeralSessionCounts = {};\n    adapters = [];\n    constructor(adapters, peerId, peerMetadata) {\n        super();\n        this.peerId = peerId;\n        this.peerMetadata = peerMetadata;\n        this.#log = debug(`automerge-repo:network:${this.peerId}`);\n        adapters.forEach(a =\u003e this.addNetworkAdapter(a));\n    }\n    disconnect() {\n        this.adapters.forEach(a =\u003e a.disconnect());\n    }\n    reconnect() {\n        this.adapters.forEach(a =\u003e a.connect(this.peerId));\n    }\n    addNetworkAdapter(networkAdapter) {\n        this.adapters.push(networkAdapter);\n        networkAdapter.on(\"peer-candidate\", ({ peerId, peerMetadata }) =\u003e {\n            this.#log(`peer candidate: ${peerId} `);\n            // TODO: This is where authentication would happen\n            // TODO: on reconnection, this would create problems!\n            // the server would see a reconnection as a late-arriving channel\n            // for an existing peer and decide to ignore it until the connection\n            // times out: turns out my ICE/SIP emulation laziness did not pay off here\n            if (!this.#adaptersByPeer[peerId]) {\n                // TODO: handle losing a server here\n                this.#adaptersByPeer[peerId] = networkAdapter;\n            }\n            this.emit(\"peer\", { peerId, peerMetadata });\n        });\n        networkAdapter.on(\"peer-disconnected\", ({ peerId }) =\u003e {\n            this.#log(`peer disconnected: ${peerId} `);\n            delete this.#adaptersByPeer[peerId];\n            this.emit(\"peer-disconnected\", { peerId });\n        });\n        networkAdapter.on(\"message\", msg =\u003e {\n            if (!isRepoMessage(msg)) {\n                this.#log(`invalid message: ${JSON.stringify(msg)}`);\n                return;\n            }\n            this.#log(`message from ${msg.senderId}`);\n            if (isEphemeralMessage(msg)) {\n                const source = getEphemeralMessageSource(msg);\n                if (this.#ephemeralSessionCounts[source] === undefined ||\n                    msg.count \u003e this.#ephemeralSessionCounts[source]) {\n                    this.#ephemeralSessionCounts[source] = msg.count;\n                    this.emit(\"message\", msg);\n                }\n                return;\n            }\n            this.emit(\"message\", msg);\n        });\n        networkAdapter.on(\"close\", () =\u003e {\n            this.#log(\"adapter closed\");\n            Object.entries(this.#adaptersByPeer).forEach(([peerId, other]) =\u003e {\n                if (other === networkAdapter) {\n                    delete this.#adaptersByPeer[peerId];\n                }\n            });\n        });\n        this.peerMetadata\n            .then(peerMetadata =\u003e {\n            networkAdapter.connect(this.peerId, peerMetadata);\n        })\n            .catch(err =\u003e {\n            this.#log(\"error connecting to network\", err);\n        });\n    }\n    // TODO: this probably introduces a race condition for the ready event\n    // but I plan to refactor that as part of this branch in another patch\n    removeNetworkAdapter(networkAdapter) {\n        this.adapters = this.adapters.filter(a =\u003e a !== networkAdapter);\n        networkAdapter.disconnect();\n    }\n    send(message) {\n        const peer = this.#adaptersByPeer[message.targetId];\n        if (!peer) {\n            this.#log(`Tried to send message but peer not found: ${message.targetId}`);\n            return;\n        }\n        /** Messages come in without a senderId and other required information; this is where we make\n         * sure they have everything they need.\n         */\n        const prepareMessage = (message) =\u003e {\n            if (message.type === \"ephemeral\") {\n                if (\"count\" in message) {\n                    // existing ephemeral message from another peer; pass on without changes\n                    return message;\n                }\n                else {\n                    // new ephemeral message from us; add our senderId as well as a counter and session id\n                    return {\n                        ...message,\n                        count: ++this.#count,\n                        sessionId: this.#sessionId,\n                        senderId: this.peerId,\n                    };\n                }\n            }\n            else {\n                // other message type; just add our senderId\n                return {\n                    ...message,\n                    senderId: this.peerId,\n                };\n            }\n        };\n        const outbound = prepareMessage(message);\n        this.#log(\"sending message %o\", outbound);\n        peer.send(outbound);\n    }\n    isReady = () =\u003e {\n        return this.adapters.every(a =\u003e a.isReady());\n    };\n    whenReady = async () =\u003e {\n        return Promise.all(this.adapters.map(a =\u003e a.whenReady()));\n    };\n}\n","// TYPE GUARDS\nexport const isRepoMessage = (message) =\u003e isSyncMessage(message) ||\n    isEphemeralMessage(message) ||\n    isRequestMessage(message) ||\n    isDocumentUnavailableMessage(message) ||\n    isRemoteSubscriptionControlMessage(message) ||\n    isRemoteHeadsChanged(message);\n// prettier-ignore\nexport const isDocumentUnavailableMessage = (msg) =\u003e msg.type === \"doc-unavailable\";\nexport const isRequestMessage = (msg) =\u003e msg.type === \"request\";\nexport const isSyncMessage = (msg) =\u003e msg.type === \"sync\";\nexport const isEphemeralMessage = (msg) =\u003e msg.type === \"ephemeral\";\n// prettier-ignore\nexport const isRemoteSubscriptionControlMessage = (msg) =\u003e msg.type === \"remote-subscription-change\";\nexport const isRemoteHeadsChanged = (msg) =\u003e msg.type === \"remote-heads-changed\";\n","import * as A from \"@automerge/automerge/slim/next\";\nimport debug from \"debug\";\nimport { headsAreSame } from \"../helpers/headsAreSame.js\";\nimport { mergeArrays } from \"../helpers/mergeArrays.js\";\nimport { keyHash, headsHash } from \"./keyHash.js\";\nimport { chunkTypeFromKey } from \"./chunkTypeFromKey.js\";\nimport * as Uuid from \"uuid\";\n/**\n * The storage subsystem is responsible for saving and loading Automerge documents to and from\n * storage adapter. It also provides a generic key/value storage interface for other uses.\n */\nexport class StorageSubsystem {\n    /** The storage adapter to use for saving and loading documents */\n    #storageAdapter;\n    /** Record of the latest heads we've loaded or saved for each document  */\n    #storedHeads = new Map();\n    /** Metadata on the chunks we've already loaded for each document */\n    #chunkInfos = new Map();\n    /** Flag to avoid compacting when a compaction is already underway */\n    #compacting = false;\n    #log = debug(`automerge-repo:storage-subsystem`);\n    constructor(storageAdapter) {\n        this.#storageAdapter = storageAdapter;\n    }\n    async id() {\n        const storedId = await this.#storageAdapter.load([\"storage-adapter-id\"]);\n        let id;\n        if (storedId) {\n            id = new TextDecoder().decode(storedId);\n        }\n        else {\n            id = Uuid.v4();\n            await this.#storageAdapter.save([\"storage-adapter-id\"], new TextEncoder().encode(id));\n        }\n        return id;\n    }\n    // ARBITRARY KEY/VALUE STORAGE\n    // The `load`, `save`, and `remove` methods are for generic key/value storage, as opposed to\n    // Automerge documents. For example, they're used by the LocalFirstAuthProvider to persist the\n    // encrypted team graph that encodes group membership and permissions.\n    //\n    // The namespace parameter is to prevent collisions with other users of the storage subsystem.\n    // Typically this will be the name of the plug-in, adapter, or other system that is using it. For\n    // example, the LocalFirstAuthProvider uses the namespace `LocalFirstAuthProvider`.\n    /** Loads a value from storage. */\n    async load(\n    /** Namespace to prevent collisions with other users of the storage subsystem. */\n    namespace, \n    /** Key to load. Typically a UUID or other unique identifier, but could be any string. */\n    key) {\n        const storageKey = [namespace, key];\n        return await this.#storageAdapter.load(storageKey);\n    }\n    /** Saves a value in storage. */\n    async save(\n    /** Namespace to prevent collisions with other users of the storage subsystem. */\n    namespace, \n    /** Key to load. Typically a UUID or other unique identifier, but could be any string. */\n    key, \n    /** Data to save, as a binary blob. */\n    data) {\n        const storageKey = [namespace, key];\n        await this.#storageAdapter.save(storageKey, data);\n    }\n    /** Removes a value from storage. */\n    async remove(\n    /** Namespace to prevent collisions with other users of the storage subsystem. */\n    namespace, \n    /** Key to remove. Typically a UUID or other unique identifier, but could be any string. */\n    key) {\n        const storageKey = [namespace, key];\n        await this.#storageAdapter.remove(storageKey);\n    }\n    // AUTOMERGE DOCUMENT STORAGE\n    /**\n     * Loads the Automerge document with the given ID from storage.\n     */\n    async loadDoc(documentId) {\n        // Load all the chunks for this document\n        const chunks = await this.#storageAdapter.loadRange([documentId]);\n        const binaries = [];\n        const chunkInfos = [];\n        for (const chunk of chunks) {\n            // chunks might have been deleted in the interim\n            if (chunk.data === undefined)\n                continue;\n            const chunkType = chunkTypeFromKey(chunk.key);\n            if (chunkType == null)\n                continue;\n            chunkInfos.push({\n                key: chunk.key,\n                type: chunkType,\n                size: chunk.data.length,\n            });\n            binaries.push(chunk.data);\n        }\n        this.#chunkInfos.set(documentId, chunkInfos);\n        // Merge the chunks into a single binary\n        const binary = mergeArrays(binaries);\n        if (binary.length === 0)\n            return null;\n        // Load into an Automerge document\n        const newDoc = A.loadIncremental(A.init(), binary);\n        // Record the latest heads for the document\n        this.#storedHeads.set(documentId, A.getHeads(newDoc));\n        return newDoc;\n    }\n    /**\n     * Saves the provided Automerge document to storage.\n     *\n     * @remarks\n     * Under the hood this makes incremental saves until the incremental size is greater than the\n     * snapshot size, at which point the document is compacted into a single snapshot.\n     */\n    async saveDoc(documentId, doc) {\n        // Don't bother saving if the document hasn't changed\n        if (!this.#shouldSave(documentId, doc))\n            return;\n        const sourceChunks = this.#chunkInfos.get(documentId) ?? [];\n        if (this.#shouldCompact(sourceChunks)) {\n            await this.#saveTotal(documentId, doc, sourceChunks);\n        }\n        else {\n            await this.#saveIncremental(documentId, doc);\n        }\n        this.#storedHeads.set(documentId, A.getHeads(doc));\n    }\n    /**\n     * Removes the Automerge document with the given ID from storage\n     */\n    async removeDoc(documentId) {\n        await this.#storageAdapter.removeRange([documentId, \"snapshot\"]);\n        await this.#storageAdapter.removeRange([documentId, \"incremental\"]);\n        await this.#storageAdapter.removeRange([documentId, \"sync-state\"]);\n    }\n    /**\n     * Saves just the incremental changes since the last save.\n     */\n    async #saveIncremental(documentId, doc) {\n        const binary = A.saveSince(doc, this.#storedHeads.get(documentId) ?? []);\n        if (binary \u0026\u0026 binary.length \u003e 0) {\n            const key = [documentId, \"incremental\", keyHash(binary)];\n            this.#log(`Saving incremental ${key} for document ${documentId}`);\n            await this.#storageAdapter.save(key, binary);\n            if (!this.#chunkInfos.has(documentId)) {\n                this.#chunkInfos.set(documentId, []);\n            }\n            this.#chunkInfos.get(documentId).push({\n                key,\n                type: \"incremental\",\n                size: binary.length,\n            });\n            this.#storedHeads.set(documentId, A.getHeads(doc));\n        }\n        else {\n            return Promise.resolve();\n        }\n    }\n    /**\n     * Compacts the document storage into a single shapshot.\n     */\n    async #saveTotal(documentId, doc, sourceChunks) {\n        this.#compacting = true;\n        const binary = A.save(doc);\n        const snapshotHash = headsHash(A.getHeads(doc));\n        const key = [documentId, \"snapshot\", snapshotHash];\n        const oldKeys = new Set(sourceChunks.map(c =\u003e c.key).filter(k =\u003e k[2] !== snapshotHash));\n        this.#log(`Saving snapshot ${key} for document ${documentId}`);\n        this.#log(`deleting old chunks ${Array.from(oldKeys)}`);\n        await this.#storageAdapter.save(key, binary);\n        for (const key of oldKeys) {\n            await this.#storageAdapter.remove(key);\n        }\n        const newChunkInfos = this.#chunkInfos.get(documentId)?.filter(c =\u003e !oldKeys.has(c.key)) ?? [];\n        newChunkInfos.push({ key, type: \"snapshot\", size: binary.length });\n        this.#chunkInfos.set(documentId, newChunkInfos);\n        this.#compacting = false;\n    }\n    async loadSyncState(documentId, storageId) {\n        const key = [documentId, \"sync-state\", storageId];\n        try {\n            const loaded = await this.#storageAdapter.load(key);\n            return loaded ? A.decodeSyncState(loaded) : undefined;\n        }\n        catch (e) {\n            this.#log(`Error loading sync state for ${documentId} from ${storageId}`);\n            return undefined;\n        }\n    }\n    async saveSyncState(documentId, storageId, syncState) {\n        const key = [documentId, \"sync-state\", storageId];\n        await this.#storageAdapter.save(key, A.encodeSyncState(syncState));\n    }\n    /**\n     * Returns true if the document has changed since the last time it was saved.\n     */\n    #shouldSave(documentId, doc) {\n        const oldHeads = this.#storedHeads.get(documentId);\n        if (!oldHeads) {\n            // we haven't saved this document before\n            return true;\n        }\n        const newHeads = A.getHeads(doc);\n        if (headsAreSame(newHeads, oldHeads)) {\n            // the document hasn't changed\n            return false;\n        }\n        return true; // the document has changed\n    }\n    /**\n     * We only compact if the incremental size is greater than the snapshot size.\n     */\n    #shouldCompact(sourceChunks) {\n        if (this.#compacting)\n            return false;\n        let snapshotSize = 0;\n        let incrementalSize = 0;\n        for (const chunk of sourceChunks) {\n            if (chunk.type === \"snapshot\") {\n                snapshotSize += chunk.size;\n            }\n            else {\n                incrementalSize += chunk.size;\n            }\n        }\n        // if the file is currently small, don't worry, just compact\n        // this might seem a bit arbitrary (1k is arbitrary) but is designed to ensure compaction\n        // for documents with only a single large change on top of an empty (or nearly empty) document\n        // for example: imported NPM modules, images, etc.\n        // if we have even more incrementals (so far) than the snapshot, compact\n        return snapshotSize \u003c 1024 || incrementalSize \u003e= snapshotSize;\n    }\n}\n","export function mergeArrays(myArrays) {\n    // Get the total length of all arrays.\n    let length = 0;\n    myArrays.forEach(item =\u003e {\n        length += item.length;\n    });\n    // Create a new array with total length and merge all source arrays.\n    const mergedArray = new Uint8Array(length);\n    let offset = 0;\n    myArrays.forEach(item =\u003e {\n        mergedArray.set(item, offset);\n        offset += item.length;\n    });\n    return mergedArray;\n}\n","import * as sha256 from \"fast-sha256\";\nimport { mergeArrays } from \"../helpers/mergeArrays.js\";\nexport function keyHash(binary) {\n    // calculate hash\n    const hash = sha256.hash(binary);\n    return bufferToHexString(hash);\n}\nexport function headsHash(heads) {\n    const encoder = new TextEncoder();\n    const headsbinary = mergeArrays(heads.map((h) =\u003e encoder.encode(h)));\n    return keyHash(headsbinary);\n}\nfunction bufferToHexString(data) {\n    return Array.from(data, byte =\u003e byte.toString(16).padStart(2, \"0\")).join(\"\");\n}\n","/**\n * Keys for storing Automerge documents are of the form:\n * ```ts\n * [documentId, \"snapshot\", hash]  // OR\n * [documentId, \"incremental\", hash]\n * ```\n * This function returns the chunk type (\"snapshot\" or \"incremental\") if the key is in one of these\n * forms.\n */\nexport function chunkTypeFromKey(key) {\n    if (key.length \u003c 2)\n        return null;\n    const chunkTypeStr = key[key.length - 2]; // next-to-last element in key\n    if (chunkTypeStr === \"snapshot\" || chunkTypeStr === \"incremental\") {\n        return chunkTypeStr;\n    }\n    return null;\n}\n","import debug from \"debug\";\nimport { stringifyAutomergeUrl } from \"../AutomergeUrl.js\";\nimport { DocSynchronizer } from \"./DocSynchronizer.js\";\nimport { Synchronizer } from \"./Synchronizer.js\";\nconst log = debug(\"automerge-repo:collectionsync\");\n/** A CollectionSynchronizer is responsible for synchronizing a DocCollection with peers. */\nexport class CollectionSynchronizer extends Synchronizer {\n    repo;\n    /** The set of peers we are connected with */\n    #peers = new Set();\n    /** A map of documentIds to their synchronizers */\n    /** @hidden */\n    docSynchronizers = {};\n    /** Used to determine if the document is know to the Collection and a synchronizer exists or is being set up */\n    #docSetUp = {};\n    constructor(repo) {\n        super();\n        this.repo = repo;\n    }\n    /** Returns a synchronizer for the given document, creating one if it doesn't already exist.  */\n    #fetchDocSynchronizer(documentId) {\n        if (!this.docSynchronizers[documentId]) {\n            const handle = this.repo.find(stringifyAutomergeUrl({ documentId }));\n            this.docSynchronizers[documentId] = this.#initDocSynchronizer(handle);\n        }\n        return this.docSynchronizers[documentId];\n    }\n    /** Creates a new docSynchronizer and sets it up to propagate messages */\n    #initDocSynchronizer(handle) {\n        const docSynchronizer = new DocSynchronizer({\n            handle,\n            onLoadSyncState: async (peerId) =\u003e {\n                if (!this.repo.storageSubsystem) {\n                    return;\n                }\n                const { storageId, isEphemeral } = this.repo.peerMetadataByPeerId[peerId] || {};\n                if (!storageId || isEphemeral) {\n                    return;\n                }\n                return this.repo.storageSubsystem.loadSyncState(handle.documentId, storageId);\n            },\n        });\n        docSynchronizer.on(\"message\", event =\u003e this.emit(\"message\", event));\n        docSynchronizer.on(\"open-doc\", event =\u003e this.emit(\"open-doc\", event));\n        docSynchronizer.on(\"sync-state\", event =\u003e this.emit(\"sync-state\", event));\n        return docSynchronizer;\n    }\n    /** returns an array of peerIds that we share this document generously with */\n    async #documentGenerousPeers(documentId) {\n        const peers = Array.from(this.#peers);\n        const generousPeers = [];\n        for (const peerId of peers) {\n            const okToShare = await this.repo.sharePolicy(peerId, documentId);\n            if (okToShare)\n                generousPeers.push(peerId);\n        }\n        return generousPeers;\n    }\n    // PUBLIC\n    /**\n     * When we receive a sync message for a document we haven't got in memory, we\n     * register it with the repo and start synchronizing\n     */\n    async receiveMessage(message) {\n        log(`onSyncMessage: ${message.senderId}, ${message.documentId}, ${\"data\" in message ? message.data.byteLength + \"bytes\" : \"\"}`);\n        const documentId = message.documentId;\n        if (!documentId) {\n            throw new Error(\"received a message with an invalid documentId\");\n        }\n        this.#docSetUp[documentId] = true;\n        const docSynchronizer = this.#fetchDocSynchronizer(documentId);\n        docSynchronizer.receiveMessage(message);\n        // Initiate sync with any new peers\n        const peers = await this.#documentGenerousPeers(documentId);\n        docSynchronizer.beginSync(peers.filter(peerId =\u003e !docSynchronizer.hasPeer(peerId)));\n    }\n    /**\n     * Starts synchronizing the given document with all peers that we share it generously with.\n     */\n    addDocument(documentId) {\n        // HACK: this is a hack to prevent us from adding the same document twice\n        if (this.#docSetUp[documentId]) {\n            return;\n        }\n        const docSynchronizer = this.#fetchDocSynchronizer(documentId);\n        void this.#documentGenerousPeers(documentId).then(peers =\u003e {\n            docSynchronizer.beginSync(peers);\n        });\n    }\n    // TODO: implement this\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    removeDocument(documentId) {\n        throw new Error(\"not implemented\");\n    }\n    /** Adds a peer and maybe starts synchronizing with them */\n    addPeer(peerId) {\n        log(`adding ${peerId} \u0026 synchronizing with them`);\n        if (this.#peers.has(peerId)) {\n            return;\n        }\n        this.#peers.add(peerId);\n        for (const docSynchronizer of Object.values(this.docSynchronizers)) {\n            const { documentId } = docSynchronizer;\n            void this.repo.sharePolicy(peerId, documentId).then(okToShare =\u003e {\n                if (okToShare)\n                    docSynchronizer.beginSync([peerId]);\n            });\n        }\n    }\n    /** Removes a peer and stops synchronizing with them */\n    removePeer(peerId) {\n        log(`removing peer ${peerId}`);\n        this.#peers.delete(peerId);\n        for (const docSynchronizer of Object.values(this.docSynchronizers)) {\n            docSynchronizer.endSync(peerId);\n        }\n    }\n    /** Returns a list of all connected peer ids */\n    get peers() {\n        return Array.from(this.#peers);\n    }\n    metrics() {\n        return Object.fromEntries(Object.entries(this.docSynchronizers).map(([documentId, synchronizer]) =\u003e {\n            return [documentId, synchronizer.metrics()];\n        }));\n    }\n}\n","import * as A from \"@automerge/automerge/slim/next\";\nimport { decode } from \"cbor-x\";\nimport debug from \"debug\";\nimport { READY, REQUESTING, UNAVAILABLE, } from \"../DocHandle.js\";\nimport { isRequestMessage, } from \"../network/messages.js\";\nimport { Synchronizer } from \"./Synchronizer.js\";\nimport { throttle } from \"../helpers/throttle.js\";\n/**\n * DocSynchronizer takes a handle to an Automerge document, and receives \u0026 dispatches sync messages\n * to bring it inline with all other peers' versions.\n */\nexport class DocSynchronizer extends Synchronizer {\n    #log;\n    syncDebounceRate = 100;\n    /** Active peers */\n    #peers = [];\n    #pendingSyncStateCallbacks = {};\n    #peerDocumentStatuses = {};\n    /** Sync state for each peer we've communicated with (including inactive peers) */\n    #syncStates = {};\n    #pendingSyncMessages = [];\n    #syncStarted = false;\n    #handle;\n    #onLoadSyncState;\n    constructor({ handle, onLoadSyncState }) {\n        super();\n        this.#handle = handle;\n        this.#onLoadSyncState =\n            onLoadSyncState ?? (() =\u003e Promise.resolve(undefined));\n        const docId = handle.documentId.slice(0, 5);\n        this.#log = debug(`automerge-repo:docsync:${docId}`);\n        handle.on(\"change\", throttle(() =\u003e this.#syncWithPeers(), this.syncDebounceRate));\n        handle.on(\"ephemeral-message-outbound\", payload =\u003e this.#broadcastToPeers(payload));\n        // Process pending sync messages immediately after the handle becomes ready.\n        void (async () =\u003e {\n            await handle.doc([READY, REQUESTING]);\n            this.#processAllPendingSyncMessages();\n        })();\n    }\n    get peerStates() {\n        return this.#peerDocumentStatuses;\n    }\n    get documentId() {\n        return this.#handle.documentId;\n    }\n    /// PRIVATE\n    async #syncWithPeers() {\n        this.#log(`syncWithPeers`);\n        const doc = await this.#handle.doc();\n        if (doc === undefined)\n            return;\n        this.#peers.forEach(peerId =\u003e this.#sendSyncMessage(peerId, doc));\n    }\n    async #broadcastToPeers({ data, }) {\n        this.#log(`broadcastToPeers`, this.#peers);\n        this.#peers.forEach(peerId =\u003e this.#sendEphemeralMessage(peerId, data));\n    }\n    #sendEphemeralMessage(peerId, data) {\n        this.#log(`sendEphemeralMessage -\u003e${peerId}`);\n        const message = {\n            type: \"ephemeral\",\n            targetId: peerId,\n            documentId: this.#handle.documentId,\n            data,\n        };\n        this.emit(\"message\", message);\n    }\n    #withSyncState(peerId, callback) {\n        this.#addPeer(peerId);\n        if (!(peerId in this.#peerDocumentStatuses)) {\n            this.#peerDocumentStatuses[peerId] = \"unknown\";\n        }\n        const syncState = this.#syncStates[peerId];\n        if (syncState) {\n            callback(syncState);\n            return;\n        }\n        let pendingCallbacks = this.#pendingSyncStateCallbacks[peerId];\n        if (!pendingCallbacks) {\n            this.#onLoadSyncState(peerId)\n                .then(syncState =\u003e {\n                this.#initSyncState(peerId, syncState ?? A.initSyncState());\n            })\n                .catch(err =\u003e {\n                this.#log(`Error loading sync state for ${peerId}: ${err}`);\n            });\n            pendingCallbacks = this.#pendingSyncStateCallbacks[peerId] = [];\n        }\n        pendingCallbacks.push(callback);\n    }\n    #addPeer(peerId) {\n        if (!this.#peers.includes(peerId)) {\n            this.#peers.push(peerId);\n            this.emit(\"open-doc\", { documentId: this.documentId, peerId });\n        }\n    }\n    #initSyncState(peerId, syncState) {\n        const pendingCallbacks = this.#pendingSyncStateCallbacks[peerId];\n        if (pendingCallbacks) {\n            for (const callback of pendingCallbacks) {\n                callback(syncState);\n            }\n        }\n        delete this.#pendingSyncStateCallbacks[peerId];\n        this.#syncStates[peerId] = syncState;\n    }\n    #setSyncState(peerId, syncState) {\n        this.#syncStates[peerId] = syncState;\n        this.emit(\"sync-state\", {\n            peerId,\n            syncState,\n            documentId: this.#handle.documentId,\n        });\n    }\n    #sendSyncMessage(peerId, doc) {\n        this.#log(`sendSyncMessage -\u003e${peerId}`);\n        this.#withSyncState(peerId, syncState =\u003e {\n            const [newSyncState, message] = A.generateSyncMessage(doc, syncState);\n            if (message) {\n                this.#setSyncState(peerId, newSyncState);\n                const isNew = A.getHeads(doc).length === 0;\n                if (!this.#handle.isReady() \u0026\u0026\n                    isNew \u0026\u0026\n                    newSyncState.sharedHeads.length === 0 \u0026\u0026\n                    !Object.values(this.#peerDocumentStatuses).includes(\"has\") \u0026\u0026\n                    this.#peerDocumentStatuses[peerId] === \"unknown\") {\n                    // we don't have the document (or access to it), so we request it\n                    this.emit(\"message\", {\n                        type: \"request\",\n                        targetId: peerId,\n                        documentId: this.#handle.documentId,\n                        data: message,\n                    });\n                }\n                else {\n                    this.emit(\"message\", {\n                        type: \"sync\",\n                        targetId: peerId,\n                        data: message,\n                        documentId: this.#handle.documentId,\n                    });\n                }\n                // if we have sent heads, then the peer now has or will have the document\n                if (!isNew) {\n                    this.#peerDocumentStatuses[peerId] = \"has\";\n                }\n            }\n        });\n    }\n    /// PUBLIC\n    hasPeer(peerId) {\n        return this.#peers.includes(peerId);\n    }\n    beginSync(peerIds) {\n        const noPeersWithDocument = peerIds.every(peerId =\u003e this.#peerDocumentStatuses[peerId] in [\"unavailable\", \"wants\"]);\n        // At this point if we don't have anything in our storage, we need to use an empty doc to sync\n        // with; but we don't want to surface that state to the front end\n        const docPromise = this.#handle\n            .doc([READY, REQUESTING, UNAVAILABLE])\n            .then(doc =\u003e {\n            // we register out peers first, then say that sync has started\n            this.#syncStarted = true;\n            this.#checkDocUnavailable();\n            const wasUnavailable = doc === undefined;\n            if (wasUnavailable \u0026\u0026 noPeersWithDocument) {\n                return;\n            }\n            // If the doc is unavailable we still need a blank document to generate\n            // the sync message from\n            return doc ?? A.init();\n        });\n        this.#log(`beginSync: ${peerIds.join(\", \")}`);\n        peerIds.forEach(peerId =\u003e {\n            this.#withSyncState(peerId, syncState =\u003e {\n                // HACK: if we have a sync state already, we round-trip it through the encoding system to make\n                // sure state is preserved. This prevents an infinite loop caused by failed attempts to send\n                // messages during disconnection.\n                // TODO: cover that case with a test and remove this hack\n                const reparsedSyncState = A.decodeSyncState(A.encodeSyncState(syncState));\n                this.#setSyncState(peerId, reparsedSyncState);\n                docPromise\n                    .then(doc =\u003e {\n                    if (doc) {\n                        this.#sendSyncMessage(peerId, doc);\n                    }\n                })\n                    .catch(err =\u003e {\n                    this.#log(`Error loading doc for ${peerId}: ${err}`);\n                });\n            });\n        });\n    }\n    endSync(peerId) {\n        this.#log(`removing peer ${peerId}`);\n        this.#peers = this.#peers.filter(p =\u003e p !== peerId);\n    }\n    receiveMessage(message) {\n        switch (message.type) {\n            case \"sync\":\n            case \"request\":\n                this.receiveSyncMessage(message);\n                break;\n            case \"ephemeral\":\n                this.receiveEphemeralMessage(message);\n                break;\n            case \"doc-unavailable\":\n                this.#peerDocumentStatuses[message.senderId] = \"unavailable\";\n                this.#checkDocUnavailable();\n                break;\n            default:\n                throw new Error(`unknown message type: ${message}`);\n        }\n    }\n    receiveEphemeralMessage(message) {\n        if (message.documentId !== this.#handle.documentId)\n            throw new Error(`channelId doesn't match documentId`);\n        const { senderId, data } = message;\n        const contents = decode(new Uint8Array(data));\n        this.#handle.emit(\"ephemeral-message\", {\n            handle: this.#handle,\n            senderId,\n            message: contents,\n        });\n        this.#peers.forEach(peerId =\u003e {\n            if (peerId === senderId)\n                return;\n            this.emit(\"message\", {\n                ...message,\n                targetId: peerId,\n            });\n        });\n    }\n    receiveSyncMessage(message) {\n        if (message.documentId !== this.#handle.documentId)\n            throw new Error(`channelId doesn't match documentId`);\n        // We need to block receiving the syncMessages until we've checked local storage\n        if (!this.#handle.inState([READY, REQUESTING, UNAVAILABLE])) {\n            this.#pendingSyncMessages.push({ message, received: new Date() });\n            return;\n        }\n        this.#processAllPendingSyncMessages();\n        this.#processSyncMessage(message);\n    }\n    #processSyncMessage(message) {\n        if (isRequestMessage(message)) {\n            this.#peerDocumentStatuses[message.senderId] = \"wants\";\n        }\n        this.#checkDocUnavailable();\n        // if the message has heads, then the peer has the document\n        if (A.decodeSyncMessage(message.data).heads.length \u003e 0) {\n            this.#peerDocumentStatuses[message.senderId] = \"has\";\n        }\n        this.#withSyncState(message.senderId, syncState =\u003e {\n            this.#handle.update(doc =\u003e {\n                const [newDoc, newSyncState] = A.receiveSyncMessage(doc, syncState, message.data);\n                this.#setSyncState(message.senderId, newSyncState);\n                // respond to just this peer (as required)\n                this.#sendSyncMessage(message.senderId, doc);\n                return newDoc;\n            });\n            this.#checkDocUnavailable();\n        });\n    }\n    #checkDocUnavailable() {\n        // if we know none of the peers have the document, tell all our peers that we don't either\n        if (this.#syncStarted \u0026\u0026\n            this.#handle.inState([REQUESTING]) \u0026\u0026\n            this.#peers.every(peerId =\u003e this.#peerDocumentStatuses[peerId] === \"unavailable\" ||\n                this.#peerDocumentStatuses[peerId] === \"wants\")) {\n            this.#peers\n                .filter(peerId =\u003e this.#peerDocumentStatuses[peerId] === \"wants\")\n                .forEach(peerId =\u003e {\n                const message = {\n                    type: \"doc-unavailable\",\n                    documentId: this.#handle.documentId,\n                    targetId: peerId,\n                };\n                this.emit(\"message\", message);\n            });\n            this.#handle.unavailable();\n        }\n    }\n    #processAllPendingSyncMessages() {\n        for (const message of this.#pendingSyncMessages) {\n            this.#processSyncMessage(message.message);\n        }\n        this.#pendingSyncMessages = [];\n    }\n    metrics() {\n        return {\n            peers: this.#peers,\n            size: this.#handle.metrics(),\n        };\n    }\n}\n","import { EventEmitter } from \"eventemitter3\";\nexport class Synchronizer extends EventEmitter {\n}\n","/* c8 ignore start */\nimport { EventEmitter } from \"eventemitter3\";\n/** An interface representing some way to connect to other peers\n *\n * @remarks\n * The {@link Repo} uses one or more `NetworkAdapter`s to connect to other peers.\n * Because the network may take some time to be ready the {@link Repo} will wait\n * until the adapter emits a `ready` event before it starts trying to use it\n *\n * This utility class can be used as a base to build a custom network adapter. It\n * is most useful as a simple way to add the necessary event emitter functionality\n */\nexport class NetworkAdapter extends EventEmitter {\n    peerId;\n    peerMetadata;\n}\n","/** A storage adapter represents some way of storing binary data for a {@link Repo}\n * @deprecated use {@link StorageAdapterInterface}\n *\n * @remarks\n * `StorageAdapter`s provide a key/value storage interface. The keys are arrays of strings\n * ({@link StorageKey}) and the values are binary blobs.\n */\nexport class StorageAdapter {\n}\n"],"version":3}

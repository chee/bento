@font-face {
	font-family: qp;
	src: url("/fonts/iosevka-qp-regular.ttf") format("truetype");
	display: swap;
}

@font-face {
	font-family: qp;
	src: url("/fonts/iosevka-qp-light.ttf") format("truetype");
	font-weight: light;
	display: swap;
}

::selection {
	background: transparent;
}

html {
	font-size: 2.2em;
	line-height: 1.15;
}

/*
 * todo
 *
 *  - make sure not to use any colours directly that aren't part of the
 * public interface.
 *
 * - separate the colours that are (named by their purpose) from those that
 * aren't (named by a colour or cute name).
 *
 * - enable theming
 */
bento-party {
	/*=START-OF-PUBLIC-API*/
	/* =page= */
	--fill: white;
	--line: black;
	--font-family: monospace;
	--page-fill: var(--fill);
	--page-line: var(--line);
	--scrollbar-bg: var(--fill);
	--scrollbar-fg: var(--fill);
	--focus-outline: var(--page-line);
	--drop-target-outline: var(--focus-outline);

	/* =machine= */
	--machine-fill: var(--page-fill);
	--machine-line: var(--page-line);
	--machine-shadow-color: var(--machine-line);
	--prominent-fill: var(--machine-line);
	--prominent-line: var(--machine-fill);
	--recording-fill: var(--prominent-fill);
	--recording-line: var(--prominent-line);

	/* =controls= */
	--controls-fill: var(--machine-fill);
	--controls-line: var(--machine-line);
	--master-controls-fill: var(--controls-fill);
	--master-controls-line: var(--controls-line);
	--layer-selector-name-style: lower-latin;
	--layer-selector-fill: var(--controls-fill);
	--layer-selector-line: var(--controls-line);
	--selected-layer-selector-fill: var(--prominent-fill);
	--selected-layer-selector-line: var(--prominent-line);
	--layer-options-fill: var(--selected-layer-selector-fill);
	--layer-options-line: var(--selected-layer-selector-line);

	/* =screen= */
	--screen-fill: var(--prominent-fill);
	--screen-line: var(--prominent-line);
	--region-fill: var(--machine-fill);
	--region-line: var(--machine-line);
	--drawing-region-fill: var(--region-fill);
	--drawing-region-line: var(--region-line);
	--screen-selector-fill: var(--screen-fill);
	--screen-selector-line: var(--screen-line);

	/* =grid= */
	--grid-fill: var(--machine-fill);
	--grid-line: var(--machine-line);

	/* =box= */
	--box-on-fill: var(--prominent-fill);
	--box-on-line: var(--prominent-line);
	--box-off-fill: var(--grid-fill);
	--box-off-line: var(--grid-line);
	--selected-box-outline: var(--focus-outline);
	/* :3d_glasses_emoji: */
	--box-fill-mix-pan-left: red;
	--box-fill-mix-pan-right: blue;
	--box-fill-mix-quiet: var(--box-off-fill);
	/* *END-OF-PUBLIC-API* */

	background: var(--page-fill);
}

bento-party[theme="cherries"] {
	--cherries-light: #ffe9ed;
	--cherries-dark: #cc3366;
	--holy-light: white;
	--holy-dark: black;
	--cherries-yellow: #ffd807;
	--2013-body-grey: #333;

	/* =FEATURES= */
	/* =page= */
	--font-family: qp, iosevka, monaco, monospace;
	--fill: var(--cherries-light);
	--line: var(--cherries-dark);
	--page-fill: color-mix(
		in srgb,
		var(--cherries-light) 80%,
		var(--holy-light)
	);
	--machine-shadow-color: color-mix(
		in srgb,
		var(--cherries-light) 90%,
		var(--holy-dark)
	);
	--machine-fill: var(--cherries-light);
	--region-fill: var(--cherries-yellow);
	--region-line: var(--2013-body-grey);
	--drawing-region-fill: #00ff99ee;
}

[theme="night"] {
	--font-family: menlo;
	--fill: black;
	--line: #66c;
	--page-fill: #000;
	--machine-shadow-color: black;
	--machine-fill: black;
	--prominent-line: #aaf;
	--prominent-fill: #000;
	--screen-fill: black;
	--screen-line: #f4a;
	--box-on-fill: #113;
	--region-fill: #339;
	--region-line: #f4a;
}

[theme="dw"] {
	--font-family: courier;
	--dark: black;
	--holy: white;
	--grey: #595959;
	--m8: #00efff;
	--fill: var(--dark);
	--line: var(--grey);
	--machine-shadow-color: var(--fill);
	--prominent-line: var(--holy);
	--prominent-fill: var(--fill);
	--screen-fill: var(--fill);
	--screen-line: var(--m8);
	--box-on-fill: var(--fill);
	--box-on-line: var(--m8);
	--selected-box-outline: var(--m8);
	--region-fill: var(--m8);
	--region-line: var(--fill);
	--layer-options-fill: var(--fill);
}

[theme="dark"] {
	--line: #666;
	--fill: black;
}

[screenreader] {
	position: absolute;
	left: -10000px;
	top: auto;
	width: 1px;
	height: 1px;
	overflow: hidden;
}

* {
	/* disable bouncing */
	overscroll-behavior: none;
	scrollbar-color: var(--scrollbar-bg) var(--scrollbar-fg);
}

body {
	/* remove margin from mosaic or whatever */
	margin: 0;
}

bento-party {
	--number-of-boxes: 4;
	--box-size: 2em;
	--box-gap: 0.25em;
	--total-width: calc(
		(var(--box-size) * var(--number-of-boxes)) +
			(var(--box-gap) * (var(--number-of-boxes) * 2))
	);
	font-family: var(--font-family);
	background: var(--page-fill);
	box-sizing: content-box;
	min-height: 100vh;
	display: flex;
	align-items: center;
	justify-content: center;
	flex-direction: column;
}

/* completely disable highlighting stuff everywhere */
.machine,
.machine * {
	--webkit-user-select: none;
	-webkit-touch-callout: none;
	-webkit-user-select: none;
	-khtml-user-select: none;
	-moz-user-select: none;
	-ms-user-select: none;
	user-select: none;
	-webkit-tap-highlight-color: rgba(0, 0, 0, 0);
}

.machine {
	background: var(--machine-fill);
	color: var(--machine-line);
	border: 1px solid currentColor;
	margin: 0;
	width: var(--total-width);
	position: relative;
	box-shadow: 0px 0px 50px 0px var(--machine-shadow-color);
}

fieldset {
	border: none;
	margin: 0;
	padding: 0;
}

.machine-controls :focus {
	outline: 2px dashed var(--focus-outline);
	outline-offset: 5px;
}

.machine-controls input,
.machine-controls select,
.machine-controls option,
.machine-controls .master-controls {
	-webkit-appearance: none;
	-moz-appearance: none;
	appearance: none;
	border: none;
	background: none;
	font-family: var(--font-family);
	font-size: 1em;
	color: currentColor;
	text-align: center;
}

.machine-controls button,
.machine-controls input[type="file"],
.machine-controls input[type="button"] {
	cursor: pointer;
}

/* to make the number selector go away on safari */
.master-controls input::-webkit-outer-spin-button,
.master-controls input::-webkit-inner-spin-button {
	-webkit-appearance: none;
	margin: 0;
}

.master-controls input[type="number"] {
	appearance: textfield;
}

.master-controls input[name="bpm"] {
	max-width: 3.5ch;
}

.master-controls {
	display: flex;
	justify-content: space-evenly;
	text-align: center;
	align-items: center;
	background: var(--controls-fill);
	color: var(--controls-line);
	border-bottom: 1px solid var(--machine-line);
}

.master-controls input {
	font-size: 1em;
	line-height: 1em;
}

.layer-selector {
	display: flex;
	justify-content: space-evenly;
	background: var(--layer-selector-fill);
	color: var(--layer-selector-line);
	counter-reset: layer;
}

.layer-selector label::before {
	counter-increment: layer;
	content: counters(layer, "", var(--layer-selector-name-style));
}

.layer-selector label {
	width: 100%;
	text-align: center;
	cursor: pointer;
	position: relative;
}

/* until the :has selector is real */
/* .layer-selector label:has(:checked)  */
.layer-selector label.checked {
	background: var(--selected-layer-selector-fill);
	color: var(--selected-layer-selector-line);
}

/* to be clickable with voice */
.layer-selector label input {
	position: absolute;
	top: 0;
	left: 0;
	right: 0;
	bottom: 0;
}

.layer-options {
	display: flex;
	justify-content: space-evenly;
	text-align: center;
	background: var(--layer-options-fill);
	color: var(--layer-options-line);
}

.layer-options select {
	font-size: 0.7rem;
}

.layer-options .upload {
	font-weight: bold;
	font-size: 0.5em;
	line-height: 1rem;
}

/*
 * the rest of the styles for label.recorder are with the [recording] styles
 * further down
*/
.layer-options .recorder {
	background: var(--layer-options-fill);
	color: var(--layer-options-line);
	border: none;
	appearance: none;
	font-size: 0.8em;
	line-height: 1rem;
	cursor: pointer;
}

/* todo consider <bento-screen> */

/*
 * allow selecting a screen by screen.scrollTo(screen.clientWidth * index, 0)
 */
.screen {
	width: var(--total-width);
	overflow: hidden;
	display: flex;
	flex-direction: row;
	scroll-snap-type: x mandatory;
	background: var(--screen-fill);
	color: var(--screen-line);
	scrollbar-width: 0;
}

.screen.switching {
	/* overflow-x: scroll; */
}

.screen figure {
	width: var(--total-width);
	margin: 0;
	height: 4em;
	scroll-snap-align: center;
	background: var(--screen-fill);
	color: var(--screen-line);
}

.screen figure canvas {
	width: var(--total-width);
	height: 100%;
}

[drop-target] {
	outline: 4px solid var(--drop-target-outline);
	border: 2px solid var(--drop-target-outline);
	outline-offset: 2px;
}

figure.waveform canvas {
	/* this disabled scrolling so selecting a region doesn't move you around */
	touch-action: none;
}

.screen-selector fieldset {
	text-align: center;
	display: grid;
	grid-template-columns: repeat(4, 1fr);
	font-size: 0.5em;
}

.screen-selector label {
	text-align: center;
	border-bottom: 1px solid;
	cursor: pointer;
	font-weight: bold;
}

.screen-selector label.checked {
	background: var(--screen-selector-fill);
	color: var(--screen-selector-line);
}

.screen-selector label:not(:last-child) {
	border-right: 1px solid;
}

.screen-selector label input {
	position: absolute;
	width: 5px;
	height: 5px;
}

/* todo consider moving these styles to their component */

bento-grid {
	background: var(--grid-background);
	text-align: center;
	display: grid;
	grid-template-rows: repeat(4, 1fr);
	grid-template-columns: repeat(4, 1fr);
	justify-items: center;
	gap: var(--box-gap);
	margin: var(--box-gap);
}

bento-box {
	--box-fill: var(--box-off-fill);
	--box-line: var(--box-off-line);
	background-color: var(--box-fill);
	color: var(--box-line);
	height: var(--box-size);
	width: var(--box-size);
	transition: background 0.022s ease-in-out;
	border: 1px solid;
	position: relative;
}

bento-box .wav {
	-webkit-user-drag: none;
	width: 100%;
	height: 100%;
	image-rendering: optimizeQuality;
	user-select: none;
	pointer-events: none;
	display: none;
	user-select: none;
}

bento-box[on][with-wav] .wav {
	display: block;
}

bento-box[selected] {
	/* prettier-ignore */
	box-shadow:
		-2px -2px 0 0 var(--grid-fill),
		02px 02px 0 0 var(--grid-fill),
		-2px 02px 0 0 var(--grid-fill),
		02px -2px 0 0 var(--grid-fill),
		-3px -3px 0 0 var(--selected-box-outline),
		03px 03px 0 0 var(--selected-box-outline),
		-3px 03px 0 0 var(--selected-box-outline),
		03px -3px 0 0 var(--selected-box-outline),
		-4px -4px 0 0 var(--selected-box-outline),
		04px 04px 0 0 var(--selected-box-outline),
		-4px 04px 0 0 var(--selected-box-outline),
		04px -4px 0 0 var(--selected-box-outline);
	border-color: currentColor;
}

bento-box[on] {
	--box-fill: var(--box-on-fill);
	--box-line: var(--box-on-line);
}

bento-box:not([on]) {
	background-image: none !important;
}

bento-box:focus:not([aria-selected="true"]) {
	outline: 2px dashed var(--focus-outline);
	outline-offset: 0;
}

bento-box:focus[aria-selected="true"] {
	outline: 0;
}

bento-box[playing]:after {
	content: "";
	height: 15%;
	width: 15%;
	position: absolute;
	left: 50%;
	bottom: 1%;
	transform: translate(-50%, -0%);
	border-radius: 100%;
	background: var(--box-line);
}

bento-box[disabled] {
	border: none;
}

/*
 * i will find god
 *
 * it possible to set --box-color in both pan and quiet? and do this
 * all in CSS? let's find out!!!!!!
 * todo adjust percentages when you've had a chance to play with it
 */
bento-box[on][pan="-6"] {
	--box-fill: color-mix(
		in srgb,
		var(--box-on-fill),
		var(--box-fill-mix-pan-left) 100%
	);
}

bento-box[on][pan="-5"] {
	--box-fill: color-mix(
		in srgb,
		var(--box-on-fill),
		var(--box-fill-mix-pan-left) 84%
	);
}

bento-box[on][pan="-4"] {
	--box-fill: color-mix(
		in srgb,
		var(--box-on-fill),
		var(--box-fill-mix-pan-left) 69%
	);
}

bento-box[on][pan="-3"] {
	--box-fill: color-mix(
		in srgb,
		var(--box-on-fill),
		var(--box-fill-mix-pan-left) 47%
	);
}

bento-box[on][pan="-2"] {
	--box-fill: color-mix(
		in srgb,
		var(--box-on-fill),
		var(--box-fill-mix-pan-left) 39%
	);
}

bento-box[on][pan="-1"] {
	--box-fill: color-mix(
		in srgb,
		var(--box-on-fill),
		var(--box-fill-mix-pan-left) 22%
	);
}

bento-box[on][pan="6"] {
	--box-fill: color-mix(
		in srgb,
		var(--box-on-fill),
		var(--box-fill-mix-pan-right) 100%
	);
}

bento-box[on][pan="5"] {
	--box-fill: color-mix(
		in srgb,
		var(--box-on-fill),
		var(--box-fill-mix-pan-right) 84%
	);
}

bento-box[on][pan="4"] {
	--box-fill: color-mix(
		in srgb,
		var(--box-on-fill),
		var(--box-fill-mix-pan-right) 69%
	);
}

bento-box[on][pan="3"] {
	--box-fill: color-mix(
		in srgb,
		var(--box-on-fill),
		var(--box-fill-mix-pan-right) 47%
	);
}

bento-box[on][pan="2"] {
	--box-fill: color-mix(
		in srgb,
		var(--box-on-fill),
		var(--box-fill-mix-pan-right) 39%
	);
}

bento-box[on][pan="1"] {
	--box-fill: color-mix(
		in srgb,
		var(--box-on-fill),
		var(--box-fill-mix-pan-right) 22%
	);
}

bento-box[on][quiet="1"] {
	background: color-mix(
		in srgb,
		var(--box-fill) 96%,
		var(--box-fill-mix-quiet)
	);
}
bento-box[on][quiet="2"] {
	background: color-mix(
		in srgb,
		var(--box-fill) 88%,
		var(--box-fill-mix-quiet)
	);
}
bento-box[on][quiet="3"] {
	background: color-mix(
		in srgb,
		var(--box-fill) 81%,
		var(--box-fill-mix-quiet)
	);
}
bento-box[on][quiet="4"] {
	background: color-mix(
		in srgb,
		var(--box-fill) 69%,
		var(--box-fill-mix-quiet)
	);
}
bento-box[on][quiet="5"] {
	background: color-mix(
		in srgb,
		var(--box-fill) 63%,
		var(--box-fill-mix-quiet)
	);
}
bento-box[on][quiet="6"] {
	background: color-mix(
		in srgb,
		var(--box-fill) 55%,
		var(--box-fill-mix-quiet)
	);
}
bento-box[on][quiet="7"] {
	background: color-mix(
		in srgb,
		var(--box-fill) 47%,
		var(--box-fill-mix-quiet)
	);
}
bento-box[on][quiet="8"] {
	background: color-mix(
		in srgb,
		var(--box-fill) 39%,
		var(--box-fill-mix-quiet)
	);
}
bento-box[on][quiet="9"] {
	background: color-mix(
		in srgb,
		var(--box-fill) 29%,
		var(--box-fill-mix-quiet)
	);
}
bento-box[on][quiet="10"] {
	background: color-mix(
		in srgb,
		var(--box-fill) 22%,
		var(--box-fill-mix-quiet)
	);
}
bento-box[on][quiet="11"] {
	background: color-mix(
		in srgb,
		var(--box-fill) 13%,
		var(--box-fill-mix-quiet)
	);
}
bento-box[on][quiet="12"] {
	background: color-mix(
		in srgb,
		var(--box-fill) 5%,
		var(--box-fill-mix-quiet)
	);
}
:not([chee]) [chee] {
	display: none;
}

@keyframes blink {
	50% {
		opacity: 0.5;
	}
}

[recording] .recorder {
	animation: blink 1s steps(5, start) infinite;
	cursor: unset;
}

@keyframes spinnygoweee {
	from {
		transform: rotate(360deg);
	}
	to {
		transform: rotate(0deg);
	}
}

.tape {
	display: none;
	position: absolute;
	top: 0;
	right: 0;
	bottom: 0;
	left: 0;
	z-index: 1;
	flex-direction: column;
	max-width: 100%;
	align-items: center;
	justify-content: center;
	background: var(--recording-fill);
}

.tape svg {
	background: var(--recording-fill);
}

[recording] {
	min-height: 100vh;
}

bento-party[recording] {
	background: var(--recording-fill);
	position: absolute;
	top: 0;
	right: 0;
	bottom: 0;
	left: 0;
}

[recording] .tape {
	display: flex;
}

.tape .message {
	font-size: 0.8rem;
	color: var(--recording-line);
	padding: 1em;
	padding-top: 0;
	margin: 0;
	margin-top: -1em;
}

.tape .counter {
	font-size: 0.8rem;
	color: var(--recording-line);
	margin: 0;
}

@keyframes fadeaway {
	to {
		opacity: 0;
	}
}

.tape .counter span:last-child {
	animation: fadeaway infinite 1.75s alternate ease-in-out;
}

.tape .counter:empty:after {
	content: " ";
	display: block;

	height: 1.15em;
}

.tape .tape-guide,
.tape .reel {
	animation: infinite spinnygoweee linear;
	transform-origin: center;
	transform-box: fill-box;
	transform-origin: center;
}

.tape .take-up {
	animation-duration: 1.5s;
}

.tape .supply {
	animation-duration: 2.5s;
}

@keyframes wobble {
	from {
		transform: skew(-0.1deg, 0.05deg);
	}
	50% {
		transform: skew(0.1deg, -0.05deg);
	}
}
.tape .spool {
	animation: infinite wobble linear 1.2s;
}
